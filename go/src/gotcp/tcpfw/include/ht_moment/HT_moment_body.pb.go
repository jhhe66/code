// Code generated by protoc-gen-go.
// source: HT_moment_body.proto
// DO NOT EDIT!

package ht_moment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RET_CODE int32

const (
	RET_CODE_RET_SUCCESS                  RET_CODE = 0
	RET_CODE_RET_PB_ERR                   RET_CODE = 1
	RET_CODE_RET_INTERNAL_ERR             RET_CODE = 2
	RET_CODE_RET_SESS_TIMEOUT_ERR         RET_CODE = 3
	RET_CODE_RET_INPUT_PARAM_ERR          RET_CODE = 4
	RET_CODE_RET_SSDB_ERR                 RET_CODE = 5
	RET_CODE_RET_NO_AUTH                  RET_CODE = 6
	RET_CODE_RET_COMMENT_NOT_CHANGED      RET_CODE = 10
	RET_CODE_RET_MOMENT_NOT_EXIST         RET_CODE = 11
	RET_CODE_RET_ILLEGAL_SUBMIT           RET_CODE = 12
	RET_CODE_RET_NO_MORE_CONTENT          RET_CODE = 13
	RET_CODE_RET_ACTION_NOT_ALLOWED       RET_CODE = 14
	RET_CODE_RET_IMAGE_NOT_ALLOWED        RET_CODE = 15
	RET_CODE_RET_BACKEND_TIMEOUTNOT       RET_CODE = 16
	RET_CODE_RET_FORBID_CMNT_WHEN_BLOCKED RET_CODE = 17
	RET_CODE_RET_NOT_CHANGE               RET_CODE = 18
	RET_CODE_RET_RESUBMIT                 RET_CODE = 101
	RET_CODE_RET_REDIS_INIT_ERR           RET_CODE = 102
	RET_CODE_RET_REDIS_GET_ERR            RET_CODE = 103
	RET_CODE_RET_REDIS_NOT_EXIST          RET_CODE = 104
	RET_CODE_RET_REDIS_UPDATE_ERR         RET_CODE = 105
)

var RET_CODE_name = map[int32]string{
	0:   "RET_SUCCESS",
	1:   "RET_PB_ERR",
	2:   "RET_INTERNAL_ERR",
	3:   "RET_SESS_TIMEOUT_ERR",
	4:   "RET_INPUT_PARAM_ERR",
	5:   "RET_SSDB_ERR",
	6:   "RET_NO_AUTH",
	10:  "RET_COMMENT_NOT_CHANGED",
	11:  "RET_MOMENT_NOT_EXIST",
	12:  "RET_ILLEGAL_SUBMIT",
	13:  "RET_NO_MORE_CONTENT",
	14:  "RET_ACTION_NOT_ALLOWED",
	15:  "RET_IMAGE_NOT_ALLOWED",
	16:  "RET_BACKEND_TIMEOUTNOT",
	17:  "RET_FORBID_CMNT_WHEN_BLOCKED",
	18:  "RET_NOT_CHANGE",
	101: "RET_RESUBMIT",
	102: "RET_REDIS_INIT_ERR",
	103: "RET_REDIS_GET_ERR",
	104: "RET_REDIS_NOT_EXIST",
	105: "RET_REDIS_UPDATE_ERR",
}
var RET_CODE_value = map[string]int32{
	"RET_SUCCESS":                  0,
	"RET_PB_ERR":                   1,
	"RET_INTERNAL_ERR":             2,
	"RET_SESS_TIMEOUT_ERR":         3,
	"RET_INPUT_PARAM_ERR":          4,
	"RET_SSDB_ERR":                 5,
	"RET_NO_AUTH":                  6,
	"RET_COMMENT_NOT_CHANGED":      10,
	"RET_MOMENT_NOT_EXIST":         11,
	"RET_ILLEGAL_SUBMIT":           12,
	"RET_NO_MORE_CONTENT":          13,
	"RET_ACTION_NOT_ALLOWED":       14,
	"RET_IMAGE_NOT_ALLOWED":        15,
	"RET_BACKEND_TIMEOUTNOT":       16,
	"RET_FORBID_CMNT_WHEN_BLOCKED": 17,
	"RET_NOT_CHANGE":               18,
	"RET_RESUBMIT":                 101,
	"RET_REDIS_INIT_ERR":           102,
	"RET_REDIS_GET_ERR":            103,
	"RET_REDIS_NOT_EXIST":          104,
	"RET_REDIS_UPDATE_ERR":         105,
}

func (x RET_CODE) Enum() *RET_CODE {
	p := new(RET_CODE)
	*p = x
	return p
}
func (x RET_CODE) String() string {
	return proto.EnumName(RET_CODE_name, int32(x))
}
func (x *RET_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RET_CODE_value, data, "RET_CODE")
	if err != nil {
		return err
	}
	*x = RET_CODE(value)
	return nil
}
func (RET_CODE) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type NOTIFY_TYPE int32

const (
	NOTIFY_TYPE_NOTIFY_LIKE       NOTIFY_TYPE = 0
	NOTIFY_TYPE_NOTIFY_CMNT       NOTIFY_TYPE = 1
	NOTIFY_TYPE_NOTIFY_SYS_DEL    NOTIFY_TYPE = 2
	NOTIFY_TYPE_NOTIFY_CMNT_REPLY NOTIFY_TYPE = 3
	NOTIFY_TYPE_NOTIFY_MODIFY     NOTIFY_TYPE = 4
)

var NOTIFY_TYPE_name = map[int32]string{
	0: "NOTIFY_LIKE",
	1: "NOTIFY_CMNT",
	2: "NOTIFY_SYS_DEL",
	3: "NOTIFY_CMNT_REPLY",
	4: "NOTIFY_MODIFY",
}
var NOTIFY_TYPE_value = map[string]int32{
	"NOTIFY_LIKE":       0,
	"NOTIFY_CMNT":       1,
	"NOTIFY_SYS_DEL":    2,
	"NOTIFY_CMNT_REPLY": 3,
	"NOTIFY_MODIFY":     4,
}

func (x NOTIFY_TYPE) Enum() *NOTIFY_TYPE {
	p := new(NOTIFY_TYPE)
	*p = x
	return p
}
func (x NOTIFY_TYPE) String() string {
	return proto.EnumName(NOTIFY_TYPE_name, int32(x))
}
func (x *NOTIFY_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NOTIFY_TYPE_value, data, "NOTIFY_TYPE")
	if err != nil {
		return err
	}
	*x = NOTIFY_TYPE(value)
	return nil
}
func (NOTIFY_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type COMMENT_TYPE int32

const (
	COMMENT_TYPE_UNKNOWN    COMMENT_TYPE = 0
	COMMENT_TYPE_TEXT       COMMENT_TYPE = 1
	COMMENT_TYPE_CORRECT    COMMENT_TYPE = 2
	COMMENT_TYPE_WITH_VOICE COMMENT_TYPE = 3
)

var COMMENT_TYPE_name = map[int32]string{
	0: "UNKNOWN",
	1: "TEXT",
	2: "CORRECT",
	3: "WITH_VOICE",
}
var COMMENT_TYPE_value = map[string]int32{
	"UNKNOWN":    0,
	"TEXT":       1,
	"CORRECT":    2,
	"WITH_VOICE": 3,
}

func (x COMMENT_TYPE) Enum() *COMMENT_TYPE {
	p := new(COMMENT_TYPE)
	*p = x
	return p
}
func (x COMMENT_TYPE) String() string {
	return proto.EnumName(COMMENT_TYPE_name, int32(x))
}
func (x *COMMENT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMENT_TYPE_value, data, "COMMENT_TYPE")
	if err != nil {
		return err
	}
	*x = COMMENT_TYPE(value)
	return nil
}
func (COMMENT_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type QUERY_TYPE int32

const (
	QUERY_TYPE_DEFAULT         QUERY_TYPE = 0
	QUERY_TYPE_PARTNERS        QUERY_TYPE = 1
	QUERY_TYPE_NEAREST_POST    QUERY_TYPE = 2
	QUERY_TYPE_NATIONALITY     QUERY_TYPE = 3
	QUERY_TYPE_SOURCE_LANGUAGE QUERY_TYPE = 4
	QUERY_TYPE_USER            QUERY_TYPE = 5
	QUERY_TYPE_ALL             QUERY_TYPE = 6
	QUERY_TYPE_CLASSMATE       QUERY_TYPE = 7
	QUERY_TYPE_ESSENCE_POST    QUERY_TYPE = 8
	QUERY_TYPE_LEARN           QUERY_TYPE = 9
)

var QUERY_TYPE_name = map[int32]string{
	0: "DEFAULT",
	1: "PARTNERS",
	2: "NEAREST_POST",
	3: "NATIONALITY",
	4: "SOURCE_LANGUAGE",
	5: "USER",
	6: "ALL",
	7: "CLASSMATE",
	8: "ESSENCE_POST",
	9: "LEARN",
}
var QUERY_TYPE_value = map[string]int32{
	"DEFAULT":         0,
	"PARTNERS":        1,
	"NEAREST_POST":    2,
	"NATIONALITY":     3,
	"SOURCE_LANGUAGE": 4,
	"USER":            5,
	"ALL":             6,
	"CLASSMATE":       7,
	"ESSENCE_POST":    8,
	"LEARN":           9,
}

func (x QUERY_TYPE) Enum() *QUERY_TYPE {
	p := new(QUERY_TYPE)
	*p = x
	return p
}
func (x QUERY_TYPE) String() string {
	return proto.EnumName(QUERY_TYPE_name, int32(x))
}
func (x *QUERY_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QUERY_TYPE_value, data, "QUERY_TYPE")
	if err != nil {
		return err
	}
	*x = QUERY_TYPE(value)
	return nil
}
func (QUERY_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type MntStatusOpType int32

const (
	MntStatusOpType_OP_RESTORE        MntStatusOpType = 0
	MntStatusOpType_OP_DELETE_BY_USER MntStatusOpType = 1
	MntStatusOpType_OP_HIDE           MntStatusOpType = 2
	MntStatusOpType_OP_DELETE         MntStatusOpType = 3
	// backend server op type
	MntStatusOpType_OP_FOR_FOLLOWER_ONLY MntStatusOpType = 10
)

var MntStatusOpType_name = map[int32]string{
	0:  "OP_RESTORE",
	1:  "OP_DELETE_BY_USER",
	2:  "OP_HIDE",
	3:  "OP_DELETE",
	10: "OP_FOR_FOLLOWER_ONLY",
}
var MntStatusOpType_value = map[string]int32{
	"OP_RESTORE":           0,
	"OP_DELETE_BY_USER":    1,
	"OP_HIDE":              2,
	"OP_DELETE":            3,
	"OP_FOR_FOLLOWER_ONLY": 10,
}

func (x MntStatusOpType) Enum() *MntStatusOpType {
	p := new(MntStatusOpType)
	*p = x
	return p
}
func (x MntStatusOpType) String() string {
	return proto.EnumName(MntStatusOpType_name, int32(x))
}
func (x *MntStatusOpType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MntStatusOpType_value, data, "MntStatusOpType")
	if err != nil {
		return err
	}
	*x = MntStatusOpType(value)
	return nil
}
func (MntStatusOpType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type OPERATORLIST int32

const (
	OPERATORLIST_OP_HIDE_LIST                OPERATORLIST = 1
	OPERATORLIST_OP_NOT_SHARE_LIST           OPERATORLIST = 2
	OPERATORLIST_OP_HIDE_AND_NOT_SHARE_LIST  OPERATORLIST = 3
	OPERATORLIST_OP_MOMENT_FOR_FOLLOWER_LIST OPERATORLIST = 8
	OPERATORLIST_OP_MOMENT_FOR_SELF_LIST     OPERATORLIST = 9
)

var OPERATORLIST_name = map[int32]string{
	1: "OP_HIDE_LIST",
	2: "OP_NOT_SHARE_LIST",
	3: "OP_HIDE_AND_NOT_SHARE_LIST",
	8: "OP_MOMENT_FOR_FOLLOWER_LIST",
	9: "OP_MOMENT_FOR_SELF_LIST",
}
var OPERATORLIST_value = map[string]int32{
	"OP_HIDE_LIST":                1,
	"OP_NOT_SHARE_LIST":           2,
	"OP_HIDE_AND_NOT_SHARE_LIST":  3,
	"OP_MOMENT_FOR_FOLLOWER_LIST": 8,
	"OP_MOMENT_FOR_SELF_LIST":     9,
}

func (x OPERATORLIST) Enum() *OPERATORLIST {
	p := new(OPERATORLIST)
	*p = x
	return p
}
func (x OPERATORLIST) String() string {
	return proto.EnumName(OPERATORLIST_name, int32(x))
}
func (x *OPERATORLIST) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OPERATORLIST_value, data, "OPERATORLIST")
	if err != nil {
		return err
	}
	*x = OPERATORLIST(value)
	return nil
}
func (OPERATORLIST) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type OPERATORTYPE int32

const (
	OPERATORTYPE_OP_UNKNOWN OPERATORTYPE = 0
	OPERATORTYPE_OP_ADD     OPERATORTYPE = 1
	OPERATORTYPE_OP_DEL     OPERATORTYPE = 2
)

var OPERATORTYPE_name = map[int32]string{
	0: "OP_UNKNOWN",
	1: "OP_ADD",
	2: "OP_DEL",
}
var OPERATORTYPE_value = map[string]int32{
	"OP_UNKNOWN": 0,
	"OP_ADD":     1,
	"OP_DEL":     2,
}

func (x OPERATORTYPE) Enum() *OPERATORTYPE {
	p := new(OPERATORTYPE)
	*p = x
	return p
}
func (x OPERATORTYPE) String() string {
	return proto.EnumName(OPERATORTYPE_name, int32(x))
}
func (x *OPERATORTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OPERATORTYPE_value, data, "OPERATORTYPE")
	if err != nil {
		return err
	}
	*x = OPERATORTYPE(value)
	return nil
}
func (OPERATORTYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

// ============后台管理================
// 对MID针对某个桶的隐藏或者显示策略，只能是1,2,4,8...
type MID_BUCKET_STATUS int32

const (
	MID_BUCKET_STATUS_BS_LEARN MID_BUCKET_STATUS = 1
	MID_BUCKET_STATUS_BS_SESS  MID_BUCKET_STATUS = 2
)

var MID_BUCKET_STATUS_name = map[int32]string{
	1: "BS_LEARN",
	2: "BS_SESS",
}
var MID_BUCKET_STATUS_value = map[string]int32{
	"BS_LEARN": 1,
	"BS_SESS":  2,
}

func (x MID_BUCKET_STATUS) Enum() *MID_BUCKET_STATUS {
	p := new(MID_BUCKET_STATUS)
	*p = x
	return p
}
func (x MID_BUCKET_STATUS) String() string {
	return proto.EnumName(MID_BUCKET_STATUS_name, int32(x))
}
func (x *MID_BUCKET_STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MID_BUCKET_STATUS_value, data, "MID_BUCKET_STATUS")
	if err != nil {
		return err
	}
	*x = MID_BUCKET_STATUS(value)
	return nil
}
func (MID_BUCKET_STATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

type Header struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Reason           []byte  `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Header) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Header) GetReason() []byte {
	if m != nil {
		return m.Reason
	}
	return nil
}

// url存储结构
type URLInfo struct {
	Url              []byte `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	ThumbUrl         []byte `protobuf:"bytes,2,opt,name=thumb_url" json:"thumb_url,omitempty"`
	Description      []byte `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Title            []byte `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *URLInfo) Reset()                    { *m = URLInfo{} }
func (m *URLInfo) String() string            { return proto.CompactTextString(m) }
func (*URLInfo) ProtoMessage()               {}
func (*URLInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *URLInfo) GetUrl() []byte {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *URLInfo) GetThumbUrl() []byte {
	if m != nil {
		return m.ThumbUrl
	}
	return nil
}

func (m *URLInfo) GetDescription() []byte {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *URLInfo) GetTitle() []byte {
	if m != nil {
		return m.Title
	}
	return nil
}

// 用于局部刷新的点赞信息
type LikedBody struct {
	Mid              []byte  `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	LikedCount       *uint64 `protobuf:"varint,2,opt,name=liked_count" json:"liked_count,omitempty"`
	LikedByMe        *uint32 `protobuf:"varint,3,opt,name=liked_by_me,def=0" json:"liked_by_me,omitempty"`
	LikedTs          *uint64 `protobuf:"varint,4,opt,name=liked_ts" json:"liked_ts,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LikedBody) Reset()                    { *m = LikedBody{} }
func (m *LikedBody) String() string            { return proto.CompactTextString(m) }
func (*LikedBody) ProtoMessage()               {}
func (*LikedBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

const Default_LikedBody_LikedByMe uint32 = 0

func (m *LikedBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *LikedBody) GetLikedCount() uint64 {
	if m != nil && m.LikedCount != nil {
		return *m.LikedCount
	}
	return 0
}

func (m *LikedBody) GetLikedByMe() uint32 {
	if m != nil && m.LikedByMe != nil {
		return *m.LikedByMe
	}
	return Default_LikedBody_LikedByMe
}

func (m *LikedBody) GetLikedTs() uint64 {
	if m != nil && m.LikedTs != nil {
		return *m.LikedTs
	}
	return 0
}

type VoiceBody struct {
	Url              []byte  `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Duration         *uint32 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	Size             *uint32 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VoiceBody) Reset()                    { *m = VoiceBody{} }
func (m *VoiceBody) String() string            { return proto.CompactTextString(m) }
func (*VoiceBody) ProtoMessage()               {}
func (*VoiceBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *VoiceBody) GetUrl() []byte {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *VoiceBody) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *VoiceBody) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

type ImageBody struct {
	ThumbUrl         []byte  `protobuf:"bytes,1,opt,name=thumb_url" json:"thumb_url,omitempty"`
	BigUrl           []byte  `protobuf:"bytes,2,opt,name=big_url" json:"big_url,omitempty"`
	Width            *uint32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height           *uint32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ImageBody) Reset()                    { *m = ImageBody{} }
func (m *ImageBody) String() string            { return proto.CompactTextString(m) }
func (*ImageBody) ProtoMessage()               {}
func (*ImageBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ImageBody) GetThumbUrl() []byte {
	if m != nil {
		return m.ThumbUrl
	}
	return nil
}

func (m *ImageBody) GetBigUrl() []byte {
	if m != nil {
		return m.BigUrl
	}
	return nil
}

func (m *ImageBody) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *ImageBody) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

// 保留服务器桶的分页信息
type BucketBody struct {
	BucketName       []byte  `protobuf:"bytes,1,opt,name=bucket_name" json:"bucket_name,omitempty"`
	Index            *uint64 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BucketBody) Reset()                    { *m = BucketBody{} }
func (m *BucketBody) String() string            { return proto.CompactTextString(m) }
func (*BucketBody) ProtoMessage()               {}
func (*BucketBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *BucketBody) GetBucketName() []byte {
	if m != nil {
		return m.BucketName
	}
	return nil
}

func (m *BucketBody) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type BucketInfo struct {
	BucketList       []*BucketBody `protobuf:"bytes,1,rep,name=bucket_list" json:"bucket_list,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *BucketInfo) Reset()                    { *m = BucketInfo{} }
func (m *BucketInfo) String() string            { return proto.CompactTextString(m) }
func (*BucketInfo) ProtoMessage()               {}
func (*BucketInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *BucketInfo) GetBucketList() []*BucketBody {
	if m != nil {
		return m.BucketList
	}
	return nil
}

type CorrectContent struct {
	Content          []byte `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Correction       []byte `protobuf:"bytes,2,opt,name=correction" json:"correction,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CorrectContent) Reset()                    { *m = CorrectContent{} }
func (m *CorrectContent) String() string            { return proto.CompactTextString(m) }
func (*CorrectContent) ProtoMessage()               {}
func (*CorrectContent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *CorrectContent) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CorrectContent) GetCorrection() []byte {
	if m != nil {
		return m.Correction
	}
	return nil
}

// 改错信息
type CorrectBody struct {
	Content          []byte            `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Correction       []byte            `protobuf:"bytes,2,opt,name=correction" json:"correction,omitempty"`
	Note             []byte            `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	CorrectContent   []*CorrectContent `protobuf:"bytes,4,rep,name=correct_content" json:"correct_content,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CorrectBody) Reset()                    { *m = CorrectBody{} }
func (m *CorrectBody) String() string            { return proto.CompactTextString(m) }
func (*CorrectBody) ProtoMessage()               {}
func (*CorrectBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *CorrectBody) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CorrectBody) GetCorrection() []byte {
	if m != nil {
		return m.Correction
	}
	return nil
}

func (m *CorrectBody) GetNote() []byte {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *CorrectBody) GetCorrectContent() []*CorrectContent {
	if m != nil {
		return m.CorrectContent
	}
	return nil
}

// 发帖人的个人信息，第一次加载要带上
type MomentUserInfoBody struct {
	Userid      *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Nickname    []byte  `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Nationality []byte  `protobuf:"bytes,3,opt,name=nationality" json:"nationality,omitempty"`
	HeadUrl     []byte  `protobuf:"bytes,4,opt,name=head_url" json:"head_url,omitempty"`
	// 母语信息
	NativeLang *uint32 `protobuf:"varint,5,opt,name=native_lang" json:"native_lang,omitempty"`
	TeachLang2 *uint32 `protobuf:"varint,6,opt,name=teach_lang2" json:"teach_lang2,omitempty"`
	TeachLang3 *uint32 `protobuf:"varint,7,opt,name=teach_lang3" json:"teach_lang3,omitempty"`
	// 教的语言等级
	TeachSkillevel2 *uint32 `protobuf:"varint,8,opt,name=teach_skillevel2" json:"teach_skillevel2,omitempty"`
	TeachSkillevel3 *uint32 `protobuf:"varint,9,opt,name=teach_skillevel3" json:"teach_skillevel3,omitempty"`
	// 学习语言
	Learnlang1 *uint32 `protobuf:"varint,10,opt,name=learnlang1" json:"learnlang1,omitempty"`
	Learnlang2 *uint32 `protobuf:"varint,11,opt,name=learnlang2" json:"learnlang2,omitempty"`
	Learnlang3 *uint32 `protobuf:"varint,12,opt,name=learnlang3" json:"learnlang3,omitempty"`
	// 学习语言等级
	Skillevel1       *uint32 `protobuf:"varint,13,opt,name=skillevel1" json:"skillevel1,omitempty"`
	Skillevel2       *uint32 `protobuf:"varint,14,opt,name=skillevel2" json:"skillevel2,omitempty"`
	Skillevel3       *uint32 `protobuf:"varint,15,opt,name=skillevel3" json:"skillevel3,omitempty"`
	BuyState         *uint32 `protobuf:"varint,16,opt,name=buy_state" json:"buy_state,omitempty"`
	UserType         *uint32 `protobuf:"varint,17,opt,name=user_type" json:"user_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MomentUserInfoBody) Reset()                    { *m = MomentUserInfoBody{} }
func (m *MomentUserInfoBody) String() string            { return proto.CompactTextString(m) }
func (*MomentUserInfoBody) ProtoMessage()               {}
func (*MomentUserInfoBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *MomentUserInfoBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *MomentUserInfoBody) GetNickname() []byte {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *MomentUserInfoBody) GetNationality() []byte {
	if m != nil {
		return m.Nationality
	}
	return nil
}

func (m *MomentUserInfoBody) GetHeadUrl() []byte {
	if m != nil {
		return m.HeadUrl
	}
	return nil
}

func (m *MomentUserInfoBody) GetNativeLang() uint32 {
	if m != nil && m.NativeLang != nil {
		return *m.NativeLang
	}
	return 0
}

func (m *MomentUserInfoBody) GetTeachLang2() uint32 {
	if m != nil && m.TeachLang2 != nil {
		return *m.TeachLang2
	}
	return 0
}

func (m *MomentUserInfoBody) GetTeachLang3() uint32 {
	if m != nil && m.TeachLang3 != nil {
		return *m.TeachLang3
	}
	return 0
}

func (m *MomentUserInfoBody) GetTeachSkillevel2() uint32 {
	if m != nil && m.TeachSkillevel2 != nil {
		return *m.TeachSkillevel2
	}
	return 0
}

func (m *MomentUserInfoBody) GetTeachSkillevel3() uint32 {
	if m != nil && m.TeachSkillevel3 != nil {
		return *m.TeachSkillevel3
	}
	return 0
}

func (m *MomentUserInfoBody) GetLearnlang1() uint32 {
	if m != nil && m.Learnlang1 != nil {
		return *m.Learnlang1
	}
	return 0
}

func (m *MomentUserInfoBody) GetLearnlang2() uint32 {
	if m != nil && m.Learnlang2 != nil {
		return *m.Learnlang2
	}
	return 0
}

func (m *MomentUserInfoBody) GetLearnlang3() uint32 {
	if m != nil && m.Learnlang3 != nil {
		return *m.Learnlang3
	}
	return 0
}

func (m *MomentUserInfoBody) GetSkillevel1() uint32 {
	if m != nil && m.Skillevel1 != nil {
		return *m.Skillevel1
	}
	return 0
}

func (m *MomentUserInfoBody) GetSkillevel2() uint32 {
	if m != nil && m.Skillevel2 != nil {
		return *m.Skillevel2
	}
	return 0
}

func (m *MomentUserInfoBody) GetSkillevel3() uint32 {
	if m != nil && m.Skillevel3 != nil {
		return *m.Skillevel3
	}
	return 0
}

func (m *MomentUserInfoBody) GetBuyState() uint32 {
	if m != nil && m.BuyState != nil {
		return *m.BuyState
	}
	return 0
}

func (m *MomentUserInfoBody) GetUserType() uint32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

type MomentIdResult struct {
	Mid              []byte  `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	LikedTs          *uint64 `protobuf:"varint,21,opt,name=liked_ts" json:"liked_ts,omitempty"`
	CommentTs        *uint64 `protobuf:"varint,22,opt,name=comment_ts" json:"comment_ts,omitempty"`
	Deleted          *uint32 `protobuf:"varint,23,opt,name=deleted,def=0" json:"deleted,omitempty"`
	OpReason         []byte  `protobuf:"bytes,24,opt,name=op_reason" json:"op_reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MomentIdResult) Reset()                    { *m = MomentIdResult{} }
func (m *MomentIdResult) String() string            { return proto.CompactTextString(m) }
func (*MomentIdResult) ProtoMessage()               {}
func (*MomentIdResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

const Default_MomentIdResult_Deleted uint32 = 0

func (m *MomentIdResult) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *MomentIdResult) GetLikedTs() uint64 {
	if m != nil && m.LikedTs != nil {
		return *m.LikedTs
	}
	return 0
}

func (m *MomentIdResult) GetCommentTs() uint64 {
	if m != nil && m.CommentTs != nil {
		return *m.CommentTs
	}
	return 0
}

func (m *MomentIdResult) GetDeleted() uint32 {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return Default_MomentIdResult_Deleted
}

func (m *MomentIdResult) GetOpReason() []byte {
	if m != nil {
		return m.OpReason
	}
	return nil
}

type CommentIdResult struct {
	Cid              []byte  `protobuf:"bytes,1,opt,name=cid" json:"cid,omitempty"`
	Deleted          *uint32 `protobuf:"varint,23,opt,name=deleted,def=0" json:"deleted,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CommentIdResult) Reset()                    { *m = CommentIdResult{} }
func (m *CommentIdResult) String() string            { return proto.CompactTextString(m) }
func (*CommentIdResult) ProtoMessage()               {}
func (*CommentIdResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

const Default_CommentIdResult_Deleted uint32 = 0

func (m *CommentIdResult) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *CommentIdResult) GetDeleted() uint32 {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return Default_CommentIdResult_Deleted
}

// 查看的帖子信息
type MomentBody struct {
	Userid           *uint32      `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte       `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	Content          []byte       `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	PostTime         *uint64      `protobuf:"varint,4,opt,name=post_time" json:"post_time,omitempty"`
	Voice            *VoiceBody   `protobuf:"bytes,10,opt,name=voice" json:"voice,omitempty"`
	Images           []*ImageBody `protobuf:"bytes,11,rep,name=images" json:"images,omitempty"`
	Position         []byte       `protobuf:"bytes,12,opt,name=position" json:"position,omitempty"`
	Latitude         *float32     `protobuf:"fixed32,13,opt,name=latitude" json:"latitude,omitempty"`
	Longitude        *float32     `protobuf:"fixed32,14,opt,name=longitude" json:"longitude,omitempty"`
	LangType         *uint32      `protobuf:"varint,15,opt,name=lang_type" json:"lang_type,omitempty"`
	StrLangType      []byte       `protobuf:"bytes,16,opt,name=str_lang_type" json:"str_lang_type,omitempty"`
	UrlInfo          *URLInfo     `protobuf:"bytes,17,opt,name=url_info" json:"url_info,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *MomentBody) Reset()                    { *m = MomentBody{} }
func (m *MomentBody) String() string            { return proto.CompactTextString(m) }
func (*MomentBody) ProtoMessage()               {}
func (*MomentBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *MomentBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *MomentBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *MomentBody) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MomentBody) GetPostTime() uint64 {
	if m != nil && m.PostTime != nil {
		return *m.PostTime
	}
	return 0
}

func (m *MomentBody) GetVoice() *VoiceBody {
	if m != nil {
		return m.Voice
	}
	return nil
}

func (m *MomentBody) GetImages() []*ImageBody {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *MomentBody) GetPosition() []byte {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MomentBody) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *MomentBody) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *MomentBody) GetLangType() uint32 {
	if m != nil && m.LangType != nil {
		return *m.LangType
	}
	return 0
}

func (m *MomentBody) GetStrLangType() []byte {
	if m != nil {
		return m.StrLangType
	}
	return nil
}

func (m *MomentBody) GetUrlInfo() *URLInfo {
	if m != nil {
		return m.UrlInfo
	}
	return nil
}

// 回复人的信息
type ReplyInfo struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Nickname         []byte  `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	UserType         *uint32 `protobuf:"varint,3,opt,name=user_type" json:"user_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReplyInfo) Reset()                    { *m = ReplyInfo{} }
func (m *ReplyInfo) String() string            { return proto.CompactTextString(m) }
func (*ReplyInfo) ProtoMessage()               {}
func (*ReplyInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ReplyInfo) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *ReplyInfo) GetNickname() []byte {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *ReplyInfo) GetUserType() uint32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

// 评论的信息
type CommentBody struct {
	Userid           *uint32       `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Deleted          *uint32       `protobuf:"varint,2,opt,name=deleted" json:"deleted,omitempty"`
	Cid              []byte        `protobuf:"bytes,3,opt,name=cid" json:"cid,omitempty"`
	Ctype            *COMMENT_TYPE `protobuf:"varint,7,opt,name=ctype,enum=ht.moment.COMMENT_TYPE,def=1" json:"ctype,omitempty"`
	Content          []byte        `protobuf:"bytes,8,opt,name=content" json:"content,omitempty"`
	Correction       *CorrectBody  `protobuf:"bytes,9,opt,name=correction" json:"correction,omitempty"`
	PostTime         *uint64       `protobuf:"varint,10,opt,name=post_time" json:"post_time,omitempty"`
	ToidList         []*ReplyInfo  `protobuf:"bytes,11,rep,name=toid_list" json:"toid_list,omitempty"`
	Voice            *VoiceBody    `protobuf:"bytes,12,opt,name=voice" json:"voice,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CommentBody) Reset()                    { *m = CommentBody{} }
func (m *CommentBody) String() string            { return proto.CompactTextString(m) }
func (*CommentBody) ProtoMessage()               {}
func (*CommentBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

const Default_CommentBody_Ctype COMMENT_TYPE = COMMENT_TYPE_TEXT

func (m *CommentBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *CommentBody) GetDeleted() uint32 {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return 0
}

func (m *CommentBody) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *CommentBody) GetCtype() COMMENT_TYPE {
	if m != nil && m.Ctype != nil {
		return *m.Ctype
	}
	return Default_CommentBody_Ctype
}

func (m *CommentBody) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CommentBody) GetCorrection() *CorrectBody {
	if m != nil {
		return m.Correction
	}
	return nil
}

func (m *CommentBody) GetPostTime() uint64 {
	if m != nil && m.PostTime != nil {
		return *m.PostTime
	}
	return 0
}

func (m *CommentBody) GetToidList() []*ReplyInfo {
	if m != nil {
		return m.ToidList
	}
	return nil
}

func (m *CommentBody) GetVoice() *VoiceBody {
	if m != nil {
		return m.Voice
	}
	return nil
}

// view 评论信息 - 附加在信息流后面的-简单信息
type BaseComment struct {
	Nickname         []byte       `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	UserType         *uint32      `protobuf:"varint,3,opt,name=user_type" json:"user_type,omitempty"`
	CommentBody      *CommentBody `protobuf:"bytes,10,opt,name=comment_body" json:"comment_body,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *BaseComment) Reset()                    { *m = BaseComment{} }
func (m *BaseComment) String() string            { return proto.CompactTextString(m) }
func (*BaseComment) ProtoMessage()               {}
func (*BaseComment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *BaseComment) GetNickname() []byte {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *BaseComment) GetUserType() uint32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *BaseComment) GetCommentBody() *CommentBody {
	if m != nil {
		return m.CommentBody
	}
	return nil
}

// view 评论信息 - 某个帖子的
type DetailComment struct {
	Nickname         []byte       `protobuf:"bytes,1,opt,name=nickname" json:"nickname,omitempty"`
	Nationality      []byte       `protobuf:"bytes,2,opt,name=nationality" json:"nationality,omitempty"`
	HeadUrl          []byte       `protobuf:"bytes,3,opt,name=head_url" json:"head_url,omitempty"`
	BuyState         *uint32      `protobuf:"varint,4,opt,name=buy_state" json:"buy_state,omitempty"`
	UserType         *uint32      `protobuf:"varint,5,opt,name=user_type" json:"user_type,omitempty"`
	CommentBody      *CommentBody `protobuf:"bytes,10,opt,name=comment_body" json:"comment_body,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DetailComment) Reset()                    { *m = DetailComment{} }
func (m *DetailComment) String() string            { return proto.CompactTextString(m) }
func (*DetailComment) ProtoMessage()               {}
func (*DetailComment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *DetailComment) GetNickname() []byte {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *DetailComment) GetNationality() []byte {
	if m != nil {
		return m.Nationality
	}
	return nil
}

func (m *DetailComment) GetHeadUrl() []byte {
	if m != nil {
		return m.HeadUrl
	}
	return nil
}

func (m *DetailComment) GetBuyState() uint32 {
	if m != nil && m.BuyState != nil {
		return *m.BuyState
	}
	return 0
}

func (m *DetailComment) GetUserType() uint32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *DetailComment) GetCommentBody() *CommentBody {
	if m != nil {
		return m.CommentBody
	}
	return nil
}

// 多个帖子的精简评论信息,用于局部刷新
type BaseCommentTable struct {
	Mid              []byte         `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	CommentCount     *uint64        `protobuf:"varint,2,opt,name=comment_count" json:"comment_count,omitempty"`
	CommentTs        *uint64        `protobuf:"varint,3,opt,name=comment_ts" json:"comment_ts,omitempty"`
	CommentByMe      *uint32        `protobuf:"varint,4,opt,name=comment_by_me,def=0" json:"comment_by_me,omitempty"`
	CommentList      []*BaseComment `protobuf:"bytes,10,rep,name=comment_list" json:"comment_list,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BaseCommentTable) Reset()                    { *m = BaseCommentTable{} }
func (m *BaseCommentTable) String() string            { return proto.CompactTextString(m) }
func (*BaseCommentTable) ProtoMessage()               {}
func (*BaseCommentTable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

const Default_BaseCommentTable_CommentByMe uint32 = 0

func (m *BaseCommentTable) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *BaseCommentTable) GetCommentCount() uint64 {
	if m != nil && m.CommentCount != nil {
		return *m.CommentCount
	}
	return 0
}

func (m *BaseCommentTable) GetCommentTs() uint64 {
	if m != nil && m.CommentTs != nil {
		return *m.CommentTs
	}
	return 0
}

func (m *BaseCommentTable) GetCommentByMe() uint32 {
	if m != nil && m.CommentByMe != nil {
		return *m.CommentByMe
	}
	return Default_BaseCommentTable_CommentByMe
}

func (m *BaseCommentTable) GetCommentList() []*BaseComment {
	if m != nil {
		return m.CommentList
	}
	return nil
}

// 单个帖子信息
type MomentBlockInfo struct {
	User             *MomentUserInfoBody `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Moment           *MomentBody         `protobuf:"bytes,2,opt,name=moment" json:"moment,omitempty"`
	CommentList      []*BaseComment      `protobuf:"bytes,3,rep,name=comment_list" json:"comment_list,omitempty"`
	Deleted          *uint32             `protobuf:"varint,6,opt,name=deleted,def=0" json:"deleted,omitempty"`
	LikedByMe        *uint32             `protobuf:"varint,8,opt,name=liked_by_me,def=0" json:"liked_by_me,omitempty"`
	CommentByMe      *uint32             `protobuf:"varint,9,opt,name=comment_by_me,def=0" json:"comment_by_me,omitempty"`
	LikedCount       *uint64             `protobuf:"varint,7,opt,name=liked_count,def=0" json:"liked_count,omitempty"`
	CommentCount     *uint64             `protobuf:"varint,10,opt,name=comment_count" json:"comment_count,omitempty"`
	LikedTs          *uint64             `protobuf:"varint,21,opt,name=liked_ts" json:"liked_ts,omitempty"`
	CommentTs        *uint64             `protobuf:"varint,22,opt,name=comment_ts" json:"comment_ts,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *MomentBlockInfo) Reset()                    { *m = MomentBlockInfo{} }
func (m *MomentBlockInfo) String() string            { return proto.CompactTextString(m) }
func (*MomentBlockInfo) ProtoMessage()               {}
func (*MomentBlockInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

const Default_MomentBlockInfo_Deleted uint32 = 0
const Default_MomentBlockInfo_LikedByMe uint32 = 0
const Default_MomentBlockInfo_CommentByMe uint32 = 0
const Default_MomentBlockInfo_LikedCount uint64 = 0

func (m *MomentBlockInfo) GetUser() *MomentUserInfoBody {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *MomentBlockInfo) GetMoment() *MomentBody {
	if m != nil {
		return m.Moment
	}
	return nil
}

func (m *MomentBlockInfo) GetCommentList() []*BaseComment {
	if m != nil {
		return m.CommentList
	}
	return nil
}

func (m *MomentBlockInfo) GetDeleted() uint32 {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return Default_MomentBlockInfo_Deleted
}

func (m *MomentBlockInfo) GetLikedByMe() uint32 {
	if m != nil && m.LikedByMe != nil {
		return *m.LikedByMe
	}
	return Default_MomentBlockInfo_LikedByMe
}

func (m *MomentBlockInfo) GetCommentByMe() uint32 {
	if m != nil && m.CommentByMe != nil {
		return *m.CommentByMe
	}
	return Default_MomentBlockInfo_CommentByMe
}

func (m *MomentBlockInfo) GetLikedCount() uint64 {
	if m != nil && m.LikedCount != nil {
		return *m.LikedCount
	}
	return Default_MomentBlockInfo_LikedCount
}

func (m *MomentBlockInfo) GetCommentCount() uint64 {
	if m != nil && m.CommentCount != nil {
		return *m.CommentCount
	}
	return 0
}

func (m *MomentBlockInfo) GetLikedTs() uint64 {
	if m != nil && m.LikedTs != nil {
		return *m.LikedTs
	}
	return 0
}

func (m *MomentBlockInfo) GetCommentTs() uint64 {
	if m != nil && m.CommentTs != nil {
		return *m.CommentTs
	}
	return 0
}

// 系统通知
type NotifyInfo struct {
	Userid           *uint32       `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Type             *NOTIFY_TYPE  `protobuf:"varint,2,opt,name=type,enum=ht.moment.NOTIFY_TYPE" json:"type,omitempty"`
	Mid              []byte        `protobuf:"bytes,3,opt,name=mid" json:"mid,omitempty"`
	MidDeleted       *uint32       `protobuf:"varint,4,opt,name=mid_deleted" json:"mid_deleted,omitempty"`
	MmntContent      []byte        `protobuf:"bytes,5,opt,name=mmnt_content" json:"mmnt_content,omitempty"`
	Cid              []byte        `protobuf:"bytes,6,opt,name=cid" json:"cid,omitempty"`
	CidDeleted       *uint32       `protobuf:"varint,7,opt,name=cid_deleted" json:"cid_deleted,omitempty"`
	CmntContent      []byte        `protobuf:"bytes,8,opt,name=cmnt_content" json:"cmnt_content,omitempty"`
	Images           *ImageBody    `protobuf:"bytes,9,opt,name=images" json:"images,omitempty"`
	Nationality      []byte        `protobuf:"bytes,10,opt,name=nationality" json:"nationality,omitempty"`
	Nickname         []byte        `protobuf:"bytes,11,opt,name=nickname" json:"nickname,omitempty"`
	HeadUrl          []byte        `protobuf:"bytes,12,opt,name=head_url" json:"head_url,omitempty"`
	PostTime         *uint64       `protobuf:"varint,13,opt,name=post_time" json:"post_time,omitempty"`
	BuyState         *uint32       `protobuf:"varint,14,opt,name=buy_state" json:"buy_state,omitempty"`
	UserType         *uint32       `protobuf:"varint,15,opt,name=user_type" json:"user_type,omitempty"`
	ToidList         []*ReplyInfo  `protobuf:"bytes,16,rep,name=toid_list" json:"toid_list,omitempty"`
	MsgId            *uint32       `protobuf:"varint,17,opt,name=msg_id" json:"msg_id,omitempty"`
	TargetUid        *uint32       `protobuf:"varint,18,opt,name=target_uid" json:"target_uid,omitempty"`
	Ctype            *COMMENT_TYPE `protobuf:"varint,19,opt,name=ctype,enum=ht.moment.COMMENT_TYPE" json:"ctype,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *NotifyInfo) Reset()                    { *m = NotifyInfo{} }
func (m *NotifyInfo) String() string            { return proto.CompactTextString(m) }
func (*NotifyInfo) ProtoMessage()               {}
func (*NotifyInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *NotifyInfo) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *NotifyInfo) GetType() NOTIFY_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return NOTIFY_TYPE_NOTIFY_LIKE
}

func (m *NotifyInfo) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *NotifyInfo) GetMidDeleted() uint32 {
	if m != nil && m.MidDeleted != nil {
		return *m.MidDeleted
	}
	return 0
}

func (m *NotifyInfo) GetMmntContent() []byte {
	if m != nil {
		return m.MmntContent
	}
	return nil
}

func (m *NotifyInfo) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *NotifyInfo) GetCidDeleted() uint32 {
	if m != nil && m.CidDeleted != nil {
		return *m.CidDeleted
	}
	return 0
}

func (m *NotifyInfo) GetCmntContent() []byte {
	if m != nil {
		return m.CmntContent
	}
	return nil
}

func (m *NotifyInfo) GetImages() *ImageBody {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *NotifyInfo) GetNationality() []byte {
	if m != nil {
		return m.Nationality
	}
	return nil
}

func (m *NotifyInfo) GetNickname() []byte {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *NotifyInfo) GetHeadUrl() []byte {
	if m != nil {
		return m.HeadUrl
	}
	return nil
}

func (m *NotifyInfo) GetPostTime() uint64 {
	if m != nil && m.PostTime != nil {
		return *m.PostTime
	}
	return 0
}

func (m *NotifyInfo) GetBuyState() uint32 {
	if m != nil && m.BuyState != nil {
		return *m.BuyState
	}
	return 0
}

func (m *NotifyInfo) GetUserType() uint32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *NotifyInfo) GetToidList() []*ReplyInfo {
	if m != nil {
		return m.ToidList
	}
	return nil
}

func (m *NotifyInfo) GetMsgId() uint32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func (m *NotifyInfo) GetTargetUid() uint32 {
	if m != nil && m.TargetUid != nil {
		return *m.TargetUid
	}
	return 0
}

func (m *NotifyInfo) GetCtype() COMMENT_TYPE {
	if m != nil && m.Ctype != nil {
		return *m.Ctype
	}
	return COMMENT_TYPE_UNKNOWN
}

// //////////////////////////////////////下面是提交协议////////////////////////////////////
// [Client to Server]提交帖子信息
type PostMomentReqBody struct {
	Moment           *MomentBody `protobuf:"bytes,1,opt,name=moment" json:"moment,omitempty"`
	Ostype           *uint32     `protobuf:"varint,15,opt,name=ostype" json:"ostype,omitempty"`
	Version          *uint32     `protobuf:"varint,16,opt,name=version" json:"version,omitempty"`
	Token            []byte      `protobuf:"bytes,17,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *PostMomentReqBody) Reset()                    { *m = PostMomentReqBody{} }
func (m *PostMomentReqBody) String() string            { return proto.CompactTextString(m) }
func (*PostMomentReqBody) ProtoMessage()               {}
func (*PostMomentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *PostMomentReqBody) GetMoment() *MomentBody {
	if m != nil {
		return m.Moment
	}
	return nil
}

func (m *PostMomentReqBody) GetOstype() uint32 {
	if m != nil && m.Ostype != nil {
		return *m.Ostype
	}
	return 0
}

func (m *PostMomentReqBody) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *PostMomentReqBody) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// [Server to Client ]返回状态和相关信息
type PostMomentRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Mid              []byte  `protobuf:"bytes,11,opt,name=mid" json:"mid,omitempty"`
	PostTime         *uint64 `protobuf:"varint,12,opt,name=post_time" json:"post_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PostMomentRspBody) Reset()                    { *m = PostMomentRspBody{} }
func (m *PostMomentRspBody) String() string            { return proto.CompactTextString(m) }
func (*PostMomentRspBody) ProtoMessage()               {}
func (*PostMomentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *PostMomentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PostMomentRspBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *PostMomentRspBody) GetPostTime() uint64 {
	if m != nil && m.PostTime != nil {
		return *m.PostTime
	}
	return 0
}

// [Client to Server]提交喜欢信息
type PostLikeReqBody struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte  `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	LikeOrNot        *uint32 `protobuf:"varint,3,opt,name=like_or_not,def=0" json:"like_or_not,omitempty"`
	Token            []byte  `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PostLikeReqBody) Reset()                    { *m = PostLikeReqBody{} }
func (m *PostLikeReqBody) String() string            { return proto.CompactTextString(m) }
func (*PostLikeReqBody) ProtoMessage()               {}
func (*PostLikeReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

const Default_PostLikeReqBody_LikeOrNot uint32 = 0

func (m *PostLikeReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *PostLikeReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *PostLikeReqBody) GetLikeOrNot() uint32 {
	if m != nil && m.LikeOrNot != nil {
		return *m.LikeOrNot
	}
	return Default_PostLikeReqBody_LikeOrNot
}

func (m *PostLikeReqBody) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// [Server to Client ]返回成功信息
type PostLikeRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Mid              []byte        `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	NotifyList       []*NotifyInfo `protobuf:"bytes,10,rep,name=notify_list" json:"notify_list,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PostLikeRspBody) Reset()                    { *m = PostLikeRspBody{} }
func (m *PostLikeRspBody) String() string            { return proto.CompactTextString(m) }
func (*PostLikeRspBody) ProtoMessage()               {}
func (*PostLikeRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *PostLikeRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PostLikeRspBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *PostLikeRspBody) GetNotifyList() []*NotifyInfo {
	if m != nil {
		return m.NotifyList
	}
	return nil
}

// [Client to Server]提交评论的信息
type PostCommentReqBody struct {
	Mid              []byte       `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	CommentBody      *CommentBody `protobuf:"bytes,2,opt,name=comment_body" json:"comment_body,omitempty"`
	Token            []byte       `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PostCommentReqBody) Reset()                    { *m = PostCommentReqBody{} }
func (m *PostCommentReqBody) String() string            { return proto.CompactTextString(m) }
func (*PostCommentReqBody) ProtoMessage()               {}
func (*PostCommentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *PostCommentReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *PostCommentReqBody) GetCommentBody() *CommentBody {
	if m != nil {
		return m.CommentBody
	}
	return nil
}

func (m *PostCommentReqBody) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// [Server to Client ]返回评论成功信息
type PostCommentRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Mid              []byte        `protobuf:"bytes,3,opt,name=mid" json:"mid,omitempty"`
	Cid              []byte        `protobuf:"bytes,4,opt,name=cid" json:"cid,omitempty"`
	PostTime         *uint64       `protobuf:"varint,5,opt,name=post_time" json:"post_time,omitempty"`
	NotifyList       []*NotifyInfo `protobuf:"bytes,10,rep,name=notify_list" json:"notify_list,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PostCommentRspBody) Reset()                    { *m = PostCommentRspBody{} }
func (m *PostCommentRspBody) String() string            { return proto.CompactTextString(m) }
func (*PostCommentRspBody) ProtoMessage()               {}
func (*PostCommentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *PostCommentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PostCommentRspBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *PostCommentRspBody) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *PostCommentRspBody) GetPostTime() uint64 {
	if m != nil && m.PostTime != nil {
		return *m.PostTime
	}
	return 0
}

func (m *PostCommentRspBody) GetNotifyList() []*NotifyInfo {
	if m != nil {
		return m.NotifyList
	}
	return nil
}

// [Client to Server]删除心情帖子
type DeleteMomentReqBody struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte  `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	Token            []byte  `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteMomentReqBody) Reset()                    { *m = DeleteMomentReqBody{} }
func (m *DeleteMomentReqBody) String() string            { return proto.CompactTextString(m) }
func (*DeleteMomentReqBody) ProtoMessage()               {}
func (*DeleteMomentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *DeleteMomentReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *DeleteMomentReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *DeleteMomentReqBody) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// [Server to Client ]返回删除成功信息
type DeleteMomentRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Mid              []byte  `protobuf:"bytes,3,opt,name=mid" json:"mid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteMomentRspBody) Reset()                    { *m = DeleteMomentRspBody{} }
func (m *DeleteMomentRspBody) String() string            { return proto.CompactTextString(m) }
func (*DeleteMomentRspBody) ProtoMessage()               {}
func (*DeleteMomentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *DeleteMomentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DeleteMomentRspBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

// [Client to Server]删除评论
type DeleteCommentReqBody struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte  `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	Cid              []byte  `protobuf:"bytes,3,opt,name=cid" json:"cid,omitempty"`
	Token            []byte  `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteCommentReqBody) Reset()                    { *m = DeleteCommentReqBody{} }
func (m *DeleteCommentReqBody) String() string            { return proto.CompactTextString(m) }
func (*DeleteCommentReqBody) ProtoMessage()               {}
func (*DeleteCommentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *DeleteCommentReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *DeleteCommentReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *DeleteCommentReqBody) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *DeleteCommentReqBody) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// [Server to Client ]返回删除成功信息
type DeleteCommentRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Mid              []byte  `protobuf:"bytes,3,opt,name=mid" json:"mid,omitempty"`
	Cid              []byte  `protobuf:"bytes,4,opt,name=cid" json:"cid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteCommentRspBody) Reset()                    { *m = DeleteCommentRspBody{} }
func (m *DeleteCommentRspBody) String() string            { return proto.CompactTextString(m) }
func (*DeleteCommentRspBody) ProtoMessage()               {}
func (*DeleteCommentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *DeleteCommentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DeleteCommentRspBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *DeleteCommentRspBody) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

// [Client to Server] 删除用户
type DeleteUserReqBody struct {
	Userid           []uint32 `protobuf:"varint,1,rep,name=userid" json:"userid,omitempty"`
	Token            []byte   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DeleteUserReqBody) Reset()                    { *m = DeleteUserReqBody{} }
func (m *DeleteUserReqBody) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserReqBody) ProtoMessage()               {}
func (*DeleteUserReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *DeleteUserReqBody) GetUserid() []uint32 {
	if m != nil {
		return m.Userid
	}
	return nil
}

func (m *DeleteUserReqBody) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// [Server to Client ]返回删除删除用户
type DeleteUserRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteUserRspBody) Reset()                    { *m = DeleteUserRspBody{} }
func (m *DeleteUserRspBody) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRspBody) ProtoMessage()               {}
func (*DeleteUserRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *DeleteUserRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

// [Client to Server ]请求查看最新的列表（下拉最新）
type ViewLatestMomentIDReqBody struct {
	Userid           *uint32     `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Qtype            *QUERY_TYPE `protobuf:"varint,2,opt,name=qtype,enum=ht.moment.QUERY_TYPE" json:"qtype,omitempty"`
	LangType         *uint32     `protobuf:"varint,3,opt,name=lang_type" json:"lang_type,omitempty"`
	Nationality      []byte      `protobuf:"bytes,4,opt,name=nationality" json:"nationality,omitempty"`
	LocalMaxMid      []byte      `protobuf:"bytes,8,opt,name=local_max_mid" json:"local_max_mid,omitempty"`
	ReqUserId        *uint32     `protobuf:"varint,9,opt,name=req_user_id" json:"req_user_id,omitempty"`
	Ostype           *uint32     `protobuf:"varint,10,opt,name=ostype" json:"ostype,omitempty"`
	Version          *uint32     `protobuf:"varint,11,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ViewLatestMomentIDReqBody) Reset()                    { *m = ViewLatestMomentIDReqBody{} }
func (m *ViewLatestMomentIDReqBody) String() string            { return proto.CompactTextString(m) }
func (*ViewLatestMomentIDReqBody) ProtoMessage()               {}
func (*ViewLatestMomentIDReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *ViewLatestMomentIDReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *ViewLatestMomentIDReqBody) GetQtype() QUERY_TYPE {
	if m != nil && m.Qtype != nil {
		return *m.Qtype
	}
	return QUERY_TYPE_DEFAULT
}

func (m *ViewLatestMomentIDReqBody) GetLangType() uint32 {
	if m != nil && m.LangType != nil {
		return *m.LangType
	}
	return 0
}

func (m *ViewLatestMomentIDReqBody) GetNationality() []byte {
	if m != nil {
		return m.Nationality
	}
	return nil
}

func (m *ViewLatestMomentIDReqBody) GetLocalMaxMid() []byte {
	if m != nil {
		return m.LocalMaxMid
	}
	return nil
}

func (m *ViewLatestMomentIDReqBody) GetReqUserId() uint32 {
	if m != nil && m.ReqUserId != nil {
		return *m.ReqUserId
	}
	return 0
}

func (m *ViewLatestMomentIDReqBody) GetOstype() uint32 {
	if m != nil && m.Ostype != nil {
		return *m.Ostype
	}
	return 0
}

func (m *ViewLatestMomentIDReqBody) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

// [Server to Client ]返回 Latest id 列表
type ViewLatestMomentIDRspBody struct {
	Status           *Header           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	PageSize         *uint32           `protobuf:"varint,2,opt,name=page_size" json:"page_size,omitempty"`
	Bucket           *BucketInfo       `protobuf:"bytes,10,opt,name=bucket" json:"bucket,omitempty"`
	IdList           []*MomentIdResult `protobuf:"bytes,11,rep,name=id_list" json:"id_list,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ViewLatestMomentIDRspBody) Reset()                    { *m = ViewLatestMomentIDRspBody{} }
func (m *ViewLatestMomentIDRspBody) String() string            { return proto.CompactTextString(m) }
func (*ViewLatestMomentIDRspBody) ProtoMessage()               {}
func (*ViewLatestMomentIDRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *ViewLatestMomentIDRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ViewLatestMomentIDRspBody) GetPageSize() uint32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ViewLatestMomentIDRspBody) GetBucket() *BucketInfo {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *ViewLatestMomentIDRspBody) GetIdList() []*MomentIdResult {
	if m != nil {
		return m.IdList
	}
	return nil
}

// [Client to Server ]请求查看历史（上拉历史信息）
type ViewHistoryMomentIDReqBody struct {
	Userid           *uint32     `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Qtype            *QUERY_TYPE `protobuf:"varint,2,opt,name=qtype,enum=ht.moment.QUERY_TYPE" json:"qtype,omitempty"`
	LangType         *uint32     `protobuf:"varint,3,opt,name=lang_type" json:"lang_type,omitempty"`
	Nationality      []byte      `protobuf:"bytes,4,opt,name=nationality" json:"nationality,omitempty"`
	LocalMaxMid      []byte      `protobuf:"bytes,8,opt,name=local_max_mid" json:"local_max_mid,omitempty"`
	Bucket           *BucketInfo `protobuf:"bytes,9,opt,name=bucket" json:"bucket,omitempty"`
	ReqUserId        *uint32     `protobuf:"varint,10,opt,name=req_user_id" json:"req_user_id,omitempty"`
	Ostype           *uint32     `protobuf:"varint,11,opt,name=ostype" json:"ostype,omitempty"`
	Version          *uint32     `protobuf:"varint,12,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ViewHistoryMomentIDReqBody) Reset()                    { *m = ViewHistoryMomentIDReqBody{} }
func (m *ViewHistoryMomentIDReqBody) String() string            { return proto.CompactTextString(m) }
func (*ViewHistoryMomentIDReqBody) ProtoMessage()               {}
func (*ViewHistoryMomentIDReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{34} }

func (m *ViewHistoryMomentIDReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *ViewHistoryMomentIDReqBody) GetQtype() QUERY_TYPE {
	if m != nil && m.Qtype != nil {
		return *m.Qtype
	}
	return QUERY_TYPE_DEFAULT
}

func (m *ViewHistoryMomentIDReqBody) GetLangType() uint32 {
	if m != nil && m.LangType != nil {
		return *m.LangType
	}
	return 0
}

func (m *ViewHistoryMomentIDReqBody) GetNationality() []byte {
	if m != nil {
		return m.Nationality
	}
	return nil
}

func (m *ViewHistoryMomentIDReqBody) GetLocalMaxMid() []byte {
	if m != nil {
		return m.LocalMaxMid
	}
	return nil
}

func (m *ViewHistoryMomentIDReqBody) GetBucket() *BucketInfo {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *ViewHistoryMomentIDReqBody) GetReqUserId() uint32 {
	if m != nil && m.ReqUserId != nil {
		return *m.ReqUserId
	}
	return 0
}

func (m *ViewHistoryMomentIDReqBody) GetOstype() uint32 {
	if m != nil && m.Ostype != nil {
		return *m.Ostype
	}
	return 0
}

func (m *ViewHistoryMomentIDReqBody) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

// [Server to Client ]返回 History id 列表
type ViewHistoryMomentIDRspBody struct {
	Status           *Header           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	PageSize         *uint32           `protobuf:"varint,2,opt,name=page_size" json:"page_size,omitempty"`
	Bucket           *BucketInfo       `protobuf:"bytes,10,opt,name=bucket" json:"bucket,omitempty"`
	IdList           []*MomentIdResult `protobuf:"bytes,11,rep,name=id_list" json:"id_list,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ViewHistoryMomentIDRspBody) Reset()                    { *m = ViewHistoryMomentIDRspBody{} }
func (m *ViewHistoryMomentIDRspBody) String() string            { return proto.CompactTextString(m) }
func (*ViewHistoryMomentIDRspBody) ProtoMessage()               {}
func (*ViewHistoryMomentIDRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

func (m *ViewHistoryMomentIDRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ViewHistoryMomentIDRspBody) GetPageSize() uint32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ViewHistoryMomentIDRspBody) GetBucket() *BucketInfo {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *ViewHistoryMomentIDRspBody) GetIdList() []*MomentIdResult {
	if m != nil {
		return m.IdList
	}
	return nil
}

// [Client to Server ]根据mid去查询moment的内容
type ViewMomentReqBody struct {
	Userid           *uint32  `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              [][]byte `protobuf:"bytes,2,rep,name=mid" json:"mid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ViewMomentReqBody) Reset()                    { *m = ViewMomentReqBody{} }
func (m *ViewMomentReqBody) String() string            { return proto.CompactTextString(m) }
func (*ViewMomentReqBody) ProtoMessage()               {}
func (*ViewMomentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{36} }

func (m *ViewMomentReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *ViewMomentReqBody) GetMid() [][]byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

// [Server to Client ]根据mid查到的结果 返回moment列表信息
type ViewMomentRspBody struct {
	Status           *Header            `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	MomentList       []*MomentBlockInfo `protobuf:"bytes,11,rep,name=moment_list" json:"moment_list,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ViewMomentRspBody) Reset()                    { *m = ViewMomentRspBody{} }
func (m *ViewMomentRspBody) String() string            { return proto.CompactTextString(m) }
func (*ViewMomentRspBody) ProtoMessage()               {}
func (*ViewMomentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{37} }

func (m *ViewMomentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ViewMomentRspBody) GetMomentList() []*MomentBlockInfo {
	if m != nil {
		return m.MomentList
	}
	return nil
}

// [Client to Server ]发起要查看全部评论
type RefreshCommentIDReqBody struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte  `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	LocalCommentTs   *uint64 `protobuf:"varint,3,opt,name=local_comment_ts" json:"local_comment_ts,omitempty"`
	Index            *uint64 `protobuf:"varint,8,opt,name=index" json:"index,omitempty"`
	LocalMaxCid      []byte  `protobuf:"bytes,9,opt,name=local_max_cid" json:"local_max_cid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RefreshCommentIDReqBody) Reset()                    { *m = RefreshCommentIDReqBody{} }
func (m *RefreshCommentIDReqBody) String() string            { return proto.CompactTextString(m) }
func (*RefreshCommentIDReqBody) ProtoMessage()               {}
func (*RefreshCommentIDReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{38} }

func (m *RefreshCommentIDReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *RefreshCommentIDReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RefreshCommentIDReqBody) GetLocalCommentTs() uint64 {
	if m != nil && m.LocalCommentTs != nil {
		return *m.LocalCommentTs
	}
	return 0
}

func (m *RefreshCommentIDReqBody) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *RefreshCommentIDReqBody) GetLocalMaxCid() []byte {
	if m != nil {
		return m.LocalMaxCid
	}
	return nil
}

// [Server to Client ]发起要查看全部评论，返回的评论ID
type RefreshCommentIDRspBody struct {
	Status           *Header            `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Index            *uint64            `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	PageSize         *uint32            `protobuf:"varint,3,opt,name=page_size" json:"page_size,omitempty"`
	Mid              []byte             `protobuf:"bytes,9,opt,name=mid" json:"mid,omitempty"`
	CommentCount     *uint64            `protobuf:"varint,10,opt,name=comment_count" json:"comment_count,omitempty"`
	CommentTs        *uint64            `protobuf:"varint,11,opt,name=comment_ts" json:"comment_ts,omitempty"`
	IdList           []*CommentIdResult `protobuf:"bytes,12,rep,name=id_list" json:"id_list,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RefreshCommentIDRspBody) Reset()                    { *m = RefreshCommentIDRspBody{} }
func (m *RefreshCommentIDRspBody) String() string            { return proto.CompactTextString(m) }
func (*RefreshCommentIDRspBody) ProtoMessage()               {}
func (*RefreshCommentIDRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{39} }

func (m *RefreshCommentIDRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RefreshCommentIDRspBody) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *RefreshCommentIDRspBody) GetPageSize() uint32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *RefreshCommentIDRspBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RefreshCommentIDRspBody) GetCommentCount() uint64 {
	if m != nil && m.CommentCount != nil {
		return *m.CommentCount
	}
	return 0
}

func (m *RefreshCommentIDRspBody) GetCommentTs() uint64 {
	if m != nil && m.CommentTs != nil {
		return *m.CommentTs
	}
	return 0
}

func (m *RefreshCommentIDRspBody) GetIdList() []*CommentIdResult {
	if m != nil {
		return m.IdList
	}
	return nil
}

// [Client to Server ]根据mid去查询 comment 的内容
type ViewCommentReqBody struct {
	Userid           *uint32  `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte   `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	Cid              [][]byte `protobuf:"bytes,3,rep,name=cid" json:"cid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ViewCommentReqBody) Reset()                    { *m = ViewCommentReqBody{} }
func (m *ViewCommentReqBody) String() string            { return proto.CompactTextString(m) }
func (*ViewCommentReqBody) ProtoMessage()               {}
func (*ViewCommentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{40} }

func (m *ViewCommentReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *ViewCommentReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *ViewCommentReqBody) GetCid() [][]byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

// [Server to Client ]发起要查看全部评论，返回的结果
type ViewCommentRspBody struct {
	Status           *Header          `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Mid              []byte           `protobuf:"bytes,10,opt,name=mid" json:"mid,omitempty"`
	CommentList      []*DetailComment `protobuf:"bytes,11,rep,name=comment_list" json:"comment_list,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ViewCommentRspBody) Reset()                    { *m = ViewCommentRspBody{} }
func (m *ViewCommentRspBody) String() string            { return proto.CompactTextString(m) }
func (*ViewCommentRspBody) ProtoMessage()               {}
func (*ViewCommentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{41} }

func (m *ViewCommentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ViewCommentRspBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *ViewCommentRspBody) GetCommentList() []*DetailComment {
	if m != nil {
		return m.CommentList
	}
	return nil
}

// [Client to Server] 客户端只更新点赞信息
type RefreshLikedInfoReqBody struct {
	Userid           *uint32  `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              [][]byte `protobuf:"bytes,2,rep,name=mid" json:"mid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RefreshLikedInfoReqBody) Reset()                    { *m = RefreshLikedInfoReqBody{} }
func (m *RefreshLikedInfoReqBody) String() string            { return proto.CompactTextString(m) }
func (*RefreshLikedInfoReqBody) ProtoMessage()               {}
func (*RefreshLikedInfoReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{42} }

func (m *RefreshLikedInfoReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *RefreshLikedInfoReqBody) GetMid() [][]byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

// [Server to Client ] 服务器返回点赞信息
type RefreshLikedInfoRspBody struct {
	Status           *Header      `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	LikedList        []*LikedBody `protobuf:"bytes,2,rep,name=liked_list" json:"liked_list,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RefreshLikedInfoRspBody) Reset()                    { *m = RefreshLikedInfoRspBody{} }
func (m *RefreshLikedInfoRspBody) String() string            { return proto.CompactTextString(m) }
func (*RefreshLikedInfoRspBody) ProtoMessage()               {}
func (*RefreshLikedInfoRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{43} }

func (m *RefreshLikedInfoRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RefreshLikedInfoRspBody) GetLikedList() []*LikedBody {
	if m != nil {
		return m.LikedList
	}
	return nil
}

// [Client to Server] 客户端只更新简单评论信息
type RefreshBaseCommentReqBody struct {
	Userid           *uint32  `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              [][]byte `protobuf:"bytes,2,rep,name=mid" json:"mid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RefreshBaseCommentReqBody) Reset()                    { *m = RefreshBaseCommentReqBody{} }
func (m *RefreshBaseCommentReqBody) String() string            { return proto.CompactTextString(m) }
func (*RefreshBaseCommentReqBody) ProtoMessage()               {}
func (*RefreshBaseCommentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{44} }

func (m *RefreshBaseCommentReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *RefreshBaseCommentReqBody) GetMid() [][]byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

// [Server to Client ] 服务器返回最新简单评论信息
type RefreshBaseCommentRspBody struct {
	Status           *Header             `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	CommentTable     []*BaseCommentTable `protobuf:"bytes,8,rep,name=comment_table" json:"comment_table,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RefreshBaseCommentRspBody) Reset()                    { *m = RefreshBaseCommentRspBody{} }
func (m *RefreshBaseCommentRspBody) String() string            { return proto.CompactTextString(m) }
func (*RefreshBaseCommentRspBody) ProtoMessage()               {}
func (*RefreshBaseCommentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{45} }

func (m *RefreshBaseCommentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RefreshBaseCommentRspBody) GetCommentTable() []*BaseCommentTable {
	if m != nil {
		return m.CommentTable
	}
	return nil
}

// [Client to Server] 获取通知事件
type GetNotifyEventReqBody struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	LastId           *uint32 `protobuf:"varint,2,opt,name=last_id" json:"last_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetNotifyEventReqBody) Reset()                    { *m = GetNotifyEventReqBody{} }
func (m *GetNotifyEventReqBody) String() string            { return proto.CompactTextString(m) }
func (*GetNotifyEventReqBody) ProtoMessage()               {}
func (*GetNotifyEventReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{46} }

func (m *GetNotifyEventReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *GetNotifyEventReqBody) GetLastId() uint32 {
	if m != nil && m.LastId != nil {
		return *m.LastId
	}
	return 0
}

// [Server to Client ] 服务器返回通知事件
type GetNotifyEventRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	NotifyInfo       []*NotifyInfo `protobuf:"bytes,2,rep,name=notify_info" json:"notify_info,omitempty"`
	LastId           *uint32       `protobuf:"varint,3,opt,name=last_id" json:"last_id,omitempty"`
	More             *uint32       `protobuf:"varint,4,opt,name=more" json:"more,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GetNotifyEventRspBody) Reset()                    { *m = GetNotifyEventRspBody{} }
func (m *GetNotifyEventRspBody) String() string            { return proto.CompactTextString(m) }
func (*GetNotifyEventRspBody) ProtoMessage()               {}
func (*GetNotifyEventRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{47} }

func (m *GetNotifyEventRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetNotifyEventRspBody) GetNotifyInfo() []*NotifyInfo {
	if m != nil {
		return m.NotifyInfo
	}
	return nil
}

func (m *GetNotifyEventRspBody) GetLastId() uint32 {
	if m != nil && m.LastId != nil {
		return *m.LastId
	}
	return 0
}

func (m *GetNotifyEventRspBody) GetMore() uint32 {
	if m != nil && m.More != nil {
		return *m.More
	}
	return 0
}

// [Client to Server] 获取个人信息
type GetUserInfoReqBody struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetUserInfoReqBody) Reset()                    { *m = GetUserInfoReqBody{} }
func (m *GetUserInfoReqBody) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoReqBody) ProtoMessage()               {}
func (*GetUserInfoReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{48} }

func (m *GetUserInfoReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

// [Server to Client] 返回个人信息
type GetUserInfoRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	MomentCount      *uint32 `protobuf:"varint,2,opt,name=moment_count" json:"moment_count,omitempty"`
	LikedCount       *uint32 `protobuf:"varint,3,opt,name=liked_count" json:"liked_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetUserInfoRspBody) Reset()                    { *m = GetUserInfoRspBody{} }
func (m *GetUserInfoRspBody) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoRspBody) ProtoMessage()               {}
func (*GetUserInfoRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{49} }

func (m *GetUserInfoRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetUserInfoRspBody) GetMomentCount() uint32 {
	if m != nil && m.MomentCount != nil {
		return *m.MomentCount
	}
	return 0
}

func (m *GetUserInfoRspBody) GetLikedCount() uint32 {
	if m != nil && m.LikedCount != nil {
		return *m.LikedCount
	}
	return 0
}

// [Client to Server] 请求帖子点赞用户列表
type GetMomentLikeUserinfoReqBody struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte  `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	LikedTs          *uint64 `protobuf:"varint,3,opt,name=liked_ts" json:"liked_ts,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetMomentLikeUserinfoReqBody) Reset()                    { *m = GetMomentLikeUserinfoReqBody{} }
func (m *GetMomentLikeUserinfoReqBody) String() string            { return proto.CompactTextString(m) }
func (*GetMomentLikeUserinfoReqBody) ProtoMessage()               {}
func (*GetMomentLikeUserinfoReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{50} }

func (m *GetMomentLikeUserinfoReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *GetMomentLikeUserinfoReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *GetMomentLikeUserinfoReqBody) GetLikedTs() uint64 {
	if m != nil && m.LikedTs != nil {
		return *m.LikedTs
	}
	return 0
}

// [Server to Client] 返回帖子点赞信息
type GetMomentLikeUserinfoRspBody struct {
	Status           *Header               `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	LikedTs          *uint64               `protobuf:"varint,2,opt,name=liked_ts" json:"liked_ts,omitempty"`
	Userinfo         []*MomentUserInfoBody `protobuf:"bytes,3,rep,name=userinfo" json:"userinfo,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *GetMomentLikeUserinfoRspBody) Reset()                    { *m = GetMomentLikeUserinfoRspBody{} }
func (m *GetMomentLikeUserinfoRspBody) String() string            { return proto.CompactTextString(m) }
func (*GetMomentLikeUserinfoRspBody) ProtoMessage()               {}
func (*GetMomentLikeUserinfoRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{51} }

func (m *GetMomentLikeUserinfoRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetMomentLikeUserinfoRspBody) GetLikedTs() uint64 {
	if m != nil && m.LikedTs != nil {
		return *m.LikedTs
	}
	return 0
}

func (m *GetMomentLikeUserinfoRspBody) GetUserinfo() []*MomentUserInfoBody {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

// [WebServer to MntServer] 恢复用户
type RestoreUserReqBody struct {
	Userid           []uint32 `protobuf:"varint,1,rep,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RestoreUserReqBody) Reset()                    { *m = RestoreUserReqBody{} }
func (m *RestoreUserReqBody) String() string            { return proto.CompactTextString(m) }
func (*RestoreUserReqBody) ProtoMessage()               {}
func (*RestoreUserReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{52} }

func (m *RestoreUserReqBody) GetUserid() []uint32 {
	if m != nil {
		return m.Userid
	}
	return nil
}

// [MntServer to WebServer ]恢复用户的返回
type RestoreUserRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RestoreUserRspBody) Reset()                    { *m = RestoreUserRspBody{} }
func (m *RestoreUserRspBody) String() string            { return proto.CompactTextString(m) }
func (*RestoreUserRspBody) ProtoMessage()               {}
func (*RestoreUserRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{53} }

func (m *RestoreUserRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

// [WebServer to MntServer] 操作帖子
type ModMntStatusReqBody struct {
	Mid              []byte           `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	OpType           *MntStatusOpType `protobuf:"varint,2,opt,name=op_type,enum=ht.moment.MntStatusOpType" json:"op_type,omitempty"`
	OpReason         []byte           `protobuf:"bytes,3,opt,name=op_reason" json:"op_reason,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ModMntStatusReqBody) Reset()                    { *m = ModMntStatusReqBody{} }
func (m *ModMntStatusReqBody) String() string            { return proto.CompactTextString(m) }
func (*ModMntStatusReqBody) ProtoMessage()               {}
func (*ModMntStatusReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{54} }

func (m *ModMntStatusReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *ModMntStatusReqBody) GetOpType() MntStatusOpType {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return MntStatusOpType_OP_RESTORE
}

func (m *ModMntStatusReqBody) GetOpReason() []byte {
	if m != nil {
		return m.OpReason
	}
	return nil
}

// [MntServer to WebServer ]恢复用户的返回
type ModMntStatusRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ModMntStatusRspBody) Reset()                    { *m = ModMntStatusRspBody{} }
func (m *ModMntStatusRspBody) String() string            { return proto.CompactTextString(m) }
func (*ModMntStatusRspBody) ProtoMessage()               {}
func (*ModMntStatusRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{55} }

func (m *ModMntStatusRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

// [Client to Server] 禁止某人查看我发布的帖子或不分享帖子给某人看
type OperatorUidReqBody struct {
	ListType         *OPERATORLIST `protobuf:"varint,1,opt,name=list_type,enum=ht.moment.OPERATORLIST" json:"list_type,omitempty"`
	OpType           *OPERATORTYPE `protobuf:"varint,2,opt,name=op_type,enum=ht.moment.OPERATORTYPE" json:"op_type,omitempty"`
	OpUserId         *uint32       `protobuf:"varint,3,opt,name=op_user_id" json:"op_user_id,omitempty"`
	Userid           *uint32       `protobuf:"varint,4,opt,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *OperatorUidReqBody) Reset()                    { *m = OperatorUidReqBody{} }
func (m *OperatorUidReqBody) String() string            { return proto.CompactTextString(m) }
func (*OperatorUidReqBody) ProtoMessage()               {}
func (*OperatorUidReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{56} }

func (m *OperatorUidReqBody) GetListType() OPERATORLIST {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return OPERATORLIST_OP_HIDE_LIST
}

func (m *OperatorUidReqBody) GetOpType() OPERATORTYPE {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return OPERATORTYPE_OP_UNKNOWN
}

func (m *OperatorUidReqBody) GetOpUserId() uint32 {
	if m != nil && m.OpUserId != nil {
		return *m.OpUserId
	}
	return 0
}

func (m *OperatorUidReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

// [Server to Client] 返回操作结果
type OperatorUidRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ListType         *OPERATORLIST `protobuf:"varint,2,opt,name=list_type,enum=ht.moment.OPERATORLIST" json:"list_type,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *OperatorUidRspBody) Reset()                    { *m = OperatorUidRspBody{} }
func (m *OperatorUidRspBody) String() string            { return proto.CompactTextString(m) }
func (*OperatorUidRspBody) ProtoMessage()               {}
func (*OperatorUidRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{57} }

func (m *OperatorUidRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *OperatorUidRspBody) GetListType() OPERATORLIST {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return OPERATORLIST_OP_HIDE_LIST
}

type OpUid struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	OpTimeStamp      *uint32 `protobuf:"varint,2,opt,name=op_time_stamp" json:"op_time_stamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OpUid) Reset()                    { *m = OpUid{} }
func (m *OpUid) String() string            { return proto.CompactTextString(m) }
func (*OpUid) ProtoMessage()               {}
func (*OpUid) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{58} }

func (m *OpUid) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *OpUid) GetOpTimeStamp() uint32 {
	if m != nil && m.OpTimeStamp != nil {
		return *m.OpTimeStamp
	}
	return 0
}

type OpUidList struct {
	ListVer          *uint32  `protobuf:"varint,1,opt,name=list_ver" json:"list_ver,omitempty"`
	ListRes          *uint32  `protobuf:"varint,2,opt,name=list_res" json:"list_res,omitempty"`
	UidArray         []*OpUid `protobuf:"bytes,3,rep,name=uid_array" json:"uid_array,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *OpUidList) Reset()                    { *m = OpUidList{} }
func (m *OpUidList) String() string            { return proto.CompactTextString(m) }
func (*OpUidList) ProtoMessage()               {}
func (*OpUidList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{59} }

func (m *OpUidList) GetListVer() uint32 {
	if m != nil && m.ListVer != nil {
		return *m.ListVer
	}
	return 0
}

func (m *OpUidList) GetListRes() uint32 {
	if m != nil && m.ListRes != nil {
		return *m.ListRes
	}
	return 0
}

func (m *OpUidList) GetUidArray() []*OpUid {
	if m != nil {
		return m.UidArray
	}
	return nil
}

// [Client to Server] 获取被自己禁止查看我发布的帖子uid list
type GetUidListReqBody struct {
	ListType         *OPERATORLIST `protobuf:"varint,1,opt,name=list_type,enum=ht.moment.OPERATORLIST" json:"list_type,omitempty"`
	HideListVer      *uint32       `protobuf:"varint,2,opt,name=hide_list_ver" json:"hide_list_ver,omitempty"`
	NotShareVer      *uint32       `protobuf:"varint,3,opt,name=not_share_ver" json:"not_share_ver,omitempty"`
	Userid           *uint32       `protobuf:"varint,4,opt,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GetUidListReqBody) Reset()                    { *m = GetUidListReqBody{} }
func (m *GetUidListReqBody) String() string            { return proto.CompactTextString(m) }
func (*GetUidListReqBody) ProtoMessage()               {}
func (*GetUidListReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{60} }

func (m *GetUidListReqBody) GetListType() OPERATORLIST {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return OPERATORLIST_OP_HIDE_LIST
}

func (m *GetUidListReqBody) GetHideListVer() uint32 {
	if m != nil && m.HideListVer != nil {
		return *m.HideListVer
	}
	return 0
}

func (m *GetUidListReqBody) GetNotShareVer() uint32 {
	if m != nil && m.NotShareVer != nil {
		return *m.NotShareVer
	}
	return 0
}

func (m *GetUidListReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

// [Server to Client] 返回操作结果
type GetUidListRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ListType         *OPERATORLIST `protobuf:"varint,2,opt,name=list_type,enum=ht.moment.OPERATORLIST" json:"list_type,omitempty"`
	HideUidArray     *OpUidList    `protobuf:"bytes,3,opt,name=hide_uid_array" json:"hide_uid_array,omitempty"`
	NotShareArray    *OpUidList    `protobuf:"bytes,4,opt,name=not_share_array" json:"not_share_array,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GetUidListRspBody) Reset()                    { *m = GetUidListRspBody{} }
func (m *GetUidListRspBody) String() string            { return proto.CompactTextString(m) }
func (*GetUidListRspBody) ProtoMessage()               {}
func (*GetUidListRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{61} }

func (m *GetUidListRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetUidListRspBody) GetListType() OPERATORLIST {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return OPERATORLIST_OP_HIDE_LIST
}

func (m *GetUidListRspBody) GetHideUidArray() *OpUidList {
	if m != nil {
		return m.HideUidArray
	}
	return nil
}

func (m *GetUidListRspBody) GetNotShareArray() *OpUidList {
	if m != nil {
		return m.NotShareArray
	}
	return nil
}

type PostEssenceMntReqBody struct {
	Mid              []byte        `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	LangType         *uint32       `protobuf:"varint,2,opt,name=lang_type" json:"lang_type,omitempty"`
	StrLangType      []byte        `protobuf:"bytes,3,opt,name=str_lang_type" json:"str_lang_type,omitempty"`
	Userid           *uint32       `protobuf:"varint,4,opt,name=userid" json:"userid,omitempty"`
	OpType           *OPERATORTYPE `protobuf:"varint,5,opt,name=op_type,enum=ht.moment.OPERATORTYPE" json:"op_type,omitempty"`
	OpReason         []byte        `protobuf:"bytes,6,opt,name=op_reason" json:"op_reason,omitempty"`
	Index            *uint64       `protobuf:"varint,7,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PostEssenceMntReqBody) Reset()                    { *m = PostEssenceMntReqBody{} }
func (m *PostEssenceMntReqBody) String() string            { return proto.CompactTextString(m) }
func (*PostEssenceMntReqBody) ProtoMessage()               {}
func (*PostEssenceMntReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{62} }

func (m *PostEssenceMntReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *PostEssenceMntReqBody) GetLangType() uint32 {
	if m != nil && m.LangType != nil {
		return *m.LangType
	}
	return 0
}

func (m *PostEssenceMntReqBody) GetStrLangType() []byte {
	if m != nil {
		return m.StrLangType
	}
	return nil
}

func (m *PostEssenceMntReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *PostEssenceMntReqBody) GetOpType() OPERATORTYPE {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return OPERATORTYPE_OP_UNKNOWN
}

func (m *PostEssenceMntReqBody) GetOpReason() []byte {
	if m != nil {
		return m.OpReason
	}
	return nil
}

func (m *PostEssenceMntReqBody) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// [Momnet Server to BackEnd Server] 返回的响应
type PostEssenceMntRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Index            *uint64 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PostEssenceMntRspBody) Reset()                    { *m = PostEssenceMntRspBody{} }
func (m *PostEssenceMntRspBody) String() string            { return proto.CompactTextString(m) }
func (*PostEssenceMntRspBody) ProtoMessage()               {}
func (*PostEssenceMntRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{63} }

func (m *PostEssenceMntRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PostEssenceMntRspBody) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// [BackEnd Server to Server] 后台操作用户（添加/删除）只能分享帖文给自己看或给粉丝看
type BackEndOpUidReqBody struct {
	ListType         *OPERATORLIST `protobuf:"varint,1,opt,name=list_type,enum=ht.moment.OPERATORLIST" json:"list_type,omitempty"`
	OpType           *OPERATORTYPE `protobuf:"varint,2,opt,name=op_type,enum=ht.moment.OPERATORTYPE" json:"op_type,omitempty"`
	OpUserId         *uint32       `protobuf:"varint,3,opt,name=op_user_id" json:"op_user_id,omitempty"`
	Userid           *uint32       `protobuf:"varint,4,opt,name=userid" json:"userid,omitempty"`
	OpReason         []byte        `protobuf:"bytes,5,opt,name=op_reason" json:"op_reason,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *BackEndOpUidReqBody) Reset()                    { *m = BackEndOpUidReqBody{} }
func (m *BackEndOpUidReqBody) String() string            { return proto.CompactTextString(m) }
func (*BackEndOpUidReqBody) ProtoMessage()               {}
func (*BackEndOpUidReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{64} }

func (m *BackEndOpUidReqBody) GetListType() OPERATORLIST {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return OPERATORLIST_OP_HIDE_LIST
}

func (m *BackEndOpUidReqBody) GetOpType() OPERATORTYPE {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return OPERATORTYPE_OP_UNKNOWN
}

func (m *BackEndOpUidReqBody) GetOpUserId() uint32 {
	if m != nil && m.OpUserId != nil {
		return *m.OpUserId
	}
	return 0
}

func (m *BackEndOpUidReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *BackEndOpUidReqBody) GetOpReason() []byte {
	if m != nil {
		return m.OpReason
	}
	return nil
}

// [Serter To BackEnd Server]
type BackEndOpUidRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ListType         *OPERATORLIST `protobuf:"varint,2,opt,name=list_type,enum=ht.moment.OPERATORLIST" json:"list_type,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *BackEndOpUidRspBody) Reset()                    { *m = BackEndOpUidRspBody{} }
func (m *BackEndOpUidRspBody) String() string            { return proto.CompactTextString(m) }
func (*BackEndOpUidRspBody) ProtoMessage()               {}
func (*BackEndOpUidRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{65} }

func (m *BackEndOpUidRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BackEndOpUidRspBody) GetListType() OPERATORLIST {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return OPERATORLIST_OP_HIDE_LIST
}

type QueryBeBlockedReqBody struct {
	FromUid          *uint32 `protobuf:"varint,1,opt,name=from_uid" json:"from_uid,omitempty"`
	TargetUid        *uint32 `protobuf:"varint,2,opt,name=target_uid" json:"target_uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QueryBeBlockedReqBody) Reset()                    { *m = QueryBeBlockedReqBody{} }
func (m *QueryBeBlockedReqBody) String() string            { return proto.CompactTextString(m) }
func (*QueryBeBlockedReqBody) ProtoMessage()               {}
func (*QueryBeBlockedReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{66} }

func (m *QueryBeBlockedReqBody) GetFromUid() uint32 {
	if m != nil && m.FromUid != nil {
		return *m.FromUid
	}
	return 0
}

func (m *QueryBeBlockedReqBody) GetTargetUid() uint32 {
	if m != nil && m.TargetUid != nil {
		return *m.TargetUid
	}
	return 0
}

type QueryBeBlockedRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	BeBlocked        *uint32 `protobuf:"varint,2,opt,name=be_blocked" json:"be_blocked,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QueryBeBlockedRspBody) Reset()                    { *m = QueryBeBlockedRspBody{} }
func (m *QueryBeBlockedRspBody) String() string            { return proto.CompactTextString(m) }
func (*QueryBeBlockedRspBody) ProtoMessage()               {}
func (*QueryBeBlockedRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{67} }

func (m *QueryBeBlockedRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *QueryBeBlockedRspBody) GetBeBlocked() uint32 {
	if m != nil && m.BeBlocked != nil {
		return *m.BeBlocked
	}
	return 0
}

type QueryRevealEntryReqBody struct {
	ReqUserId        *uint32      `protobuf:"varint,1,opt,name=req_user_id" json:"req_user_id,omitempty"`
	Qtype            []QUERY_TYPE `protobuf:"varint,2,rep,name=qtype,enum=ht.moment.QUERY_TYPE" json:"qtype,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *QueryRevealEntryReqBody) Reset()                    { *m = QueryRevealEntryReqBody{} }
func (m *QueryRevealEntryReqBody) String() string            { return proto.CompactTextString(m) }
func (*QueryRevealEntryReqBody) ProtoMessage()               {}
func (*QueryRevealEntryReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{68} }

func (m *QueryRevealEntryReqBody) GetReqUserId() uint32 {
	if m != nil && m.ReqUserId != nil {
		return *m.ReqUserId
	}
	return 0
}

func (m *QueryRevealEntryReqBody) GetQtype() []QUERY_TYPE {
	if m != nil {
		return m.Qtype
	}
	return nil
}

type RevealBody struct {
	Qtype            *QUERY_TYPE `protobuf:"varint,1,opt,name=qtype,enum=ht.moment.QUERY_TYPE" json:"qtype,omitempty"`
	BeReveal         *uint32     `protobuf:"varint,2,opt,name=be_reveal" json:"be_reveal,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *RevealBody) Reset()                    { *m = RevealBody{} }
func (m *RevealBody) String() string            { return proto.CompactTextString(m) }
func (*RevealBody) ProtoMessage()               {}
func (*RevealBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{69} }

func (m *RevealBody) GetQtype() QUERY_TYPE {
	if m != nil && m.Qtype != nil {
		return *m.Qtype
	}
	return QUERY_TYPE_DEFAULT
}

func (m *RevealBody) GetBeReveal() uint32 {
	if m != nil && m.BeReveal != nil {
		return *m.BeReveal
	}
	return 0
}

type QueryRevealEntryRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ListReveal       []*RevealBody `protobuf:"bytes,2,rep,name=list_reveal" json:"list_reveal,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *QueryRevealEntryRspBody) Reset()                    { *m = QueryRevealEntryRspBody{} }
func (m *QueryRevealEntryRspBody) String() string            { return proto.CompactTextString(m) }
func (*QueryRevealEntryRspBody) ProtoMessage()               {}
func (*QueryRevealEntryRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{70} }

func (m *QueryRevealEntryRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *QueryRevealEntryRspBody) GetListReveal() []*RevealBody {
	if m != nil {
		return m.ListReveal
	}
	return nil
}

// [WebServer to MntServer] 操作帖子在哪些桶隐藏或者显示
type OpMidBucketStatusReqBody struct {
	Userid           *uint32             `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Mid              []byte              `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	State            []MID_BUCKET_STATUS `protobuf:"varint,3,rep,name=state,enum=ht.moment.MID_BUCKET_STATUS" json:"state,omitempty"`
	OpType           *OPERATORTYPE       `protobuf:"varint,4,opt,name=op_type,enum=ht.moment.OPERATORTYPE" json:"op_type,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *OpMidBucketStatusReqBody) Reset()                    { *m = OpMidBucketStatusReqBody{} }
func (m *OpMidBucketStatusReqBody) String() string            { return proto.CompactTextString(m) }
func (*OpMidBucketStatusReqBody) ProtoMessage()               {}
func (*OpMidBucketStatusReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{71} }

func (m *OpMidBucketStatusReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *OpMidBucketStatusReqBody) GetMid() []byte {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *OpMidBucketStatusReqBody) GetState() []MID_BUCKET_STATUS {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *OpMidBucketStatusReqBody) GetOpType() OPERATORTYPE {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return OPERATORTYPE_OP_UNKNOWN
}

// [MntServer to WebServer ]
type OpMidBucketStatusRspBody struct {
	Status           *Header `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OpMidBucketStatusRspBody) Reset()                    { *m = OpMidBucketStatusRspBody{} }
func (m *OpMidBucketStatusRspBody) String() string            { return proto.CompactTextString(m) }
func (*OpMidBucketStatusRspBody) ProtoMessage()               {}
func (*OpMidBucketStatusRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{72} }

func (m *OpMidBucketStatusRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

// 用户idx信息，用于批量查询用户 indexed moment
type MomentUserIndexInfo struct {
	Userid           *uint32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Seq              *uint32 `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MomentUserIndexInfo) Reset()                    { *m = MomentUserIndexInfo{} }
func (m *MomentUserIndexInfo) String() string            { return proto.CompactTextString(m) }
func (*MomentUserIndexInfo) ProtoMessage()               {}
func (*MomentUserIndexInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{73} }

func (m *MomentUserIndexInfo) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *MomentUserIndexInfo) GetSeq() uint32 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

// [WebService to MntServer]
type GetUserIndexMomentReqBody struct {
	Userid           *uint32                `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	UserIndex        []*MomentUserIndexInfo `protobuf:"bytes,2,rep,name=user_index" json:"user_index,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *GetUserIndexMomentReqBody) Reset()                    { *m = GetUserIndexMomentReqBody{} }
func (m *GetUserIndexMomentReqBody) String() string            { return proto.CompactTextString(m) }
func (*GetUserIndexMomentReqBody) ProtoMessage()               {}
func (*GetUserIndexMomentReqBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{74} }

func (m *GetUserIndexMomentReqBody) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *GetUserIndexMomentReqBody) GetUserIndex() []*MomentUserIndexInfo {
	if m != nil {
		return m.UserIndex
	}
	return nil
}

// [MntServer to WebServer]
type GetUserIndexMomentRspBody struct {
	Status           *Header       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Moment           []*MomentBody `protobuf:"bytes,2,rep,name=moment" json:"moment,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GetUserIndexMomentRspBody) Reset()                    { *m = GetUserIndexMomentRspBody{} }
func (m *GetUserIndexMomentRspBody) String() string            { return proto.CompactTextString(m) }
func (*GetUserIndexMomentRspBody) ProtoMessage()               {}
func (*GetUserIndexMomentRspBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{75} }

func (m *GetUserIndexMomentRspBody) GetStatus() *Header {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetUserIndexMomentRspBody) GetMoment() []*MomentBody {
	if m != nil {
		return m.Moment
	}
	return nil
}

func init() {
	proto.RegisterType((*Header)(nil), "ht.moment.Header")
	proto.RegisterType((*URLInfo)(nil), "ht.moment.URLInfo")
	proto.RegisterType((*LikedBody)(nil), "ht.moment.LikedBody")
	proto.RegisterType((*VoiceBody)(nil), "ht.moment.VoiceBody")
	proto.RegisterType((*ImageBody)(nil), "ht.moment.ImageBody")
	proto.RegisterType((*BucketBody)(nil), "ht.moment.BucketBody")
	proto.RegisterType((*BucketInfo)(nil), "ht.moment.BucketInfo")
	proto.RegisterType((*CorrectContent)(nil), "ht.moment.CorrectContent")
	proto.RegisterType((*CorrectBody)(nil), "ht.moment.CorrectBody")
	proto.RegisterType((*MomentUserInfoBody)(nil), "ht.moment.MomentUserInfoBody")
	proto.RegisterType((*MomentIdResult)(nil), "ht.moment.MomentIdResult")
	proto.RegisterType((*CommentIdResult)(nil), "ht.moment.CommentIdResult")
	proto.RegisterType((*MomentBody)(nil), "ht.moment.MomentBody")
	proto.RegisterType((*ReplyInfo)(nil), "ht.moment.ReplyInfo")
	proto.RegisterType((*CommentBody)(nil), "ht.moment.CommentBody")
	proto.RegisterType((*BaseComment)(nil), "ht.moment.BaseComment")
	proto.RegisterType((*DetailComment)(nil), "ht.moment.DetailComment")
	proto.RegisterType((*BaseCommentTable)(nil), "ht.moment.BaseCommentTable")
	proto.RegisterType((*MomentBlockInfo)(nil), "ht.moment.MomentBlockInfo")
	proto.RegisterType((*NotifyInfo)(nil), "ht.moment.NotifyInfo")
	proto.RegisterType((*PostMomentReqBody)(nil), "ht.moment.PostMomentReqBody")
	proto.RegisterType((*PostMomentRspBody)(nil), "ht.moment.PostMomentRspBody")
	proto.RegisterType((*PostLikeReqBody)(nil), "ht.moment.PostLikeReqBody")
	proto.RegisterType((*PostLikeRspBody)(nil), "ht.moment.PostLikeRspBody")
	proto.RegisterType((*PostCommentReqBody)(nil), "ht.moment.PostCommentReqBody")
	proto.RegisterType((*PostCommentRspBody)(nil), "ht.moment.PostCommentRspBody")
	proto.RegisterType((*DeleteMomentReqBody)(nil), "ht.moment.DeleteMomentReqBody")
	proto.RegisterType((*DeleteMomentRspBody)(nil), "ht.moment.DeleteMomentRspBody")
	proto.RegisterType((*DeleteCommentReqBody)(nil), "ht.moment.DeleteCommentReqBody")
	proto.RegisterType((*DeleteCommentRspBody)(nil), "ht.moment.DeleteCommentRspBody")
	proto.RegisterType((*DeleteUserReqBody)(nil), "ht.moment.DeleteUserReqBody")
	proto.RegisterType((*DeleteUserRspBody)(nil), "ht.moment.DeleteUserRspBody")
	proto.RegisterType((*ViewLatestMomentIDReqBody)(nil), "ht.moment.ViewLatestMomentIDReqBody")
	proto.RegisterType((*ViewLatestMomentIDRspBody)(nil), "ht.moment.ViewLatestMomentIDRspBody")
	proto.RegisterType((*ViewHistoryMomentIDReqBody)(nil), "ht.moment.ViewHistoryMomentIDReqBody")
	proto.RegisterType((*ViewHistoryMomentIDRspBody)(nil), "ht.moment.ViewHistoryMomentIDRspBody")
	proto.RegisterType((*ViewMomentReqBody)(nil), "ht.moment.ViewMomentReqBody")
	proto.RegisterType((*ViewMomentRspBody)(nil), "ht.moment.ViewMomentRspBody")
	proto.RegisterType((*RefreshCommentIDReqBody)(nil), "ht.moment.RefreshCommentIDReqBody")
	proto.RegisterType((*RefreshCommentIDRspBody)(nil), "ht.moment.RefreshCommentIDRspBody")
	proto.RegisterType((*ViewCommentReqBody)(nil), "ht.moment.ViewCommentReqBody")
	proto.RegisterType((*ViewCommentRspBody)(nil), "ht.moment.ViewCommentRspBody")
	proto.RegisterType((*RefreshLikedInfoReqBody)(nil), "ht.moment.RefreshLikedInfoReqBody")
	proto.RegisterType((*RefreshLikedInfoRspBody)(nil), "ht.moment.RefreshLikedInfoRspBody")
	proto.RegisterType((*RefreshBaseCommentReqBody)(nil), "ht.moment.RefreshBaseCommentReqBody")
	proto.RegisterType((*RefreshBaseCommentRspBody)(nil), "ht.moment.RefreshBaseCommentRspBody")
	proto.RegisterType((*GetNotifyEventReqBody)(nil), "ht.moment.GetNotifyEventReqBody")
	proto.RegisterType((*GetNotifyEventRspBody)(nil), "ht.moment.GetNotifyEventRspBody")
	proto.RegisterType((*GetUserInfoReqBody)(nil), "ht.moment.GetUserInfoReqBody")
	proto.RegisterType((*GetUserInfoRspBody)(nil), "ht.moment.GetUserInfoRspBody")
	proto.RegisterType((*GetMomentLikeUserinfoReqBody)(nil), "ht.moment.GetMomentLikeUserinfoReqBody")
	proto.RegisterType((*GetMomentLikeUserinfoRspBody)(nil), "ht.moment.GetMomentLikeUserinfoRspBody")
	proto.RegisterType((*RestoreUserReqBody)(nil), "ht.moment.RestoreUserReqBody")
	proto.RegisterType((*RestoreUserRspBody)(nil), "ht.moment.RestoreUserRspBody")
	proto.RegisterType((*ModMntStatusReqBody)(nil), "ht.moment.ModMntStatusReqBody")
	proto.RegisterType((*ModMntStatusRspBody)(nil), "ht.moment.ModMntStatusRspBody")
	proto.RegisterType((*OperatorUidReqBody)(nil), "ht.moment.OperatorUidReqBody")
	proto.RegisterType((*OperatorUidRspBody)(nil), "ht.moment.OperatorUidRspBody")
	proto.RegisterType((*OpUid)(nil), "ht.moment.OpUid")
	proto.RegisterType((*OpUidList)(nil), "ht.moment.OpUidList")
	proto.RegisterType((*GetUidListReqBody)(nil), "ht.moment.GetUidListReqBody")
	proto.RegisterType((*GetUidListRspBody)(nil), "ht.moment.GetUidListRspBody")
	proto.RegisterType((*PostEssenceMntReqBody)(nil), "ht.moment.PostEssenceMntReqBody")
	proto.RegisterType((*PostEssenceMntRspBody)(nil), "ht.moment.PostEssenceMntRspBody")
	proto.RegisterType((*BackEndOpUidReqBody)(nil), "ht.moment.BackEndOpUidReqBody")
	proto.RegisterType((*BackEndOpUidRspBody)(nil), "ht.moment.BackEndOpUidRspBody")
	proto.RegisterType((*QueryBeBlockedReqBody)(nil), "ht.moment.QueryBeBlockedReqBody")
	proto.RegisterType((*QueryBeBlockedRspBody)(nil), "ht.moment.QueryBeBlockedRspBody")
	proto.RegisterType((*QueryRevealEntryReqBody)(nil), "ht.moment.QueryRevealEntryReqBody")
	proto.RegisterType((*RevealBody)(nil), "ht.moment.RevealBody")
	proto.RegisterType((*QueryRevealEntryRspBody)(nil), "ht.moment.QueryRevealEntryRspBody")
	proto.RegisterType((*OpMidBucketStatusReqBody)(nil), "ht.moment.opMidBucketStatusReqBody")
	proto.RegisterType((*OpMidBucketStatusRspBody)(nil), "ht.moment.opMidBucketStatusRspBody")
	proto.RegisterType((*MomentUserIndexInfo)(nil), "ht.moment.momentUserIndexInfo")
	proto.RegisterType((*GetUserIndexMomentReqBody)(nil), "ht.moment.GetUserIndexMomentReqBody")
	proto.RegisterType((*GetUserIndexMomentRspBody)(nil), "ht.moment.GetUserIndexMomentRspBody")
	proto.RegisterEnum("ht.moment.RET_CODE", RET_CODE_name, RET_CODE_value)
	proto.RegisterEnum("ht.moment.NOTIFY_TYPE", NOTIFY_TYPE_name, NOTIFY_TYPE_value)
	proto.RegisterEnum("ht.moment.COMMENT_TYPE", COMMENT_TYPE_name, COMMENT_TYPE_value)
	proto.RegisterEnum("ht.moment.QUERY_TYPE", QUERY_TYPE_name, QUERY_TYPE_value)
	proto.RegisterEnum("ht.moment.MntStatusOpType", MntStatusOpType_name, MntStatusOpType_value)
	proto.RegisterEnum("ht.moment.OPERATORLIST", OPERATORLIST_name, OPERATORLIST_value)
	proto.RegisterEnum("ht.moment.OPERATORTYPE", OPERATORTYPE_name, OPERATORTYPE_value)
	proto.RegisterEnum("ht.moment.MID_BUCKET_STATUS", MID_BUCKET_STATUS_name, MID_BUCKET_STATUS_value)
}

func init() { proto.RegisterFile("HT_moment_body.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 3033 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x59, 0x4b, 0x6f, 0x23, 0xc7,
	0xf1, 0xff, 0xf3, 0x21, 0x89, 0x2c, 0x92, 0xd2, 0x68, 0xb4, 0x0f, 0xee, 0xda, 0x7f, 0xc7, 0x19,
	0x6f, 0x1c, 0x43, 0x4e, 0xd6, 0xb6, 0x16, 0x71, 0x0c, 0x03, 0x09, 0xc2, 0xc7, 0xec, 0x8a, 0x58,
	0x92, 0x23, 0x93, 0xc3, 0x5d, 0xef, 0x25, 0x13, 0x8a, 0xec, 0x95, 0x26, 0x22, 0x39, 0xda, 0xe1,
	0x48, 0xb6, 0x02, 0xe4, 0x96, 0x20, 0xb7, 0x20, 0x08, 0x90, 0x5b, 0x90, 0x00, 0x41, 0x72, 0xc9,
	0x21, 0x5f, 0xc1, 0x87, 0x00, 0xf9, 0x38, 0xfe, 0x04, 0x39, 0xa4, 0xba, 0xba, 0x9b, 0xf3, 0xa2,
	0x68, 0xee, 0x22, 0x46, 0x7c, 0x10, 0xc4, 0xa9, 0xe9, 0xaa, 0xfe, 0xd5, 0xb3, 0xab, 0x7a, 0xe0,
	0xc6, 0xa1, 0xed, 0x4c, 0xbd, 0x29, 0x9b, 0x05, 0xce, 0xb1, 0x37, 0xbe, 0xba, 0x7f, 0xee, 0x7b,
	0x81, 0xa7, 0x17, 0x4f, 0x83, 0xfb, 0x82, 0x6a, 0xbc, 0x0d, 0x9b, 0x87, 0x6c, 0x38, 0x66, 0xbe,
	0x5e, 0x86, 0xfc, 0xc8, 0x1b, 0xb3, 0x6a, 0xe6, 0xcd, 0xcc, 0x3b, 0x15, 0x7d, 0x1b, 0x36, 0x7d,
	0x36, 0x9c, 0x7b, 0xb3, 0x6a, 0x16, 0x9f, 0xcb, 0x46, 0x07, 0xb6, 0x06, 0xbd, 0x76, 0x6b, 0xf6,
	0xdc, 0xd3, 0x4b, 0x90, 0xbb, 0xf0, 0x27, 0xb4, 0xae, 0xac, 0xef, 0x42, 0x31, 0x38, 0xbd, 0x98,
	0x1e, 0x3b, 0x9c, 0x44, 0x4b, 0xf5, 0x3d, 0x28, 0x8d, 0xd9, 0x7c, 0xe4, 0xbb, 0xe7, 0x81, 0x8b,
	0xfc, 0x39, 0x22, 0x56, 0x60, 0x23, 0x70, 0x83, 0x09, 0xab, 0xe6, 0x49, 0xdc, 0x53, 0x28, 0xb6,
	0xdd, 0x33, 0x36, 0xae, 0x23, 0x28, 0x2e, 0x70, 0xea, 0x8e, 0xa5, 0x40, 0xe4, 0x9e, 0xf0, 0x37,
	0xce, 0xc8, 0xbb, 0x98, 0x05, 0x24, 0x32, 0xaf, 0xdf, 0x52, 0xc4, 0xe3, 0x2b, 0x67, 0xca, 0x48,
	0x64, 0xe5, 0xe3, 0xcc, 0xfb, 0xba, 0x06, 0x05, 0x41, 0x0f, 0xe6, 0x24, 0x38, 0x6f, 0x7c, 0x04,
	0xc5, 0x27, 0x9e, 0x3b, 0x62, 0x4a, 0x70, 0x88, 0x14, 0xd7, 0x8e, 0x2f, 0xfc, 0x21, 0x61, 0xca,
	0x92, 0x8e, 0xa8, 0xf1, 0xdc, 0xfd, 0x85, 0x14, 0x67, 0x74, 0xa1, 0xd8, 0x9a, 0x0e, 0x4f, 0x04,
	0x67, 0x4c, 0x2d, 0xc1, 0xbf, 0x03, 0x5b, 0xc7, 0xee, 0x49, 0x44, 0x4f, 0x54, 0xe9, 0x33, 0x77,
	0x1c, 0x9c, 0x0a, 0x7e, 0x6e, 0xb1, 0x53, 0xe6, 0x9e, 0x9c, 0x06, 0x84, 0xa4, 0x62, 0xbc, 0x0f,
	0x50, 0xbf, 0x18, 0x9d, 0xb1, 0x80, 0x04, 0xa2, 0x5a, 0xc7, 0xf4, 0xe4, 0xcc, 0x86, 0x53, 0x26,
	0x45, 0xa2, 0x04, 0x77, 0x36, 0x66, 0x9f, 0x0b, 0x2d, 0x11, 0xbb, 0xe4, 0x20, 0x33, 0xef, 0x2f,
	0x38, 0x26, 0xee, 0x3c, 0x40, 0x8e, 0xdc, 0x3b, 0xa5, 0x83, 0x9b, 0xf7, 0x17, 0xae, 0xbb, 0x1f,
	0x4a, 0x37, 0x7e, 0x00, 0xdb, 0x0d, 0xcf, 0xf7, 0xd9, 0x28, 0x68, 0x78, 0xb3, 0x00, 0x5f, 0x72,
	0xb4, 0x23, 0xf1, 0x53, 0xee, 0xa5, 0x03, 0x8c, 0xc4, 0x12, 0x77, 0xe1, 0xd4, 0x00, 0x4a, 0x92,
	0x8d, 0x30, 0xae, 0xc3, 0xc3, 0x8d, 0x36, 0xf3, 0x02, 0x26, 0xdd, 0x7a, 0x00, 0x3b, 0x72, 0x85,
	0xa3, 0x58, 0xf3, 0x04, 0xf4, 0x4e, 0x04, 0x68, 0x1c, 0x9a, 0xf1, 0x65, 0x16, 0xf4, 0x0e, 0xbd,
	0x19, 0xcc, 0x99, 0xcf, 0x75, 0xa5, 0xdd, 0xd1, 0x7e, 0x17, 0xf8, 0x2c, 0x03, 0xa1, 0xc2, 0xfd,
	0x35, 0x73, 0x47, 0x67, 0x64, 0xae, 0x45, 0x60, 0xcd, 0xc8, 0x7f, 0xc3, 0x89, 0x1b, 0x5c, 0x49,
	0x04, 0xb8, 0xec, 0x14, 0x03, 0x98, 0xfc, 0x92, 0x8f, 0x2e, 0xbb, 0x64, 0xce, 0x64, 0x38, 0x3b,
	0xa9, 0x6e, 0x90, 0x34, 0x24, 0x06, 0x6c, 0x38, 0x3a, 0x25, 0xda, 0x41, 0x75, 0x33, 0x4d, 0x7c,
	0x50, 0xdd, 0x22, 0x62, 0x15, 0x34, 0x41, 0x9c, 0x9f, 0xb9, 0x93, 0x09, 0xbb, 0x64, 0x93, 0x83,
	0x6a, 0xe1, 0x9a, 0x37, 0x0f, 0xaa, 0x45, 0x7a, 0x83, 0x86, 0x9a, 0xb0, 0xa1, 0x3f, 0xe3, 0x72,
	0x3e, 0xa8, 0x42, 0x8a, 0x76, 0x50, 0x2d, 0xa5, 0x68, 0x0f, 0xaa, 0x65, 0x45, 0x5b, 0xc8, 0xfb,
	0xa0, 0x5a, 0x49, 0xd1, 0x0e, 0xaa, 0xdb, 0x29, 0xda, 0x83, 0xea, 0x0e, 0xd1, 0x30, 0x4c, 0x8f,
	0x2f, 0xae, 0x9c, 0x79, 0x30, 0x44, 0x8f, 0x68, 0x8a, 0xc4, 0xcd, 0xe8, 0x04, 0x57, 0xe7, 0xac,
	0xba, 0x4b, 0x91, 0xf8, 0x73, 0xd8, 0x16, 0xf6, 0x6e, 0x8d, 0x7b, 0x6c, 0x7e, 0x31, 0x09, 0xe2,
	0x19, 0x17, 0x4d, 0xa2, 0x9b, 0x94, 0x6e, 0xe4, 0xf7, 0x29, 0x55, 0x0d, 0xa4, 0xdd, 0x92, 0xb4,
	0xad, 0x31, 0x9b, 0xb0, 0x80, 0x8d, 0xab, 0xb7, 0x55, 0xfa, 0xe1, 0x5e, 0xde, 0xb9, 0x23, 0xeb,
	0x44, 0x95, 0x42, 0x0a, 0x03, 0xa2, 0x21, 0x58, 0xa3, 0x9b, 0x8d, 0x16, 0x9b, 0x2d, 0x11, 0x63,
	0xfc, 0x39, 0x0b, 0x20, 0x00, 0x2e, 0x0d, 0x04, 0x09, 0x36, 0xab, 0xb2, 0x50, 0x05, 0x5a, 0x4e,
	0x15, 0xa0, 0x73, 0x6f, 0x8e, 0x40, 0xdd, 0xa9, 0x28, 0x2e, 0x79, 0xfd, 0x2d, 0xd8, 0xb8, 0xe4,
	0x35, 0x80, 0x1c, 0x51, 0x3a, 0xb8, 0x11, 0x09, 0xc5, 0xb0, 0x36, 0xdc, 0x83, 0x4d, 0x97, 0xa7,
	0xfb, 0x1c, 0x5d, 0x93, 0x4b, 0xac, 0x0a, 0xeb, 0x00, 0xda, 0x06, 0xa5, 0xbb, 0x14, 0xff, 0xe5,
	0x85, 0xb5, 0x30, 0xba, 0x82, 0x0b, 0x2c, 0x95, 0xdc, 0x59, 0x59, 0x8e, 0x60, 0xe2, 0xcd, 0x4e,
	0x04, 0x69, 0x7b, 0x41, 0x42, 0x17, 0x0b, 0x27, 0x08, 0x57, 0xdd, 0x84, 0xca, 0x3c, 0xf0, 0x9d,
	0x90, 0xac, 0x91, 0xb8, 0x7b, 0x50, 0xc0, 0xc8, 0x75, 0x5c, 0xcc, 0x02, 0xf2, 0x56, 0xe9, 0x40,
	0x8f, 0x00, 0x91, 0x25, 0xd7, 0xf8, 0x09, 0x14, 0x7b, 0xec, 0x7c, 0x72, 0x45, 0x85, 0xe1, 0xab,
	0x13, 0x25, 0x16, 0x03, 0xa2, 0xba, 0xfd, 0x26, 0xcb, 0x73, 0x7d, 0x7a, 0xad, 0x91, 0x77, 0x42,
	0xbf, 0x64, 0x95, 0xd5, 0xb9, 0xd7, 0x84, 0x91, 0xbf, 0x07, 0x1b, 0x23, 0x12, 0xc6, 0x53, 0x64,
	0xfb, 0xe0, 0x76, 0x34, 0xb9, 0xad, 0x4e, 0xc7, 0xec, 0xda, 0x8e, 0xfd, 0xec, 0xc8, 0xfc, 0x38,
	0x6f, 0x9b, 0x9f, 0xda, 0x51, 0x1f, 0x15, 0x88, 0x7d, 0x3f, 0x56, 0x47, 0x8a, 0xa4, 0xe6, 0xad,
	0x74, 0x81, 0x50, 0x95, 0x37, 0xf4, 0x27, 0x90, 0x3f, 0xbf, 0x8b, 0xc5, 0xd8, 0x73, 0xc7, 0xa2,
	0x0e, 0xa6, 0xbd, 0x15, 0x5a, 0x66, 0xe1, 0xf8, 0xf2, 0xf5, 0x8e, 0x37, 0x7e, 0x06, 0xa5, 0xfa,
	0x70, 0xce, 0xa4, 0x31, 0xd6, 0xb2, 0x1e, 0xea, 0x5f, 0x56, 0x09, 0xc1, 0x8f, 0x51, 0x19, 0x58,
	0x71, 0x15, 0x16, 0xb6, 0x35, 0xfe, 0x98, 0x81, 0x4a, 0x93, 0x05, 0x43, 0x77, 0xb2, 0x6c, 0x93,
	0xcc, 0xb2, 0x5a, 0x96, 0x4d, 0xd5, 0xb2, 0x45, 0x74, 0x87, 0x09, 0x9e, 0x4f, 0x27, 0xf8, 0xc6,
	0x2b, 0xc0, 0xfb, 0x7d, 0x06, 0xb4, 0x88, 0x05, 0xec, 0xe1, 0xf1, 0x84, 0xc5, 0x2b, 0x02, 0xc6,
	0xaa, 0x92, 0x17, 0x3d, 0x85, 0xe3, 0x65, 0x21, 0x47, 0xb4, 0x6a, 0xb8, 0x54, 0x9c, 0xcd, 0x79,
	0x55, 0x1c, 0x22, 0xa0, 0xc8, 0x71, 0x40, 0x8e, 0x8b, 0x82, 0x8a, 0x80, 0x30, 0xfe, 0x91, 0x85,
	0x1d, 0x59, 0x03, 0x26, 0xde, 0xe8, 0x8c, 0xdc, 0xf9, 0x2e, 0xe4, 0xb9, 0xa6, 0x04, 0xaa, 0x74,
	0xf0, 0xff, 0x11, 0xce, 0x25, 0xc7, 0xc7, 0x77, 0x60, 0x53, 0xbc, 0x24, 0xb0, 0xf1, 0x93, 0x32,
	0x52, 0x5c, 0x92, 0xa8, 0x72, 0xab, 0x50, 0x45, 0xab, 0xd5, 0xa6, 0xd2, 0x2b, 0xd1, 0x8b, 0x14,
	0x14, 0x3d, 0x65, 0x89, 0x62, 0x8a, 0x43, 0x18, 0x93, 0xe7, 0x50, 0x9e, 0xd3, 0x53, 0x66, 0x16,
	0xe1, 0xbe, 0x56, 0x3d, 0x36, 0xbe, 0xc8, 0x01, 0x74, 0xbd, 0xc0, 0x7d, 0xbe, 0xbc, 0x28, 0xdc,
	0x83, 0x3c, 0x05, 0x48, 0x96, 0x12, 0x36, 0xaa, 0x5f, 0xd7, 0xb2, 0x5b, 0x0f, 0x9f, 0x51, 0xbe,
	0x2a, 0xaf, 0xe7, 0x54, 0x48, 0xe2, 0x83, 0xa3, 0x14, 0x16, 0xd1, 0x76, 0x03, 0xca, 0xd3, 0xe9,
	0x2c, 0x3c, 0xdd, 0x37, 0x68, 0xa9, 0x2c, 0x0e, 0x9b, 0x8a, 0x6f, 0x14, 0xe1, 0xdb, 0x52, 0x7c,
	0xa3, 0x28, 0x5f, 0x41, 0x56, 0x3b, 0x55, 0x74, 0x8b, 0xa9, 0x0c, 0x0d, 0x8b, 0x6e, 0x22, 0x37,
	0x40, 0xe5, 0xc6, 0x22, 0x85, 0x4a, 0xa9, 0x6c, 0x29, 0xa7, 0xcf, 0x82, 0x0a, 0x99, 0x2e, 0x96,
	0x40, 0xdb, 0xe9, 0x04, 0x12, 0xc5, 0x39, 0x56, 0x61, 0xb4, 0x15, 0x15, 0x06, 0xcd, 0x3c, 0x9d,
	0x9f, 0x38, 0xa8, 0xfb, 0xae, 0x3a, 0x94, 0x83, 0xa1, 0x7f, 0x82, 0x4d, 0xda, 0x05, 0xd2, 0x74,
	0xa2, 0xbd, 0xad, 0x8a, 0xe5, 0xde, 0xca, 0x62, 0x89, 0xc7, 0xf2, 0xee, 0x11, 0xa2, 0x15, 0xc1,
	0xd9, 0x63, 0x2f, 0x12, 0x61, 0x9c, 0x59, 0x15, 0xc6, 0x88, 0x03, 0x59, 0x43, 0x05, 0xb0, 0xe4,
	0x5e, 0x32, 0x7f, 0xce, 0xcb, 0xab, 0x68, 0x03, 0x78, 0xbf, 0xed, 0x9d, 0xb1, 0x19, 0xe1, 0x2c,
	0x1b, 0x4f, 0x62, 0x7b, 0xcd, 0xcf, 0x49, 0xc8, 0xb7, 0x61, 0x93, 0xdb, 0xe5, 0x62, 0x2e, 0xf7,
	0xda, 0x8d, 0xec, 0x25, 0x87, 0x02, 0x19, 0x20, 0xa5, 0xb4, 0x79, 0xcb, 0x14, 0x85, 0x03, 0xd8,
	0xe1, 0x72, 0x79, 0x2f, 0xaf, 0x34, 0x58, 0x79, 0x7c, 0xcb, 0x54, 0x70, 0x3c, 0xdf, 0xc1, 0x2e,
	0x32, 0x6c, 0xe4, 0x17, 0x70, 0xc5, 0x78, 0x30, 0x8d, 0x88, 0x7d, 0x69, 0xb0, 0x59, 0x79, 0xe6,
	0x94, 0x66, 0x94, 0x1e, 0xd1, 0xea, 0x13, 0xb5, 0x66, 0x98, 0x3c, 0xc6, 0x4f, 0x41, 0xe7, 0xdb,
	0xc9, 0xac, 0x57, 0x8a, 0xc4, 0x4a, 0x62, 0xb2, 0xc4, 0x66, 0x57, 0x95, 0xd8, 0x50, 0x1d, 0xca,
	0x2c, 0xe3, 0x77, 0x99, 0xf8, 0x06, 0x2f, 0xad, 0x52, 0x2e, 0x9a, 0x75, 0xf9, 0xb4, 0x33, 0x36,
	0x28, 0xd6, 0x5f, 0x46, 0xe5, 0x1a, 0xec, 0x35, 0x29, 0x61, 0xe3, 0xe1, 0xb7, 0xd2, 0x79, 0x09,
	0xad, 0xcc, 0x84, 0x88, 0x57, 0xd3, 0xca, 0xb0, 0xe0, 0x86, 0x10, 0x93, 0x30, 0xff, 0x4a, 0x28,
	0xb1, 0xee, 0x24, 0x11, 0x3c, 0xfd, 0xa4, 0xc0, 0xff, 0x82, 0xb9, 0xb1, 0xaf, 0xdd, 0x15, 0x42,
	0xf9, 0xa1, 0xb3, 0x0c, 0x62, 0x2e, 0x9a, 0x74, 0x62, 0xbc, 0xfa, 0x30, 0xc6, 0xb3, 0x36, 0x0a,
	0xe3, 0x5f, 0x19, 0xb8, 0xf3, 0xc4, 0x65, 0x9f, 0xb5, 0xb1, 0x66, 0xa9, 0x9c, 0x6d, 0x35, 0xaf,
	0xb3, 0xcb, 0x3d, 0xd8, 0x78, 0x11, 0x29, 0xf5, 0x51, 0x7f, 0x7f, 0x32, 0x30, 0x7b, 0xb2, 0xd2,
	0xc7, 0x3a, 0xd2, 0x9c, 0x9a, 0x7e, 0xa2, 0x65, 0x36, 0xaf, 0x8e, 0x7e, 0x3c, 0x7f, 0x87, 0x13,
	0x67, 0x3a, 0xfc, 0xdc, 0xe1, 0xb6, 0x28, 0xa8, 0x1a, 0xef, 0xb3, 0x17, 0x0e, 0xd5, 0x4d, 0x24,
	0x16, 0xd5, 0xc4, 0x2b, 0x8b, 0x10, 0x24, 0x8b, 0x10, 0x8d, 0x3b, 0xc6, 0x5f, 0x97, 0x2b, 0xb2,
	0xbe, 0x3f, 0x78, 0x90, 0xe3, 0xa9, 0xe0, 0xd0, 0x98, 0x2e, 0xfa, 0x52, 0x2c, 0x90, 0x62, 0x2c,
	0x96, 0x5d, 0x4e, 0x7a, 0x22, 0x96, 0xd3, 0xf3, 0x56, 0xbc, 0x63, 0xbc, 0x93, 0x2a, 0xa4, 0x6a,
	0x40, 0x31, 0xbe, 0xcc, 0xc0, 0x5d, 0x0e, 0xf3, 0x10, 0x57, 0x7b, 0xfe, 0xd5, 0x37, 0xc2, 0xe0,
	0xa1, 0x9a, 0xc5, 0x55, 0x6a, 0x26, 0xfc, 0x02, 0x09, 0xbf, 0x94, 0x92, 0x7e, 0xa1, 0x91, 0xd3,
	0xf8, 0xdb, 0x35, 0x0a, 0x7f, 0xd3, 0x1c, 0xf3, 0x3e, 0xec, 0x72, 0x98, 0x6b, 0x96, 0xa8, 0x1c,
	0xa6, 0xdc, 0x49, 0x8c, 0x63, 0x7d, 0x7d, 0xde, 0xc3, 0xde, 0xc7, 0x0b, 0xbb, 0x42, 0x81, 0xec,
	0x6e, 0xfa, 0xec, 0x55, 0xbd, 0xa9, 0x71, 0x09, 0xb7, 0x7b, 0xec, 0xb9, 0xcf, 0xe6, 0xa7, 0x6a,
	0xdc, 0x6d, 0xae, 0x55, 0xb8, 0xaa, 0xa0, 0x09, 0x77, 0xa7, 0x3a, 0xe9, 0xc5, 0x65, 0x50, 0x81,
	0x1e, 0x63, 0x71, 0x31, 0x92, 0x39, 0x57, 0x36, 0xfe, 0x99, 0x59, 0xb2, 0xf1, 0xfa, 0x7a, 0xc6,
	0x6f, 0x9c, 0xe2, 0x6e, 0xcc, 0x45, 0xd1, 0x16, 0x97, 0x0f, 0x02, 0xb0, 0xa4, 0x1f, 0x2d, 0x11,
	0xed, 0xdd, 0xd0, 0xaf, 0xe5, 0x94, 0xf5, 0x12, 0x57, 0x02, 0xc6, 0x8f, 0x41, 0xe7, 0x6e, 0x7a,
	0xa5, 0x8a, 0x9f, 0xa3, 0x8b, 0xab, 0x18, 0xff, 0x4b, 0x17, 0x78, 0xd1, 0x52, 0xde, 0x4f, 0xcc,
	0x02, 0xc2, 0xeb, 0xd5, 0x08, 0x57, 0x6c, 0x8a, 0xc3, 0x7a, 0xae, 0x4c, 0x4f, 0x77, 0x97, 0x3c,
	0x0e, 0xd6, 0x0a, 0xca, 0xe7, 0x4b, 0xf8, 0xd6, 0x87, 0xfc, 0x0e, 0x80, 0x18, 0x07, 0x08, 0x63,
	0x36, 0xd5, 0x9c, 0x2e, 0xee, 0x51, 0x8d, 0x8f, 0xe0, 0x8e, 0xdc, 0x27, 0x32, 0xc3, 0xac, 0x85,
	0xd0, 0x5f, 0xca, 0xb9, 0x3e, 0xc6, 0x83, 0x30, 0x4e, 0x02, 0x3e, 0x4e, 0x62, 0x0c, 0x73, 0x98,
	0xaf, 0x2d, 0x1f, 0xab, 0x68, 0xe2, 0x44, 0xb4, 0x37, 0x1f, 0xb1, 0x40, 0xb4, 0x24, 0xe6, 0xe5,
	0x0a, 0xa4, 0x58, 0xbe, 0x26, 0x43, 0xec, 0x74, 0x64, 0x28, 0x54, 0x8c, 0x5f, 0x67, 0x52, 0xac,
	0xeb, 0x43, 0x0d, 0x9b, 0x24, 0xba, 0x73, 0xc9, 0xae, 0x68, 0x92, 0xa2, 0x3b, 0xe7, 0xd4, 0x8d,
	0xf1, 0xd4, 0xf3, 0xe5, 0x90, 0x6b, 0xdc, 0x03, 0x1d, 0x61, 0xa8, 0x29, 0xf4, 0x1a, 0xf8, 0xc6,
	0x71, 0x7c, 0xd5, 0xfa, 0x48, 0xf9, 0xe8, 0xe5, 0x25, 0x86, 0xf0, 0x4a, 0xf2, 0x7e, 0x5c, 0xdc,
	0xee, 0x74, 0xe0, 0x75, 0xdc, 0x43, 0xd4, 0x28, 0x1e, 0x0f, 0x7c, 0x37, 0x77, 0x9d, 0xf0, 0x4c,
	0xde, 0xff, 0x51, 0x29, 0x32, 0x7e, 0x95, 0xb9, 0x4e, 0xde, 0xfa, 0xe8, 0xa3, 0x52, 0x45, 0xb1,
	0x79, 0x0f, 0x0a, 0x17, 0x52, 0x8e, 0x1c, 0xbb, 0x57, 0x8f, 0xf4, 0xdc, 0xbe, 0x58, 0x2f, 0xf0,
	0x84, 0x5a, 0xd5, 0x74, 0x19, 0x3f, 0x8c, 0xaf, 0x5a, 0xbf, 0xcd, 0x3a, 0x86, 0xbd, 0x8e, 0x37,
	0xee, 0xcc, 0x82, 0x3e, 0x2d, 0x5c, 0xda, 0xf6, 0x63, 0x55, 0xf3, 0xce, 0x9d, 0xc8, 0x69, 0x1f,
	0x3b, 0x13, 0x14, 0xab, 0x75, 0x6e, 0xe3, 0x8a, 0xf8, 0x75, 0xa8, 0x68, 0x6e, 0x3f, 0x4a, 0xec,
	0xb1, 0x3e, 0xba, 0xdf, 0xe2, 0xcc, 0x60, 0x9d, 0x33, 0x7f, 0x88, 0x9a, 0x0d, 0xdc, 0xb1, 0x42,
	0xb7, 0x8f, 0x6d, 0x85, 0xcb, 0xdb, 0x7e, 0x0e, 0x29, 0x93, 0x1a, 0x30, 0xad, 0x23, 0xb3, 0x57,
	0xb3, 0xad, 0x5e, 0xbb, 0xd5, 0xb7, 0xb1, 0x72, 0x24, 0xc0, 0x2f, 0x5b, 0x49, 0xcd, 0x0a, 0x16,
	0x74, 0x5c, 0xa9, 0xba, 0x88, 0xc5, 0xf7, 0x0c, 0x69, 0x67, 0x11, 0xed, 0xa3, 0x38, 0x9e, 0x97,
	0xc9, 0xb8, 0x08, 0xe4, 0xec, 0x4a, 0xc8, 0xc6, 0xbb, 0xb0, 0x61, 0x9d, 0xa3, 0x78, 0xfa, 0x74,
	0xb3, 0x08, 0x57, 0x3c, 0x86, 0xb8, 0x22, 0x38, 0xe9, 0xf0, 0x41, 0x7e, 0x7a, 0x2e, 0xeb, 0x80,
	0x0d, 0x45, 0x5a, 0xdc, 0x46, 0xe9, 0x22, 0xde, 0x70, 0x97, 0x4b, 0x79, 0x61, 0x54, 0x59, 0x50,
	0xb0, 0xac, 0xc9, 0xdc, 0x79, 0x0b, 0x27, 0x7f, 0x3c, 0xa4, 0x86, 0xbe, 0x3f, 0xbc, 0x92, 0x21,
	0xa8, 0x45, 0x91, 0x70, 0x61, 0xc6, 0x2f, 0x61, 0x97, 0xe7, 0xab, 0x10, 0xfb, 0x2a, 0x66, 0x47,
	0xb4, 0xa7, 0xee, 0x98, 0x39, 0x0b, 0x38, 0x59, 0xa5, 0x04, 0x16, 0x1e, 0x67, 0x7e, 0x3a, 0xf4,
	0x19, 0x91, 0x97, 0x9b, 0xf9, 0x8b, 0x4c, 0x6c, 0xff, 0xaf, 0xc5, 0xcc, 0x38, 0xcd, 0x6e, 0x13,
	0xc4, 0xa8, 0x35, 0x92, 0xf7, 0x31, 0xa1, 0x69, 0xbf, 0x0f, 0x3b, 0x21, 0x72, 0xb1, 0x3c, 0x7f,
	0xfd, 0x72, 0xe3, 0xef, 0x58, 0x9e, 0xf9, 0xb4, 0x6b, 0xce, 0xe7, 0x6c, 0x36, 0x62, 0x9d, 0x6b,
	0x26, 0xea, 0x58, 0x83, 0x9c, 0x5d, 0x7e, 0x47, 0x2e, 0x06, 0xb1, 0x84, 0x89, 0xa2, 0x71, 0xbd,
	0xb1, 0x3a, 0xae, 0x63, 0x19, 0xb9, 0x19, 0xff, 0xe6, 0x46, 0xd7, 0x70, 0x46, 0x2b, 0x85, 0xf5,
	0x55, 0x9b, 0x29, 0xe3, 0x2f, 0x19, 0xd8, 0xab, 0x0f, 0x47, 0x67, 0xe6, 0x6c, 0x4c, 0xc6, 0xf8,
	0x9f, 0xa7, 0x6c, 0x5c, 0x7d, 0xba, 0xb9, 0x33, 0xc6, 0x09, 0x8c, 0x5f, 0x4f, 0x1a, 0xff, 0x08,
	0x6e, 0x7e, 0x72, 0xc1, 0xfc, 0xab, 0x3a, 0xa3, 0x8e, 0x99, 0x2d, 0x6c, 0x81, 0x39, 0xf9, 0xdc,
	0xf7, 0xa6, 0x4e, 0x98, 0xdb, 0xf1, 0x1b, 0xb4, 0xac, 0xfc, 0x14, 0x9b, 0x64, 0x5f, 0x1f, 0x26,
	0xca, 0x3b, 0x66, 0xce, 0xb1, 0xe0, 0x5b, 0x14, 0x8a, 0xdb, 0x24, 0xaf, 0xc7, 0x2e, 0xd9, 0x70,
	0x62, 0xce, 0x02, 0xfe, 0xf3, 0x85, 0xba, 0x6b, 0x8c, 0x0e, 0x50, 0xa9, 0x09, 0x2f, 0x77, 0xed,
	0x84, 0x67, 0x98, 0x00, 0x42, 0xa0, 0xfc, 0x9e, 0x24, 0x79, 0x32, 0x5f, 0x31, 0x15, 0x22, 0x3a,
	0x9f, 0xd8, 0x24, 0xb8, 0xd3, 0x25, 0xe0, 0x5e, 0xaa, 0x9d, 0x91, 0x45, 0x4e, 0x8a, 0x4c, 0xb6,
	0x33, 0x21, 0x44, 0x7e, 0xa4, 0x54, 0xbd, 0xf3, 0x8e, 0x3b, 0x16, 0xe3, 0x58, 0xfc, 0xd8, 0x5b,
	0xd9, 0x22, 0x60, 0x59, 0x16, 0x37, 0xa8, 0x39, 0x32, 0xc8, 0xeb, 0xd1, 0x43, 0xb0, 0xd5, 0x74,
	0xea, 0x83, 0xc6, 0x63, 0xd3, 0x76, 0xfa, 0x76, 0xcd, 0x1e, 0xf4, 0xa3, 0x31, 0x9c, 0x5f, 0x19,
	0xc3, 0x18, 0x26, 0x4b, 0xf0, 0xac, 0x7f, 0x44, 0x1e, 0xc0, 0xde, 0x34, 0xd2, 0x35, 0x60, 0x26,
	0x2e, 0xbd, 0x0a, 0x47, 0x4d, 0xe6, 0xec, 0x85, 0xb4, 0xb6, 0x03, 0x77, 0x16, 0xdd, 0x18, 0x32,
	0xac, 0x1e, 0x2d, 0x0f, 0x00, 0x44, 0x60, 0xc8, 0x2c, 0xe7, 0xb6, 0x7d, 0x23, 0x82, 0x63, 0xc9,
	0xee, 0x06, 0x5b, 0xba, 0xc1, 0xfa, 0x0e, 0x8d, 0x7e, 0xc7, 0xc8, 0x5d, 0x7b, 0x01, 0xbc, 0xff,
	0xef, 0x1c, 0x14, 0x7a, 0x68, 0xf3, 0x86, 0xd5, 0x34, 0xb1, 0x4f, 0x2d, 0xf1, 0xdf, 0xfd, 0x41,
	0xa3, 0x61, 0xf6, 0xfb, 0xda, 0xff, 0xa1, 0x22, 0xc0, 0x09, 0x47, 0x75, 0xc7, 0xec, 0xf5, 0xb4,
	0x0c, 0xb6, 0x92, 0x1a, 0x7f, 0x6e, 0x75, 0x6d, 0xb3, 0xd7, 0xad, 0xb5, 0x89, 0x9a, 0xc5, 0x59,
	0xf4, 0x06, 0xb1, 0x21, 0x8f, 0x63, 0xb7, 0x3a, 0xa6, 0x35, 0xb0, 0xe9, 0x4d, 0x4e, 0xbf, 0x0d,
	0x7b, 0x62, 0xfd, 0x11, 0x92, 0x8e, 0x6a, 0xbd, 0x5a, 0x87, 0x5e, 0xf0, 0x6f, 0x13, 0x65, 0x62,
	0xe9, 0x37, 0x85, 0xe8, 0x0d, 0xb5, 0x77, 0xd7, 0x72, 0x6a, 0x03, 0xfb, 0x50, 0xdb, 0xd4, 0x5f,
	0xc3, 0x69, 0x87, 0x80, 0x89, 0xab, 0xee, 0xae, 0x85, 0xbf, 0x0f, 0x6b, 0xdd, 0x47, 0x66, 0x53,
	0x03, 0xb5, 0x65, 0xc7, 0x5a, 0xbc, 0x33, 0x3f, 0xc5, 0x82, 0xa1, 0x95, 0xf4, 0x5b, 0xd8, 0xc6,
	0xf1, 0x2d, 0xdb, 0x6d, 0xf3, 0x11, 0x22, 0xec, 0x0f, 0xea, 0x9d, 0x96, 0xad, 0x95, 0x15, 0x14,
	0x94, 0xdf, 0xb1, 0x7a, 0x26, 0x8a, 0x45, 0x1d, 0xba, 0xb6, 0x56, 0xd1, 0xef, 0xc2, 0x2d, 0xfe,
	0xa2, 0xd6, 0xb0, 0x5b, 0x56, 0x97, 0x44, 0xd5, 0xda, 0x6d, 0xeb, 0x29, 0x6e, 0xb3, 0xad, 0xdf,
	0x81, 0x9b, 0x24, 0xac, 0x53, 0x7b, 0x64, 0xc6, 0x5e, 0xed, 0x28, 0xb6, 0x7a, 0x0d, 0x43, 0xb6,
	0xdb, 0x54, 0x7a, 0xe3, 0x1a, 0x4d, 0xd3, 0xdf, 0x84, 0xd7, 0xf9, 0xbb, 0x87, 0x56, 0xaf, 0x8e,
	0x51, 0xdd, 0xe8, 0x20, 0xc4, 0xa7, 0x87, 0x66, 0xd7, 0xa9, 0xb7, 0x2d, 0x5c, 0xdd, 0xd4, 0x76,
	0xb1, 0xba, 0x6c, 0x0b, 0x34, 0x4a, 0x29, 0x4d, 0x57, 0x36, 0xe9, 0x99, 0x12, 0x33, 0x53, 0xba,
	0xf4, 0xcc, 0x66, 0xab, 0x8f, 0x46, 0x6c, 0x09, 0xb3, 0x3e, 0xc7, 0xf3, 0x6d, 0x37, 0xa4, 0x3f,
	0x32, 0x05, 0xf9, 0x44, 0xa9, 0x28, 0xc8, 0xa1, 0x4d, 0x4e, 0x95, 0xb5, 0xc4, 0x8b, 0xc1, 0x51,
	0xb3, 0x66, 0x9b, 0xc4, 0xe2, 0xee, 0x4f, 0xa1, 0x14, 0xfd, 0x8e, 0xb3, 0xb3, 0x78, 0x6c, 0xb7,
	0x1e, 0x9b, 0x18, 0x00, 0x21, 0x81, 0x6b, 0x81, 0x11, 0x80, 0xc0, 0x25, 0xa1, 0xff, 0xac, 0xef,
	0x34, 0xcd, 0x36, 0xfa, 0x1f, 0xe1, 0x44, 0x16, 0xe1, 0x36, 0x47, 0xed, 0x67, 0xe8, 0xfc, 0x5d,
	0xa8, 0x48, 0x72, 0xc7, 0x6a, 0xe2, 0x3f, 0x2d, 0xbf, 0x5f, 0x87, 0x72, 0xf4, 0xd3, 0x05, 0xa6,
	0xd4, 0xd6, 0xa0, 0xfb, 0xb8, 0x6b, 0x3d, 0xed, 0xe2, 0x5e, 0x05, 0xa0, 0xcf, 0xbe, 0xb8, 0x09,
	0x92, 0x1b, 0x56, 0xaf, 0x67, 0x36, 0x6c, 0x94, 0x8e, 0x31, 0xf8, 0xb4, 0x65, 0x1f, 0x3a, 0x4f,
	0xac, 0x56, 0xc3, 0xd4, 0x72, 0xfb, 0x7f, 0xca, 0x00, 0x44, 0x2a, 0x21, 0xae, 0x6d, 0x9a, 0x0f,
	0x6b, 0x83, 0xb6, 0x8d, 0x22, 0xca, 0x50, 0xc0, 0x28, 0xb3, 0xbb, 0x66, 0xaf, 0x8f, 0x62, 0xd0,
	0xa0, 0x5d, 0xb3, 0x86, 0xf6, 0xc4, 0xd8, 0xb3, 0xfa, 0x5c, 0x16, 0x57, 0xa7, 0xc6, 0xfd, 0x5c,
	0x6b, 0xb7, 0x6c, 0x8e, 0x71, 0x0f, 0x76, 0xfa, 0xd6, 0xa0, 0xd7, 0x30, 0x9d, 0x36, 0x7a, 0x61,
	0x80, 0x6e, 0xc6, 0xe0, 0x44, 0x20, 0x83, 0xbe, 0xc9, 0x83, 0x72, 0x0b, 0x72, 0xe8, 0x71, 0x0c,
	0xc6, 0x0a, 0x14, 0x1b, 0xed, 0x5a, 0xbf, 0xdf, 0x41, 0xd3, 0x69, 0x5b, 0x5c, 0x32, 0x06, 0xbb,
	0xd9, 0x45, 0x3e, 0x92, 0x5c, 0xd0, 0x8b, 0xb0, 0xd1, 0xc6, 0xbd, 0xba, 0x5a, 0x71, 0x7f, 0x06,
	0x3b, 0xc9, 0x8e, 0x1e, 0x75, 0xb0, 0x8e, 0xb8, 0x67, 0xb1, 0x62, 0x71, 0xb3, 0xa2, 0xc5, 0xf0,
	0x19, 0xad, 0x67, 0xa2, 0x27, 0xea, 0xcf, 0x1c, 0xda, 0x8e, 0xf4, 0x46, 0xf2, 0x61, 0xab, 0x69,
	0x22, 0x56, 0xdc, 0x72, 0xb1, 0x06, 0x91, 0xa2, 0x0f, 0xf1, 0x11, 0x43, 0x0a, 0xff, 0x28, 0x08,
	0x7b, 0x8e, 0xd5, 0x45, 0x3b, 0xc3, 0xfe, 0x1f, 0x32, 0x50, 0x8e, 0x1d, 0xfe, 0x1a, 0x7f, 0x26,
	0x31, 0x0e, 0x7f, 0x46, 0xc1, 0x62, 0x3f, 0x1e, 0x12, 0xfd, 0x43, 0x34, 0x88, 0x20, 0x67, 0xf5,
	0x37, 0xe0, 0xae, 0x5a, 0x58, 0xc3, 0x18, 0x4e, 0xbc, 0xcf, 0xe9, 0xdf, 0x82, 0xd7, 0xf0, 0xbd,
	0x4c, 0xb2, 0xd8, 0xd6, 0xb4, 0xa0, 0xc0, 0x73, 0x34, 0xbe, 0xa0, 0x6f, 0xb6, 0x1f, 0x8a, 0x97,
	0xc5, 0xfd, 0x0f, 0x43, 0x58, 0xe4, 0x29, 0x61, 0x84, 0xd0, 0xdf, 0x00, 0x9b, 0xf8, 0x5c, 0x6b,
	0x36, 0x11, 0xa0, 0xf8, 0x4d, 0xe1, 0xb4, 0x7f, 0x1f, 0x76, 0xd3, 0x87, 0x01, 0x7a, 0xb6, 0xde,
	0x77, 0x84, 0x89, 0xc9, 0x50, 0xf8, 0xc4, 0x0b, 0x8e, 0x96, 0xfd, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xcb, 0x9b, 0x13, 0x95, 0x9c, 0x26, 0x00, 0x00,
}
