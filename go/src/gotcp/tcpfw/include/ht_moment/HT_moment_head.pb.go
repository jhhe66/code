// Code generated by protoc-gen-go.
// source: HT_moment_head.proto
// DO NOT EDIT!

/*
Package ht_moment is a generated protocol buffer package.

It is generated from these files:
	HT_moment_head.proto
	HT_moment_body.proto

It has these top-level messages:
	ReqBody
	RspBody
	Header
	URLInfo
	LikedBody
	VoiceBody
	ImageBody
	BucketBody
	BucketInfo
	CorrectContent
	CorrectBody
	MomentUserInfoBody
	MomentIdResult
	CommentIdResult
	MomentBody
	ReplyInfo
	CommentBody
	BaseComment
	DetailComment
	BaseCommentTable
	MomentBlockInfo
	NotifyInfo
	PostMomentReqBody
	PostMomentRspBody
	PostLikeReqBody
	PostLikeRspBody
	PostCommentReqBody
	PostCommentRspBody
	DeleteMomentReqBody
	DeleteMomentRspBody
	DeleteCommentReqBody
	DeleteCommentRspBody
	DeleteUserReqBody
	DeleteUserRspBody
	ViewLatestMomentIDReqBody
	ViewLatestMomentIDRspBody
	ViewHistoryMomentIDReqBody
	ViewHistoryMomentIDRspBody
	ViewMomentReqBody
	ViewMomentRspBody
	RefreshCommentIDReqBody
	RefreshCommentIDRspBody
	ViewCommentReqBody
	ViewCommentRspBody
	RefreshLikedInfoReqBody
	RefreshLikedInfoRspBody
	RefreshBaseCommentReqBody
	RefreshBaseCommentRspBody
	GetNotifyEventReqBody
	GetNotifyEventRspBody
	GetUserInfoReqBody
	GetUserInfoRspBody
	GetMomentLikeUserinfoReqBody
	GetMomentLikeUserinfoRspBody
	RestoreUserReqBody
	RestoreUserRspBody
	ModMntStatusReqBody
	ModMntStatusRspBody
	OperatorUidReqBody
	OperatorUidRspBody
	OpUid
	OpUidList
	GetUidListReqBody
	GetUidListRspBody
	PostEssenceMntReqBody
	PostEssenceMntRspBody
	BackEndOpUidReqBody
	BackEndOpUidRspBody
	QueryBeBlockedReqBody
	QueryBeBlockedRspBody
	QueryRevealEntryReqBody
	RevealBody
	QueryRevealEntryRspBody
	OpMidBucketStatusReqBody
	OpMidBucketStatusRspBody
	MomentUserIndexInfo
	GetUserIndexMomentReqBody
	GetUserIndexMomentRspBody
*/
package ht_moment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 根据不同的cmd_type来使用不同的body
type CMD_TYPE int32

const (
	CMD_TYPE_CMD_POST_MOMENT           CMD_TYPE = 1
	CMD_TYPE_CMD_POST_LIKE             CMD_TYPE = 2
	CMD_TYPE_CMD_POST_COMMENT          CMD_TYPE = 3
	CMD_TYPE_CMD_DEL_MOMENT            CMD_TYPE = 4
	CMD_TYPE_CMD_DEL_COMMENT           CMD_TYPE = 5
	CMD_TYPE_CMD_GET_MID_LIST_DOWN     CMD_TYPE = 6
	CMD_TYPE_CMD_GET_MID_LIST_UP       CMD_TYPE = 7
	CMD_TYPE_CMD_GET_MID_CONTENT       CMD_TYPE = 8
	CMD_TYPE_CMD_GET_CID_LIST          CMD_TYPE = 9
	CMD_TYPE_CMD_GET_CID_CONTENT       CMD_TYPE = 10
	CMD_TYPE_CMD_GET_LIKE_INFO         CMD_TYPE = 11
	CMD_TYPE_CMD_GET_COMMENT_INFO      CMD_TYPE = 12
	CMD_TYPE_CMD_GET_NOTIFY            CMD_TYPE = 13
	CMD_TYPE_CMD_GET_USER_INFO         CMD_TYPE = 14
	CMD_TYPE_CMD_GET_LIKE_LIST         CMD_TYPE = 15
	CMD_TYPE_CMD_DELETE_USER           CMD_TYPE = 16
	CMD_TYPE_CMD_RESTORE_USER          CMD_TYPE = 17
	CMD_TYPE_CMD_MOD_MNT_STATUS        CMD_TYPE = 18
	CMD_TYPE_CMD_POST_AD_MOMENT        CMD_TYPE = 19
	CMD_TYPE_CMD_OPERATOR_UID          CMD_TYPE = 20
	CMD_TYPE_CMD_GET_OPERATOR_UID_LIST CMD_TYPE = 21
	CMD_TYPE_CMD_POST_SESS_MOMENT      CMD_TYPE = 22
	CMD_TYPE_CMD_BACKEND_OP_UID        CMD_TYPE = 23
	CMD_TYPE_CMD_QUERY_BEBLOCKED       CMD_TYPE = 24
	CMD_TYPE_CMD_QUERY_REVEAL_ENTRY    CMD_TYPE = 25
	CMD_TYPE_CMD_OP_MID_BUCKET         CMD_TYPE = 26
	CMD_TYPE_CMD_GET_USER_INDEX_MOMENT CMD_TYPE = 27
)

var CMD_TYPE_name = map[int32]string{
	1:  "CMD_POST_MOMENT",
	2:  "CMD_POST_LIKE",
	3:  "CMD_POST_COMMENT",
	4:  "CMD_DEL_MOMENT",
	5:  "CMD_DEL_COMMENT",
	6:  "CMD_GET_MID_LIST_DOWN",
	7:  "CMD_GET_MID_LIST_UP",
	8:  "CMD_GET_MID_CONTENT",
	9:  "CMD_GET_CID_LIST",
	10: "CMD_GET_CID_CONTENT",
	11: "CMD_GET_LIKE_INFO",
	12: "CMD_GET_COMMENT_INFO",
	13: "CMD_GET_NOTIFY",
	14: "CMD_GET_USER_INFO",
	15: "CMD_GET_LIKE_LIST",
	16: "CMD_DELETE_USER",
	17: "CMD_RESTORE_USER",
	18: "CMD_MOD_MNT_STATUS",
	19: "CMD_POST_AD_MOMENT",
	20: "CMD_OPERATOR_UID",
	21: "CMD_GET_OPERATOR_UID_LIST",
	22: "CMD_POST_SESS_MOMENT",
	23: "CMD_BACKEND_OP_UID",
	24: "CMD_QUERY_BEBLOCKED",
	25: "CMD_QUERY_REVEAL_ENTRY",
	26: "CMD_OP_MID_BUCKET",
	27: "CMD_GET_USER_INDEX_MOMENT",
}
var CMD_TYPE_value = map[string]int32{
	"CMD_POST_MOMENT":           1,
	"CMD_POST_LIKE":             2,
	"CMD_POST_COMMENT":          3,
	"CMD_DEL_MOMENT":            4,
	"CMD_DEL_COMMENT":           5,
	"CMD_GET_MID_LIST_DOWN":     6,
	"CMD_GET_MID_LIST_UP":       7,
	"CMD_GET_MID_CONTENT":       8,
	"CMD_GET_CID_LIST":          9,
	"CMD_GET_CID_CONTENT":       10,
	"CMD_GET_LIKE_INFO":         11,
	"CMD_GET_COMMENT_INFO":      12,
	"CMD_GET_NOTIFY":            13,
	"CMD_GET_USER_INFO":         14,
	"CMD_GET_LIKE_LIST":         15,
	"CMD_DELETE_USER":           16,
	"CMD_RESTORE_USER":          17,
	"CMD_MOD_MNT_STATUS":        18,
	"CMD_POST_AD_MOMENT":        19,
	"CMD_OPERATOR_UID":          20,
	"CMD_GET_OPERATOR_UID_LIST": 21,
	"CMD_POST_SESS_MOMENT":      22,
	"CMD_BACKEND_OP_UID":        23,
	"CMD_QUERY_BEBLOCKED":       24,
	"CMD_QUERY_REVEAL_ENTRY":    25,
	"CMD_OP_MID_BUCKET":         26,
	"CMD_GET_USER_INDEX_MOMENT": 27,
}

func (x CMD_TYPE) Enum() *CMD_TYPE {
	p := new(CMD_TYPE)
	*p = x
	return p
}
func (x CMD_TYPE) String() string {
	return proto.EnumName(CMD_TYPE_name, int32(x))
}
func (x *CMD_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMD_TYPE_value, data, "CMD_TYPE")
	if err != nil {
		return err
	}
	*x = CMD_TYPE(value)
	return nil
}
func (CMD_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SYS_TYPE int32

const (
	SYS_TYPE_SYS_MOMENT_SERVER  SYS_TYPE = 1
	SYS_TYPE_SYS_COMMENT_SERVER SYS_TYPE = 2
	SYS_TYPE_SYS_HTTP_PROXY     SYS_TYPE = 19
	SYS_TYPE_SYS_TYPE_TOOL      SYS_TYPE = 20
)

var SYS_TYPE_name = map[int32]string{
	1:  "SYS_MOMENT_SERVER",
	2:  "SYS_COMMENT_SERVER",
	19: "SYS_HTTP_PROXY",
	20: "SYS_TYPE_TOOL",
}
var SYS_TYPE_value = map[string]int32{
	"SYS_MOMENT_SERVER":  1,
	"SYS_COMMENT_SERVER": 2,
	"SYS_HTTP_PROXY":     19,
	"SYS_TYPE_TOOL":      20,
}

func (x SYS_TYPE) Enum() *SYS_TYPE {
	p := new(SYS_TYPE)
	*p = x
	return p
}
func (x SYS_TYPE) String() string {
	return proto.EnumName(SYS_TYPE_name, int32(x))
}
func (x *SYS_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SYS_TYPE_value, data, "SYS_TYPE")
	if err != nil {
		return err
	}
	*x = SYS_TYPE(value)
	return nil
}
func (SYS_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReqBody struct {
	PostMntReqbody            *PostMomentReqBody            `protobuf:"bytes,1,opt,name=post_mnt_reqbody" json:"post_mnt_reqbody,omitempty"`
	PostLikeReqbody           *PostLikeReqBody              `protobuf:"bytes,2,opt,name=post_like_reqbody" json:"post_like_reqbody,omitempty"`
	PostCmntReqbody           *PostCommentReqBody           `protobuf:"bytes,3,opt,name=post_cmnt_reqbody" json:"post_cmnt_reqbody,omitempty"`
	DelMntReqbody             *DeleteMomentReqBody          `protobuf:"bytes,4,opt,name=del_mnt_reqbody" json:"del_mnt_reqbody,omitempty"`
	DelCmntReqbody            *DeleteCommentReqBody         `protobuf:"bytes,5,opt,name=del_cmnt_reqbody" json:"del_cmnt_reqbody,omitempty"`
	ViewLatestMntIdReqbody    *ViewLatestMomentIDReqBody    `protobuf:"bytes,6,opt,name=view_latest_mnt_id_reqbody" json:"view_latest_mnt_id_reqbody,omitempty"`
	ViewHistoryMntIdReqbody   *ViewHistoryMomentIDReqBody   `protobuf:"bytes,7,opt,name=view_history_mnt_id_reqbody" json:"view_history_mnt_id_reqbody,omitempty"`
	ViewMntReqbody            *ViewMomentReqBody            `protobuf:"bytes,8,opt,name=view_mnt_reqbody" json:"view_mnt_reqbody,omitempty"`
	FreshCmntIdReqbody        *RefreshCommentIDReqBody      `protobuf:"bytes,9,opt,name=fresh_cmnt_id_reqbody" json:"fresh_cmnt_id_reqbody,omitempty"`
	ViewCmntReqbody           *ViewCommentReqBody           `protobuf:"bytes,10,opt,name=view_cmnt_reqbody" json:"view_cmnt_reqbody,omitempty"`
	FreshLikeInfoReqbody      *RefreshLikedInfoReqBody      `protobuf:"bytes,11,opt,name=fresh_like_info_reqbody" json:"fresh_like_info_reqbody,omitempty"`
	FreshBaseCmntReqbody      *RefreshBaseCommentReqBody    `protobuf:"bytes,12,opt,name=fresh_base_cmnt_reqbody" json:"fresh_base_cmnt_reqbody,omitempty"`
	GetNotifyEventReqbody     *GetNotifyEventReqBody        `protobuf:"bytes,13,opt,name=get_notify_event_reqbody" json:"get_notify_event_reqbody,omitempty"`
	GetUserInfoReqbody        *GetUserInfoReqBody           `protobuf:"bytes,14,opt,name=get_user_info_reqbody" json:"get_user_info_reqbody,omitempty"`
	GetLikeListReqbody        *GetMomentLikeUserinfoReqBody `protobuf:"bytes,15,opt,name=get_like_list_reqbody" json:"get_like_list_reqbody,omitempty"`
	DeleteUserReqbody         *DeleteUserReqBody            `protobuf:"bytes,16,opt,name=delete_user_reqbody" json:"delete_user_reqbody,omitempty"`
	RestoreUserReqbody        *RestoreUserReqBody           `protobuf:"bytes,17,opt,name=restore_user_reqbody" json:"restore_user_reqbody,omitempty"`
	ModMntStatusReqbody       *ModMntStatusReqBody          `protobuf:"bytes,18,opt,name=mod_mnt_status_reqbody" json:"mod_mnt_status_reqbody,omitempty"`
	OpUidReqbody              *OperatorUidReqBody           `protobuf:"bytes,20,opt,name=op_uid_reqbody" json:"op_uid_reqbody,omitempty"`
	GetOpUidListReqbody       *GetUidListReqBody            `protobuf:"bytes,21,opt,name=get_op_uid_list_reqbody" json:"get_op_uid_list_reqbody,omitempty"`
	PostEssenceMntReqbody     *PostEssenceMntReqBody        `protobuf:"bytes,22,opt,name=post_essence_mnt_reqbody" json:"post_essence_mnt_reqbody,omitempty"`
	BackendOpUidReqbody       *BackEndOpUidReqBody          `protobuf:"bytes,23,opt,name=backend_op_uid_reqbody" json:"backend_op_uid_reqbody,omitempty"`
	QueryBeblockedReqbody     *QueryBeBlockedReqBody        `protobuf:"bytes,24,opt,name=query_beblocked_reqbody" json:"query_beblocked_reqbody,omitempty"`
	QueryRevealentryReqbody   *QueryRevealEntryReqBody      `protobuf:"bytes,25,opt,name=query_revealentry_reqbody" json:"query_revealentry_reqbody,omitempty"`
	OpMidBucketStatusReqbody  *OpMidBucketStatusReqBody     `protobuf:"bytes,26,opt,name=op_mid_bucket_status_reqbody" json:"op_mid_bucket_status_reqbody,omitempty"`
	GetUserIndexMomentReqbody *GetUserIndexMomentReqBody    `protobuf:"bytes,27,opt,name=get_user_index_moment_reqbody" json:"get_user_index_moment_reqbody,omitempty"`
	XXX_unrecognized          []byte                        `json:"-"`
}

func (m *ReqBody) Reset()                    { *m = ReqBody{} }
func (m *ReqBody) String() string            { return proto.CompactTextString(m) }
func (*ReqBody) ProtoMessage()               {}
func (*ReqBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReqBody) GetPostMntReqbody() *PostMomentReqBody {
	if m != nil {
		return m.PostMntReqbody
	}
	return nil
}

func (m *ReqBody) GetPostLikeReqbody() *PostLikeReqBody {
	if m != nil {
		return m.PostLikeReqbody
	}
	return nil
}

func (m *ReqBody) GetPostCmntReqbody() *PostCommentReqBody {
	if m != nil {
		return m.PostCmntReqbody
	}
	return nil
}

func (m *ReqBody) GetDelMntReqbody() *DeleteMomentReqBody {
	if m != nil {
		return m.DelMntReqbody
	}
	return nil
}

func (m *ReqBody) GetDelCmntReqbody() *DeleteCommentReqBody {
	if m != nil {
		return m.DelCmntReqbody
	}
	return nil
}

func (m *ReqBody) GetViewLatestMntIdReqbody() *ViewLatestMomentIDReqBody {
	if m != nil {
		return m.ViewLatestMntIdReqbody
	}
	return nil
}

func (m *ReqBody) GetViewHistoryMntIdReqbody() *ViewHistoryMomentIDReqBody {
	if m != nil {
		return m.ViewHistoryMntIdReqbody
	}
	return nil
}

func (m *ReqBody) GetViewMntReqbody() *ViewMomentReqBody {
	if m != nil {
		return m.ViewMntReqbody
	}
	return nil
}

func (m *ReqBody) GetFreshCmntIdReqbody() *RefreshCommentIDReqBody {
	if m != nil {
		return m.FreshCmntIdReqbody
	}
	return nil
}

func (m *ReqBody) GetViewCmntReqbody() *ViewCommentReqBody {
	if m != nil {
		return m.ViewCmntReqbody
	}
	return nil
}

func (m *ReqBody) GetFreshLikeInfoReqbody() *RefreshLikedInfoReqBody {
	if m != nil {
		return m.FreshLikeInfoReqbody
	}
	return nil
}

func (m *ReqBody) GetFreshBaseCmntReqbody() *RefreshBaseCommentReqBody {
	if m != nil {
		return m.FreshBaseCmntReqbody
	}
	return nil
}

func (m *ReqBody) GetGetNotifyEventReqbody() *GetNotifyEventReqBody {
	if m != nil {
		return m.GetNotifyEventReqbody
	}
	return nil
}

func (m *ReqBody) GetGetUserInfoReqbody() *GetUserInfoReqBody {
	if m != nil {
		return m.GetUserInfoReqbody
	}
	return nil
}

func (m *ReqBody) GetGetLikeListReqbody() *GetMomentLikeUserinfoReqBody {
	if m != nil {
		return m.GetLikeListReqbody
	}
	return nil
}

func (m *ReqBody) GetDeleteUserReqbody() *DeleteUserReqBody {
	if m != nil {
		return m.DeleteUserReqbody
	}
	return nil
}

func (m *ReqBody) GetRestoreUserReqbody() *RestoreUserReqBody {
	if m != nil {
		return m.RestoreUserReqbody
	}
	return nil
}

func (m *ReqBody) GetModMntStatusReqbody() *ModMntStatusReqBody {
	if m != nil {
		return m.ModMntStatusReqbody
	}
	return nil
}

func (m *ReqBody) GetOpUidReqbody() *OperatorUidReqBody {
	if m != nil {
		return m.OpUidReqbody
	}
	return nil
}

func (m *ReqBody) GetGetOpUidListReqbody() *GetUidListReqBody {
	if m != nil {
		return m.GetOpUidListReqbody
	}
	return nil
}

func (m *ReqBody) GetPostEssenceMntReqbody() *PostEssenceMntReqBody {
	if m != nil {
		return m.PostEssenceMntReqbody
	}
	return nil
}

func (m *ReqBody) GetBackendOpUidReqbody() *BackEndOpUidReqBody {
	if m != nil {
		return m.BackendOpUidReqbody
	}
	return nil
}

func (m *ReqBody) GetQueryBeblockedReqbody() *QueryBeBlockedReqBody {
	if m != nil {
		return m.QueryBeblockedReqbody
	}
	return nil
}

func (m *ReqBody) GetQueryRevealentryReqbody() *QueryRevealEntryReqBody {
	if m != nil {
		return m.QueryRevealentryReqbody
	}
	return nil
}

func (m *ReqBody) GetOpMidBucketStatusReqbody() *OpMidBucketStatusReqBody {
	if m != nil {
		return m.OpMidBucketStatusReqbody
	}
	return nil
}

func (m *ReqBody) GetGetUserIndexMomentReqbody() *GetUserIndexMomentReqBody {
	if m != nil {
		return m.GetUserIndexMomentReqbody
	}
	return nil
}

type RspBody struct {
	PostMntRspbody            *PostMomentRspBody            `protobuf:"bytes,1,opt,name=post_mnt_rspbody" json:"post_mnt_rspbody,omitempty"`
	PostLikeRspbody           *PostLikeRspBody              `protobuf:"bytes,2,opt,name=post_like_rspbody" json:"post_like_rspbody,omitempty"`
	PostCmntRspbody           *PostCommentRspBody           `protobuf:"bytes,3,opt,name=post_cmnt_rspbody" json:"post_cmnt_rspbody,omitempty"`
	DelMntRspbody             *DeleteMomentRspBody          `protobuf:"bytes,4,opt,name=del_mnt_rspbody" json:"del_mnt_rspbody,omitempty"`
	DelCmntRspbody            *DeleteCommentRspBody         `protobuf:"bytes,5,opt,name=del_cmnt_rspbody" json:"del_cmnt_rspbody,omitempty"`
	ViewLatestMntIdRspbody    *ViewLatestMomentIDRspBody    `protobuf:"bytes,6,opt,name=view_latest_mnt_id_rspbody" json:"view_latest_mnt_id_rspbody,omitempty"`
	ViewHistoryMntIdRspbody   *ViewHistoryMomentIDRspBody   `protobuf:"bytes,7,opt,name=view_history_mnt_id_rspbody" json:"view_history_mnt_id_rspbody,omitempty"`
	ViewMntRspbody            *ViewMomentRspBody            `protobuf:"bytes,8,opt,name=view_mnt_rspbody" json:"view_mnt_rspbody,omitempty"`
	FreshCmntIdRspbody        *RefreshCommentIDRspBody      `protobuf:"bytes,9,opt,name=fresh_cmnt_id_rspbody" json:"fresh_cmnt_id_rspbody,omitempty"`
	ViewCmntRspbody           *ViewCommentRspBody           `protobuf:"bytes,10,opt,name=view_cmnt_rspbody" json:"view_cmnt_rspbody,omitempty"`
	FreshLikeInfoRspbody      *RefreshLikedInfoRspBody      `protobuf:"bytes,11,opt,name=fresh_like_info_rspbody" json:"fresh_like_info_rspbody,omitempty"`
	FreshBaseCmntRspbody      *RefreshBaseCommentRspBody    `protobuf:"bytes,12,opt,name=fresh_base_cmnt_rspbody" json:"fresh_base_cmnt_rspbody,omitempty"`
	GetNotifyEventRspbody     *GetNotifyEventRspBody        `protobuf:"bytes,13,opt,name=get_notify_event_rspbody" json:"get_notify_event_rspbody,omitempty"`
	GetUserInfoRspbody        *GetUserInfoRspBody           `protobuf:"bytes,14,opt,name=get_user_info_rspbody" json:"get_user_info_rspbody,omitempty"`
	GetLikeListRspbody        *GetMomentLikeUserinfoRspBody `protobuf:"bytes,15,opt,name=get_like_list_rspbody" json:"get_like_list_rspbody,omitempty"`
	DeleteUserRspbody         *DeleteUserRspBody            `protobuf:"bytes,16,opt,name=delete_user_rspbody" json:"delete_user_rspbody,omitempty"`
	RestoreUserRspbody        *RestoreUserRspBody           `protobuf:"bytes,17,opt,name=restore_user_rspbody" json:"restore_user_rspbody,omitempty"`
	ModMntStatusRspbody       *ModMntStatusRspBody          `protobuf:"bytes,18,opt,name=mod_mnt_status_rspbody" json:"mod_mnt_status_rspbody,omitempty"`
	OpUidRspbody              *OperatorUidRspBody           `protobuf:"bytes,20,opt,name=op_uid_rspbody" json:"op_uid_rspbody,omitempty"`
	GetOpUidListRspbody       *GetUidListRspBody            `protobuf:"bytes,21,opt,name=get_op_uid_list_rspbody" json:"get_op_uid_list_rspbody,omitempty"`
	PostEssenceMntRspbody     *PostEssenceMntRspBody        `protobuf:"bytes,22,opt,name=post_essence_mnt_rspbody" json:"post_essence_mnt_rspbody,omitempty"`
	BackendOpUidRspbody       *BackEndOpUidRspBody          `protobuf:"bytes,23,opt,name=backend_op_uid_rspbody" json:"backend_op_uid_rspbody,omitempty"`
	QueryBeblockedRspbody     *QueryBeBlockedRspBody        `protobuf:"bytes,24,opt,name=query_beblocked_rspbody" json:"query_beblocked_rspbody,omitempty"`
	QueryRevealentryRspbody   *QueryRevealEntryRspBody      `protobuf:"bytes,25,opt,name=query_revealentry_rspbody" json:"query_revealentry_rspbody,omitempty"`
	OpMidBucketStatusRspbody  *OpMidBucketStatusRspBody     `protobuf:"bytes,26,opt,name=op_mid_bucket_status_rspbody" json:"op_mid_bucket_status_rspbody,omitempty"`
	GetUserIndexMomentRspbody *GetUserIndexMomentRspBody    `protobuf:"bytes,27,opt,name=get_user_index_moment_rspbody" json:"get_user_index_moment_rspbody,omitempty"`
	XXX_unrecognized          []byte                        `json:"-"`
}

func (m *RspBody) Reset()                    { *m = RspBody{} }
func (m *RspBody) String() string            { return proto.CompactTextString(m) }
func (*RspBody) ProtoMessage()               {}
func (*RspBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RspBody) GetPostMntRspbody() *PostMomentRspBody {
	if m != nil {
		return m.PostMntRspbody
	}
	return nil
}

func (m *RspBody) GetPostLikeRspbody() *PostLikeRspBody {
	if m != nil {
		return m.PostLikeRspbody
	}
	return nil
}

func (m *RspBody) GetPostCmntRspbody() *PostCommentRspBody {
	if m != nil {
		return m.PostCmntRspbody
	}
	return nil
}

func (m *RspBody) GetDelMntRspbody() *DeleteMomentRspBody {
	if m != nil {
		return m.DelMntRspbody
	}
	return nil
}

func (m *RspBody) GetDelCmntRspbody() *DeleteCommentRspBody {
	if m != nil {
		return m.DelCmntRspbody
	}
	return nil
}

func (m *RspBody) GetViewLatestMntIdRspbody() *ViewLatestMomentIDRspBody {
	if m != nil {
		return m.ViewLatestMntIdRspbody
	}
	return nil
}

func (m *RspBody) GetViewHistoryMntIdRspbody() *ViewHistoryMomentIDRspBody {
	if m != nil {
		return m.ViewHistoryMntIdRspbody
	}
	return nil
}

func (m *RspBody) GetViewMntRspbody() *ViewMomentRspBody {
	if m != nil {
		return m.ViewMntRspbody
	}
	return nil
}

func (m *RspBody) GetFreshCmntIdRspbody() *RefreshCommentIDRspBody {
	if m != nil {
		return m.FreshCmntIdRspbody
	}
	return nil
}

func (m *RspBody) GetViewCmntRspbody() *ViewCommentRspBody {
	if m != nil {
		return m.ViewCmntRspbody
	}
	return nil
}

func (m *RspBody) GetFreshLikeInfoRspbody() *RefreshLikedInfoRspBody {
	if m != nil {
		return m.FreshLikeInfoRspbody
	}
	return nil
}

func (m *RspBody) GetFreshBaseCmntRspbody() *RefreshBaseCommentRspBody {
	if m != nil {
		return m.FreshBaseCmntRspbody
	}
	return nil
}

func (m *RspBody) GetGetNotifyEventRspbody() *GetNotifyEventRspBody {
	if m != nil {
		return m.GetNotifyEventRspbody
	}
	return nil
}

func (m *RspBody) GetGetUserInfoRspbody() *GetUserInfoRspBody {
	if m != nil {
		return m.GetUserInfoRspbody
	}
	return nil
}

func (m *RspBody) GetGetLikeListRspbody() *GetMomentLikeUserinfoRspBody {
	if m != nil {
		return m.GetLikeListRspbody
	}
	return nil
}

func (m *RspBody) GetDeleteUserRspbody() *DeleteUserRspBody {
	if m != nil {
		return m.DeleteUserRspbody
	}
	return nil
}

func (m *RspBody) GetRestoreUserRspbody() *RestoreUserRspBody {
	if m != nil {
		return m.RestoreUserRspbody
	}
	return nil
}

func (m *RspBody) GetModMntStatusRspbody() *ModMntStatusRspBody {
	if m != nil {
		return m.ModMntStatusRspbody
	}
	return nil
}

func (m *RspBody) GetOpUidRspbody() *OperatorUidRspBody {
	if m != nil {
		return m.OpUidRspbody
	}
	return nil
}

func (m *RspBody) GetGetOpUidListRspbody() *GetUidListRspBody {
	if m != nil {
		return m.GetOpUidListRspbody
	}
	return nil
}

func (m *RspBody) GetPostEssenceMntRspbody() *PostEssenceMntRspBody {
	if m != nil {
		return m.PostEssenceMntRspbody
	}
	return nil
}

func (m *RspBody) GetBackendOpUidRspbody() *BackEndOpUidRspBody {
	if m != nil {
		return m.BackendOpUidRspbody
	}
	return nil
}

func (m *RspBody) GetQueryBeblockedRspbody() *QueryBeBlockedRspBody {
	if m != nil {
		return m.QueryBeblockedRspbody
	}
	return nil
}

func (m *RspBody) GetQueryRevealentryRspbody() *QueryRevealEntryRspBody {
	if m != nil {
		return m.QueryRevealentryRspbody
	}
	return nil
}

func (m *RspBody) GetOpMidBucketStatusRspbody() *OpMidBucketStatusRspBody {
	if m != nil {
		return m.OpMidBucketStatusRspbody
	}
	return nil
}

func (m *RspBody) GetGetUserIndexMomentRspbody() *GetUserIndexMomentRspBody {
	if m != nil {
		return m.GetUserIndexMomentRspbody
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqBody)(nil), "ht.moment.ReqBody")
	proto.RegisterType((*RspBody)(nil), "ht.moment.RspBody")
	proto.RegisterEnum("ht.moment.CMD_TYPE", CMD_TYPE_name, CMD_TYPE_value)
	proto.RegisterEnum("ht.moment.SYS_TYPE", SYS_TYPE_name, SYS_TYPE_value)
}

func init() { proto.RegisterFile("HT_moment_head.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x95, 0x5b, 0x53, 0xdb, 0x46,
	0x14, 0xc7, 0x07, 0x12, 0x02, 0x2c, 0x01, 0x84, 0xb0, 0x31, 0x98, 0xd0, 0x66, 0xd2, 0x76, 0xda,
	0xc9, 0x03, 0x0f, 0x9d, 0xe9, 0x25, 0xd3, 0xcb, 0x8c, 0x65, 0x2f, 0xc1, 0xc5, 0xb6, 0x1c, 0x49,
	0xa6, 0xf1, 0x93, 0x6a, 0xa3, 0xa5, 0x78, 0x62, 0x5b, 0xc6, 0x12, 0xb4, 0x7c, 0x88, 0x7e, 0x82,
	0x7e, 0xd9, 0xec, 0xe5, 0xac, 0xb4, 0xd2, 0xfa, 0xf6, 0xe0, 0x19, 0xcf, 0xea, 0xff, 0xff, 0xed,
	0xd9, 0x73, 0x56, 0xfa, 0xa3, 0xc2, 0xa5, 0xe7, 0x8f, 0xc2, 0x11, 0x19, 0xc7, 0xfe, 0x1d, 0xe9,
	0x05, 0xe7, 0x93, 0x69, 0x18, 0x87, 0xe6, 0xf6, 0x5d, 0x7c, 0x2e, 0x56, 0xcb, 0x8a, 0xa0, 0x1f,
	0x06, 0x4f, 0x42, 0xf0, 0xe6, 0xff, 0x5d, 0xb4, 0xe9, 0x90, 0x7b, 0x8b, 0xae, 0x98, 0x3f, 0x22,
	0x63, 0x12, 0x46, 0xb1, 0x3f, 0xa2, 0x92, 0x29, 0xb9, 0x67, 0xaa, 0xe3, 0xb5, 0xd7, 0x6b, 0xdf,
	0xed, 0x7c, 0xff, 0xea, 0x3c, 0xe1, 0x9c, 0xb7, 0xa9, 0xa4, 0xc9, 0xff, 0x4a, 0xdf, 0x0f, 0xe8,
	0x80, 0xfb, 0x86, 0x83, 0x4f, 0x24, 0x31, 0xae, 0x73, 0x63, 0x39, 0x67, 0x6c, 0x50, 0x89, 0xb4,
	0xfd, 0x0c, 0xb6, 0x1b, 0x75, 0xbf, 0x67, 0xdc, 0x76, 0x96, 0xb3, 0x55, 0xc3, 0x91, 0xba, 0xe1,
	0x4f, 0x68, 0x3f, 0x20, 0xc3, 0x4c, 0x9d, 0xcf, 0xb9, 0xef, 0x0b, 0xc5, 0x57, 0x23, 0x43, 0x12,
	0x93, 0x6c, 0xa5, 0xef, 0x90, 0xc1, 0x8c, 0x99, 0x1d, 0x37, 0xb8, 0xf3, 0x4b, 0xcd, 0x99, 0xdb,
	0xf3, 0x12, 0x95, 0x1f, 0x07, 0xe4, 0x1f, 0x7f, 0xd8, 0x8b, 0x09, 0xf4, 0x68, 0x10, 0x24, 0x90,
	0x17, 0x1c, 0xf2, 0xb5, 0x02, 0xb9, 0xa6, 0xe2, 0x06, 0xd7, 0x8a, 0x12, 0xea, 0x35, 0x49, 0xfa,
	0x03, 0x9d, 0x72, 0xd2, 0xdd, 0x20, 0x8a, 0xc3, 0xe9, 0x53, 0x1e, 0xb5, 0xc9, 0x51, 0xdf, 0xe4,
	0x50, 0x97, 0x42, 0x9c, 0x67, 0xd1, 0x91, 0x71, 0x96, 0x7a, 0xa0, 0x2d, 0x6d, 0x64, 0x0c, 0x90,
	0x6d, 0x44, 0x05, 0x15, 0x6f, 0xa7, 0x24, 0xba, 0x13, 0xad, 0x50, 0x76, 0xdf, 0xe6, 0xe6, 0x37,
	0x8a, 0xd9, 0x21, 0x5c, 0x09, 0xed, 0x48, 0xb7, 0xa6, 0xe3, 0xe3, 0x5b, 0x67, 0x9a, 0x89, 0xb4,
	0xf1, 0xb1, 0xbd, 0x73, 0xad, 0xac, 0xa2, 0x92, 0xd8, 0x9c, 0x5f, 0x98, 0xc1, 0xf8, 0x36, 0x4c,
	0xfc, 0x3b, 0xf3, 0xb6, 0x67, 0x17, 0x27, 0xa8, 0x53, 0xa9, 0x84, 0x60, 0x09, 0xe9, 0xf7, 0x22,
	0x92, 0x2d, 0xe2, 0xa5, 0x36, 0x0c, 0x80, 0x58, 0x54, 0x9a, 0xab, 0xc5, 0x42, 0xc7, 0x7f, 0x93,
	0xd8, 0x1f, 0x87, 0xf1, 0xe0, 0xf6, 0xc9, 0x27, 0x8f, 0x44, 0xe1, 0xec, 0x72, 0xce, 0x6b, 0x85,
	0xf3, 0x9e, 0xc4, 0x2d, 0xae, 0xc4, 0x8f, 0x0a, 0xe3, 0x57, 0x54, 0x64, 0x8c, 0x87, 0x88, 0x4c,
	0xb3, 0xa7, 0xd9, 0xd3, 0xba, 0x41, 0x01, 0x1d, 0x2a, 0x53, 0x0f, 0x72, 0x21, 0xdc, 0xbc, 0x17,
	0x43, 0x3a, 0xe5, 0xc4, 0xbd, 0xcf, 0xdd, 0xdf, 0x66, 0xdd, 0x62, 0x8c, 0xac, 0x1b, 0x8c, 0x33,
	0x50, 0x38, 0xef, 0xd0, 0x61, 0xc0, 0x2f, 0xae, 0x28, 0x44, 0x52, 0x0c, 0xed, 0x36, 0x88, 0xeb,
	0xcd, 0xec, 0xd2, 0xfa, 0x0b, 0x2a, 0xd0, 0xf6, 0xd0, 0xfb, 0x95, 0xf3, 0x1e, 0x68, 0xf5, 0x3b,
	0x42, 0xa6, 0x9a, 0x7f, 0x47, 0x47, 0xa3, 0x30, 0xe0, 0x37, 0x30, 0x8a, 0x7b, 0xf1, 0x43, 0x94,
	0xd8, 0x4d, 0xed, 0x9d, 0x6c, 0x86, 0x41, 0x73, 0x1c, 0xbb, 0x5c, 0x96, 0x7e, 0x3d, 0xf6, 0xc2,
	0x89, 0xff, 0xa0, 0xdc, 0xc1, 0x82, 0xb6, 0xad, 0x3d, 0x21, 0xd3, 0x1e, 0xdd, 0xb8, 0x33, 0x08,
	0xa4, 0xed, 0x37, 0x54, 0x62, 0x6d, 0x03, 0x6b, 0xa6, 0x71, 0x45, 0xed, 0xc8, 0xac, 0xed, 0x83,
	0xa0, 0x41, 0x45, 0xca, 0xdc, 0xf9, 0xc7, 0x87, 0x44, 0x11, 0x19, 0xdf, 0x90, 0xcc, 0x0b, 0x74,
	0xa4, 0xcd, 0x9d, 0x7d, 0x83, 0xb0, 0x50, 0x36, 0xd3, 0xb9, 0xd3, 0x93, 0xf7, 0x7b, 0x37, 0x9f,
	0xc8, 0x38, 0xf0, 0x73, 0x27, 0x28, 0x69, 0x27, 0xb7, 0xa8, 0x10, 0x8f, 0x03, 0x7b, 0xa2, 0x1c,
	0xa1, 0x82, 0x4a, 0xf7, 0x0f, 0x84, 0x7e, 0x01, 0xfa, 0xa4, 0x3f, 0x0c, 0x29, 0x28, 0x05, 0x1c,
	0x6b, 0x25, 0x7c, 0x60, 0x4a, 0x8b, 0x58, 0x42, 0x98, 0xbe, 0x05, 0x27, 0x02, 0x31, 0xa5, 0x57,
	0xb7, 0x37, 0xa4, 0x42, 0xfe, 0x5f, 0x40, 0x4e, 0xb4, 0x97, 0x89, 0x43, 0x1c, 0x2e, 0xc5, 0x4c,
	0x2a, 0x31, 0x75, 0xf4, 0x8a, 0x9e, 0x60, 0x44, 0x4f, 0xd0, 0x7f, 0xa0, 0x78, 0x6d, 0x92, 0x65,
	0x4e, 0xfa, 0x4a, 0x21, 0x85, 0x93, 0xe6, 0x20, 0xb0, 0xb8, 0x38, 0x3b, 0xce, 0x2b, 0x74, 0xa6,
	0xbc, 0x0c, 0x01, 0xf9, 0x57, 0x86, 0x8e, 0x64, 0x9d, 0x6a, 0x6f, 0x67, 0xf2, 0x52, 0x50, 0x75,
	0xe6, 0x33, 0x25, 0xd2, 0x29, 0x9a, 0xe8, 0xe9, 0x14, 0x4d, 0x96, 0xa7, 0x13, 0xf8, 0xb2, 0xe9,
	0x04, 0xc6, 0x05, 0xe9, 0x04, 0xb6, 0x6c, 0x3a, 0x81, 0x6d, 0x71, 0x3a, 0x81, 0x53, 0x4d, 0x27,
	0xf0, 0x2d, 0x49, 0x27, 0x30, 0x66, 0xd2, 0x09, 0x9c, 0xcb, 0xd2, 0x09, 0xac, 0x73, 0xd2, 0x09,
	0x20, 0x2b, 0xa5, 0x13, 0x90, 0xe6, 0xa5, 0x13, 0xa0, 0x56, 0x4b, 0xa7, 0x74, 0x64, 0x69, 0x3a,
	0x01, 0x60, 0x61, 0x3a, 0x81, 0x4f, 0x4f, 0x27, 0x30, 0xaf, 0x90, 0x4e, 0xe9, 0xf8, 0x94, 0x74,
	0x02, 0xfb, 0xe2, 0x74, 0x02, 0xe7, 0xac, 0x74, 0x02, 0xff, 0x0a, 0xe9, 0x04, 0x90, 0x59, 0xe9,
	0x04, 0x90, 0x95, 0xd2, 0x09, 0x30, 0x33, 0xd3, 0x09, 0x38, 0x4b, 0xd3, 0x09, 0x18, 0x7a, 0x3a,
	0x01, 0x60, 0x71, 0x3a, 0x81, 0x5b, 0x4f, 0x27, 0x70, 0xaf, 0x9a, 0x4e, 0xc9, 0xdd, 0xce, 0xa6,
	0x13, 0x50, 0x16, 0xa6, 0x13, 0x58, 0xb5, 0x74, 0x02, 0xef, 0xe2, 0x74, 0x02, 0xf3, 0x8c, 0x74,
	0x02, 0xfb, 0x92, 0x74, 0x4a, 0xbe, 0x1e, 0x49, 0x3a, 0x81, 0x6f, 0x71, 0x3a, 0x81, 0x6d, 0x56,
	0x3a, 0x81, 0x7f, 0x61, 0x3a, 0xa5, 0x73, 0xd7, 0xd3, 0x09, 0xfc, 0x4b, 0xd3, 0x29, 0x3d, 0x79,
	0x3e, 0x9d, 0x80, 0xb0, 0x24, 0x9d, 0x92, 0x97, 0x50, 0x4f, 0x27, 0x00, 0x2c, 0x4d, 0xa7, 0xe4,
	0x2d, 0x98, 0x95, 0x4e, 0x00, 0x59, 0x21, 0x9d, 0x00, 0x33, 0x37, 0x9d, 0x80, 0xb4, 0x4a, 0x3a,
	0x01, 0x6a, 0x7e, 0x3a, 0x01, 0x6b, 0xa5, 0x74, 0x12, 0xb0, 0xb7, 0xff, 0x6d, 0xa0, 0xad, 0x6a,
	0xb3, 0xe6, 0x7b, 0xdd, 0x36, 0x36, 0x0f, 0xd1, 0x3e, 0xfb, 0xdf, 0xb6, 0x5d, 0xcf, 0x6f, 0xda,
	0x4d, 0xdc, 0xf2, 0x8c, 0x35, 0xf3, 0x00, 0xed, 0x26, 0x8b, 0x8d, 0xfa, 0x15, 0x36, 0xd6, 0xcd,
	0x02, 0x32, 0x92, 0xa5, 0xaa, 0xdd, 0xe4, 0xc2, 0x67, 0xa6, 0x89, 0xf6, 0xd8, 0x6a, 0x0d, 0x37,
	0xa4, 0xf9, 0xb9, 0x24, 0xb2, 0x35, 0x29, 0xdc, 0x30, 0x4f, 0x50, 0x91, 0x2d, 0xbe, 0xc7, 0x74,
	0x97, 0x7a, 0x8d, 0x42, 0x29, 0xa6, 0x66, 0xff, 0xd9, 0x32, 0x5e, 0x98, 0x25, 0x74, 0xa8, 0x3d,
	0xea, 0xb4, 0x8d, 0xcd, 0xfc, 0x83, 0xaa, 0xdd, 0xf2, 0x18, 0x6c, 0x4b, 0xd6, 0xc2, 0x1e, 0x54,
	0xc1, 0x61, 0x6c, 0xab, 0xf2, 0xaa, 0x22, 0x47, 0x66, 0x11, 0x1d, 0xc8, 0x07, 0xec, 0x30, 0x7e,
	0xbd, 0x75, 0x61, 0x1b, 0x3b, 0xe6, 0x31, 0x2a, 0x24, 0x7a, 0x51, 0xa7, 0x78, 0xf2, 0x52, 0x9e,
	0x8a, 0x3d, 0x69, 0xd9, 0x5e, 0xfd, 0xa2, 0x6b, 0xec, 0xaa, 0x90, 0x8e, 0x8b, 0x1d, 0x21, 0xdd,
	0xd3, 0xd8, 0xbc, 0x96, 0x7d, 0xa5, 0x07, 0xd8, 0xc3, 0xdc, 0x60, 0x18, 0xb2, 0x6c, 0x07, 0xbb,
	0x9e, 0xed, 0xc0, 0xea, 0x81, 0x79, 0x84, 0x4c, 0xb6, 0xda, 0xb4, 0xe9, 0x8f, 0x96, 0xe0, 0x7a,
	0x15, 0xaf, 0xe3, 0x1a, 0xa6, 0x5c, 0xe7, 0x0d, 0xaf, 0xd4, 0x64, 0x7b, 0x0f, 0x25, 0xc5, 0x6e,
	0x63, 0xa7, 0x42, 0x39, 0x7e, 0xa7, 0x5e, 0x33, 0x0a, 0xe6, 0x19, 0x3a, 0x91, 0x75, 0xa8, 0x4f,
	0x44, 0x3d, 0x45, 0x79, 0x56, 0x0e, 0x73, 0xb1, 0xeb, 0x4a, 0xdc, 0x91, 0xdc, 0xc6, 0xaa, 0x54,
	0xaf, 0x70, 0x8b, 0x61, 0x39, 0xb0, 0x24, 0xbb, 0xf9, 0xa1, 0x83, 0x9d, 0xae, 0x6f, 0x61, 0xab,
	0x61, 0x53, 0x41, 0xcd, 0x38, 0x36, 0xcb, 0xe8, 0x28, 0x7d, 0xe0, 0xe0, 0x6b, 0x5c, 0x69, 0xf8,
	0x14, 0xe5, 0x74, 0x8d, 0x13, 0xd9, 0x0d, 0x0a, 0x61, 0x03, 0xb3, 0x3a, 0xd4, 0xe2, 0x19, 0x65,
	0xb5, 0x38, 0xe8, 0x5d, 0x0d, 0x7f, 0x94, 0x25, 0x9c, 0xbe, 0xfd, 0x0b, 0x6d, 0xb9, 0x5d, 0x57,
	0x5c, 0x47, 0x4a, 0x60, 0xff, 0xc5, 0x33, 0x5a, 0xaa, 0x73, 0x4d, 0x9b, 0xb4, 0xc6, 0xaa, 0x64,
	0xcb, 0x72, 0x4e, 0xb0, 0xbe, 0xce, 0x26, 0xc5, 0xd6, 0x2f, 0x3d, 0xaf, 0xed, 0xb7, 0x1d, 0xfb,
	0x63, 0x97, 0x36, 0x88, 0x5e, 0x5e, 0x89, 0xf3, 0x3d, 0xdb, 0x6e, 0x18, 0x85, 0xcf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x5b, 0xfa, 0x67, 0x1b, 0x65, 0x10, 0x00, 0x00,
}
