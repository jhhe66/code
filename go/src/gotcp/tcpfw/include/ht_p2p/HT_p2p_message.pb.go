// Code generated by protoc-gen-go.
// source: HT_p2p_message.proto
// DO NOT EDIT!

/*
Package ht_p2p is a generated protocol buffer package.

It is generated from these files:
	HT_p2p_message.proto

It has these top-level messages:
	PushInfo
	P2PMsgBody
*/
package ht_p2p

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SYS_TYPE int32

const (
	SYS_TYPE_SYS_MOMENT    SYS_TYPE = 1
	SYS_TYPE_SYS_TYPE_TOOL SYS_TYPE = 20
)

var SYS_TYPE_name = map[int32]string{
	1:  "SYS_MOMENT",
	20: "SYS_TYPE_TOOL",
}
var SYS_TYPE_value = map[string]int32{
	"SYS_MOMENT":    1,
	"SYS_TYPE_TOOL": 20,
}

func (x SYS_TYPE) Enum() *SYS_TYPE {
	p := new(SYS_TYPE)
	*p = x
	return p
}
func (x SYS_TYPE) String() string {
	return proto.EnumName(SYS_TYPE_name, int32(x))
}
func (x *SYS_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SYS_TYPE_value, data, "SYS_TYPE")
	if err != nil {
		return err
	}
	*x = SYS_TYPE(value)
	return nil
}
func (SYS_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RET_CODE int32

const (
	RET_CODE_RET_SUCCESS          RET_CODE = 0
	RET_CODE_RET_PB_ERR           RET_CODE = 500
	RET_CODE_RET_INTERNAL_ERR     RET_CODE = 501
	RET_CODE_RET_SESS_TIMEOUT_ERR RET_CODE = 502
	RET_CODE_RET_INPUT_PARAM_ERR  RET_CODE = 503
)

var RET_CODE_name = map[int32]string{
	0:   "RET_SUCCESS",
	500: "RET_PB_ERR",
	501: "RET_INTERNAL_ERR",
	502: "RET_SESS_TIMEOUT_ERR",
	503: "RET_INPUT_PARAM_ERR",
}
var RET_CODE_value = map[string]int32{
	"RET_SUCCESS":          0,
	"RET_PB_ERR":           500,
	"RET_INTERNAL_ERR":     501,
	"RET_SESS_TIMEOUT_ERR": 502,
	"RET_INPUT_PARAM_ERR":  503,
}

func (x RET_CODE) Enum() *RET_CODE {
	p := new(RET_CODE)
	*p = x
	return p
}
func (x RET_CODE) String() string {
	return proto.EnumName(RET_CODE_name, int32(x))
}
func (x *RET_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RET_CODE_value, data, "RET_CODE")
	if err != nil {
		return err
	}
	*x = RET_CODE(value)
	return nil
}
func (RET_CODE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PushInfo struct {
	PushType         *uint32 `protobuf:"varint,1,opt,name=push_type" json:"push_type,omitempty"`
	NickName         []byte  `protobuf:"bytes,2,opt,name=nick_name" json:"nick_name,omitempty"`
	Content          []byte  `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PushInfo) Reset()                    { *m = PushInfo{} }
func (m *PushInfo) String() string            { return proto.CompactTextString(m) }
func (*PushInfo) ProtoMessage()               {}
func (*PushInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PushInfo) GetPushType() uint32 {
	if m != nil && m.PushType != nil {
		return *m.PushType
	}
	return 0
}

func (m *PushInfo) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *PushInfo) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type P2PMsgBody struct {
	P2PData          []byte    `protobuf:"bytes,1,opt,name=p2p_data" json:"p2p_data,omitempty"`
	JustOnline       *uint32   `protobuf:"varint,11,opt,name=just_online" json:"just_online,omitempty"`
	DontReply        *uint32   `protobuf:"varint,12,opt,name=dont_reply" json:"dont_reply,omitempty"`
	PushInfo         *PushInfo `protobuf:"bytes,13,opt,name=push_info" json:"push_info,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *P2PMsgBody) Reset()                    { *m = P2PMsgBody{} }
func (m *P2PMsgBody) String() string            { return proto.CompactTextString(m) }
func (*P2PMsgBody) ProtoMessage()               {}
func (*P2PMsgBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *P2PMsgBody) GetP2PData() []byte {
	if m != nil {
		return m.P2PData
	}
	return nil
}

func (m *P2PMsgBody) GetJustOnline() uint32 {
	if m != nil && m.JustOnline != nil {
		return *m.JustOnline
	}
	return 0
}

func (m *P2PMsgBody) GetDontReply() uint32 {
	if m != nil && m.DontReply != nil {
		return *m.DontReply
	}
	return 0
}

func (m *P2PMsgBody) GetPushInfo() *PushInfo {
	if m != nil {
		return m.PushInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*PushInfo)(nil), "ht.p2p.PushInfo")
	proto.RegisterType((*P2PMsgBody)(nil), "ht.p2p.P2PMsgBody")
	proto.RegisterEnum("ht.p2p.SYS_TYPE", SYS_TYPE_name, SYS_TYPE_value)
	proto.RegisterEnum("ht.p2p.RET_CODE", RET_CODE_name, RET_CODE_value)
}

func init() { proto.RegisterFile("HT_p2p_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x34, 0xce, 0xcf, 0x4f, 0xc2, 0x30,
	0x14, 0x07, 0x70, 0x71, 0x89, 0xce, 0x37, 0xd0, 0x5a, 0x30, 0xa9, 0x37, 0x83, 0x17, 0x43, 0xe2,
	0x0e, 0xfc, 0x07, 0x03, 0x9b, 0x48, 0xc2, 0x58, 0xb3, 0x95, 0x03, 0xa7, 0x66, 0x81, 0x0a, 0x28,
	0x74, 0x0d, 0x2b, 0x89, 0xfc, 0xdf, 0xfe, 0xb8, 0xda, 0x16, 0xb9, 0xbd, 0x7c, 0x5e, 0xde, 0xf7,
	0x7d, 0xa1, 0xf3, 0xca, 0x85, 0xee, 0x6b, 0xb1, 0x95, 0x75, 0x5d, 0x2e, 0x65, 0xac, 0x77, 0x95,
	0xa9, 0xf0, 0xc5, 0xca, 0xc4, 0x56, 0xbb, 0x09, 0x84, 0x6c, 0x5f, 0xaf, 0x46, 0xea, 0xad, 0xc2,
	0xb7, 0x70, 0xa5, 0xed, 0x2c, 0xcc, 0x41, 0x4b, 0xd2, 0x78, 0x68, 0x3c, 0xb5, 0x1c, 0xa9, 0xf5,
	0xfc, 0x43, 0xa8, 0x72, 0x2b, 0xc9, 0xb9, 0xa5, 0x26, 0xbe, 0x81, 0xcb, 0x79, 0xa5, 0x8c, 0x54,
	0x86, 0x04, 0x0e, 0xba, 0x1b, 0x00, 0xd6, 0x67, 0x69, 0xbd, 0x1c, 0x54, 0x8b, 0x03, 0x46, 0x10,
	0xba, 0x6f, 0x8b, 0xd2, 0x94, 0x3e, 0xa3, 0x89, 0xdb, 0x10, 0xbd, 0xef, 0x6b, 0x23, 0x2a, 0xb5,
	0x59, 0x2b, 0x49, 0x22, 0x1f, 0x8c, 0x01, 0x16, 0x36, 0x45, 0xec, 0xa4, 0xde, 0x1c, 0x48, 0xd3,
	0xdb, 0xe3, 0xff, 0xff, 0xb5, 0x2d, 0x43, 0x5a, 0x96, 0xa2, 0x3e, 0x8a, 0x8f, 0x3d, 0xe3, 0x53,
	0xc9, 0xde, 0x33, 0x84, 0xc5, 0xac, 0x10, 0x7c, 0xc6, 0x28, 0xbe, 0x06, 0x70, 0x73, 0x9a, 0xa5,
	0x74, 0xc2, 0x51, 0xc3, 0xb6, 0x6d, 0x9d, 0x76, 0x82, 0x67, 0xd9, 0x18, 0x75, 0x7a, 0x9f, 0x10,
	0xe6, 0x94, 0x8b, 0x61, 0xf6, 0x42, 0x6d, 0xf3, 0xc8, 0xcd, 0xc5, 0x74, 0x38, 0xa4, 0x45, 0x81,
	0xce, 0x2c, 0x80, 0x03, 0x36, 0x10, 0x34, 0xcf, 0xd1, 0x57, 0x80, 0xef, 0x00, 0x39, 0x18, 0x4d,
	0x38, 0xcd, 0x27, 0xc9, 0xd8, 0xf3, 0x77, 0x80, 0xef, 0xa1, 0xe3, 0x0f, 0xed, 0x95, 0xe0, 0xa3,
	0x94, 0x66, 0x53, 0xee, 0x57, 0x3f, 0x01, 0x26, 0xd0, 0x3e, 0x5e, 0x30, 0x6b, 0x2c, 0xc9, 0x93,
	0xd4, 0x6f, 0x7e, 0x83, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x5b, 0xd0, 0x68, 0x78, 0x01,
	0x00, 0x00,
}
