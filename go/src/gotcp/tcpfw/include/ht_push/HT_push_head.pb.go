// Code generated by protoc-gen-go.
// source: HT_push_head.proto
// DO NOT EDIT!

/*
Package ht_push is a generated protocol buffer package.

It is generated from these files:
	HT_push_head.proto
	HT_push_body.proto

It has these top-level messages:
	ReqBody
	RspBody
	NotifyRemarkNameReqBody
	NotifyRemarkNameRspBody
	PushMsgReqBody
	PushMsgRspBody
*/
package ht_push

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 根据不同的cmd_type来使用不同的body
type CMD_TYPE int32

const (
	CMD_TYPE_CMD_S2S_MARKNAMECHANGED_NOTIFY CMD_TYPE = 32805
	CMD_TYPE_CMD_S2S_MESSAGE_PUSH           CMD_TYPE = 32807
)

var CMD_TYPE_name = map[int32]string{
	32805: "CMD_S2S_MARKNAMECHANGED_NOTIFY",
	32807: "CMD_S2S_MESSAGE_PUSH",
}
var CMD_TYPE_value = map[string]int32{
	"CMD_S2S_MARKNAMECHANGED_NOTIFY": 32805,
	"CMD_S2S_MESSAGE_PUSH":           32807,
}

func (x CMD_TYPE) Enum() *CMD_TYPE {
	p := new(CMD_TYPE)
	*p = x
	return p
}
func (x CMD_TYPE) String() string {
	return proto.EnumName(CMD_TYPE_name, int32(x))
}
func (x *CMD_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMD_TYPE_value, data, "CMD_TYPE")
	if err != nil {
		return err
	}
	*x = CMD_TYPE(value)
	return nil
}
func (CMD_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SYS_TYPE int32

const (
	SYS_TYPE_SYS_IM_SERVER      SYS_TYPE = 1
	SYS_TYPE_SYS_VOIP_SERVER    SYS_TYPE = 2
	SYS_TYPE_SYS_MUC_SERVER     SYS_TYPE = 3
	SYS_TYPE_SYS_OFFLINE_SERVER SYS_TYPE = 4
	SYS_TYPE_SYS_TYPE_TOOL      SYS_TYPE = 20
)

var SYS_TYPE_name = map[int32]string{
	1:  "SYS_IM_SERVER",
	2:  "SYS_VOIP_SERVER",
	3:  "SYS_MUC_SERVER",
	4:  "SYS_OFFLINE_SERVER",
	20: "SYS_TYPE_TOOL",
}
var SYS_TYPE_value = map[string]int32{
	"SYS_IM_SERVER":      1,
	"SYS_VOIP_SERVER":    2,
	"SYS_MUC_SERVER":     3,
	"SYS_OFFLINE_SERVER": 4,
	"SYS_TYPE_TOOL":      20,
}

func (x SYS_TYPE) Enum() *SYS_TYPE {
	p := new(SYS_TYPE)
	*p = x
	return p
}
func (x SYS_TYPE) String() string {
	return proto.EnumName(SYS_TYPE_name, int32(x))
}
func (x *SYS_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SYS_TYPE_value, data, "SYS_TYPE")
	if err != nil {
		return err
	}
	*x = SYS_TYPE(value)
	return nil
}
func (SYS_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RET_CODE int32

const (
	RET_CODE_RET_SUCCESS          RET_CODE = 0
	RET_CODE_RET_CLOSE_PUSH       RET_CODE = 100
	RET_CODE_RET_TOKEN_NULL       RET_CODE = 101
	RET_CODE_RET_PB_ERR           RET_CODE = 500
	RET_CODE_RET_INTERNAL_ERR     RET_CODE = 501
	RET_CODE_RET_SESS_TIMEOUT_ERR RET_CODE = 502
	RET_CODE_RET_INPUT_PARAM_ERR  RET_CODE = 503
	RET_CODE_RET_QUEUE_FULL       RET_CODE = 504
	RET_CODE_RET_APNS_ERR         RET_CODE = 505
	RET_CODE_RET_GCM_ERR          RET_CODE = 506
	RET_CODE_RET_RELATION_ERR     RET_CODE = 507
	RET_CODE_RET_USER_CACHE_ERR   RET_CODE = 508
)

var RET_CODE_name = map[int32]string{
	0:   "RET_SUCCESS",
	100: "RET_CLOSE_PUSH",
	101: "RET_TOKEN_NULL",
	500: "RET_PB_ERR",
	501: "RET_INTERNAL_ERR",
	502: "RET_SESS_TIMEOUT_ERR",
	503: "RET_INPUT_PARAM_ERR",
	504: "RET_QUEUE_FULL",
	505: "RET_APNS_ERR",
	506: "RET_GCM_ERR",
	507: "RET_RELATION_ERR",
	508: "RET_USER_CACHE_ERR",
}
var RET_CODE_value = map[string]int32{
	"RET_SUCCESS":          0,
	"RET_CLOSE_PUSH":       100,
	"RET_TOKEN_NULL":       101,
	"RET_PB_ERR":           500,
	"RET_INTERNAL_ERR":     501,
	"RET_SESS_TIMEOUT_ERR": 502,
	"RET_INPUT_PARAM_ERR":  503,
	"RET_QUEUE_FULL":       504,
	"RET_APNS_ERR":         505,
	"RET_GCM_ERR":          506,
	"RET_RELATION_ERR":     507,
	"RET_USER_CACHE_ERR":   508,
}

func (x RET_CODE) Enum() *RET_CODE {
	p := new(RET_CODE)
	*p = x
	return p
}
func (x RET_CODE) String() string {
	return proto.EnumName(RET_CODE_name, int32(x))
}
func (x *RET_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RET_CODE_value, data, "RET_CODE")
	if err != nil {
		return err
	}
	*x = RET_CODE(value)
	return nil
}
func (RET_CODE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type TERMINAL_TYPE int32

const (
	TERMINAL_TYPE_TT_IOS     TERMINAL_TYPE = 0
	TERMINAL_TYPE_TT_ANDROID TERMINAL_TYPE = 1
	TERMINAL_TYPE_TT_UNKNOW  TERMINAL_TYPE = 255
)

var TERMINAL_TYPE_name = map[int32]string{
	0:   "TT_IOS",
	1:   "TT_ANDROID",
	255: "TT_UNKNOW",
}
var TERMINAL_TYPE_value = map[string]int32{
	"TT_IOS":     0,
	"TT_ANDROID": 1,
	"TT_UNKNOW":  255,
}

func (x TERMINAL_TYPE) Enum() *TERMINAL_TYPE {
	p := new(TERMINAL_TYPE)
	*p = x
	return p
}
func (x TERMINAL_TYPE) String() string {
	return proto.EnumName(TERMINAL_TYPE_name, int32(x))
}
func (x *TERMINAL_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TERMINAL_TYPE_value, data, "TERMINAL_TYPE")
	if err != nil {
		return err
	}
	*x = TERMINAL_TYPE(value)
	return nil
}
func (TERMINAL_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CHAT_TYPE int32

const (
	CHAT_TYPE_CT_P2P CHAT_TYPE = 0
	CHAT_TYPE_CT_MUC CHAT_TYPE = 1
)

var CHAT_TYPE_name = map[int32]string{
	0: "CT_P2P",
	1: "CT_MUC",
}
var CHAT_TYPE_value = map[string]int32{
	"CT_P2P": 0,
	"CT_MUC": 1,
}

func (x CHAT_TYPE) Enum() *CHAT_TYPE {
	p := new(CHAT_TYPE)
	*p = x
	return p
}
func (x CHAT_TYPE) String() string {
	return proto.EnumName(CHAT_TYPE_name, int32(x))
}
func (x *CHAT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CHAT_TYPE_value, data, "CHAT_TYPE")
	if err != nil {
		return err
	}
	*x = CHAT_TYPE(value)
	return nil
}
func (CHAT_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type MESSAGE_PUSH_TYPE int32

const (
	MESSAGE_PUSH_TYPE_PUSH_TEXT                    MESSAGE_PUSH_TYPE = 0
	MESSAGE_PUSH_TYPE_PUSH_VOICE                   MESSAGE_PUSH_TYPE = 1
	MESSAGE_PUSH_TYPE_PUSH_IMAGE                   MESSAGE_PUSH_TYPE = 2
	MESSAGE_PUSH_TYPE_PUSH_INTRODUCE               MESSAGE_PUSH_TYPE = 3
	MESSAGE_PUSH_TYPE_PUSH_LOCATION                MESSAGE_PUSH_TYPE = 4
	MESSAGE_PUSH_TYPE_PUSH_FRIEND_INVITE           MESSAGE_PUSH_TYPE = 5
	MESSAGE_PUSH_TYPE_PUSH_LANGUAGE_EXCHANGE       MESSAGE_PUSH_TYPE = 6
	MESSAGE_PUSH_TYPE_PUSH_LANGUAGE_EXCHANGE_REPLY MESSAGE_PUSH_TYPE = 7
	MESSAGE_PUSH_TYPE_PUSH_CORRECT_SENTENCE        MESSAGE_PUSH_TYPE = 8
	MESSAGE_PUSH_TYPE_PUSH_STICKERS                MESSAGE_PUSH_TYPE = 9
	MESSAGE_PUSH_TYPE_PUSH_DOODLE                  MESSAGE_PUSH_TYPE = 10
	MESSAGE_PUSH_TYPE_PUSH_GIFT                    MESSAGE_PUSH_TYPE = 11
	MESSAGE_PUSH_TYPE_PUSH_VOIP                    MESSAGE_PUSH_TYPE = 12
	MESSAGE_PUSH_TYPE_PUSH_ACCEPT_INVITE           MESSAGE_PUSH_TYPE = 13
	MESSAGE_PUSH_TYPE_PUSH_VIDEO                   MESSAGE_PUSH_TYPE = 14
	MESSAGE_PUSH_TYPE_PUSH_GVOIP                   MESSAGE_PUSH_TYPE = 15
	MESSAGE_PUSH_TYPE_PUSH_LINK                    MESSAGE_PUSH_TYPE = 16
	MESSAGE_PUSH_TYPE_PUSH_CARD                    MESSAGE_PUSH_TYPE = 17
	MESSAGE_PUSH_TYPE_PUSH_FOLLOW                  MESSAGE_PUSH_TYPE = 18
	MESSAGE_PUSH_TYPE_PUSH_REPLY_YOUR_COMMENT      MESSAGE_PUSH_TYPE = 19
	MESSAGE_PUSH_TYPE_PUSH_COMMENTED_YOUR_POST     MESSAGE_PUSH_TYPE = 20
	MESSAGE_PUSH_TYPE_PUSH_CORRECTED_YOUR_POST     MESSAGE_PUSH_TYPE = 21
	MESSAGE_PUSH_TYPE_PUSH_MOMENT_LIKE             MESSAGE_PUSH_TYPE = 22
)

var MESSAGE_PUSH_TYPE_name = map[int32]string{
	0:  "PUSH_TEXT",
	1:  "PUSH_VOICE",
	2:  "PUSH_IMAGE",
	3:  "PUSH_INTRODUCE",
	4:  "PUSH_LOCATION",
	5:  "PUSH_FRIEND_INVITE",
	6:  "PUSH_LANGUAGE_EXCHANGE",
	7:  "PUSH_LANGUAGE_EXCHANGE_REPLY",
	8:  "PUSH_CORRECT_SENTENCE",
	9:  "PUSH_STICKERS",
	10: "PUSH_DOODLE",
	11: "PUSH_GIFT",
	12: "PUSH_VOIP",
	13: "PUSH_ACCEPT_INVITE",
	14: "PUSH_VIDEO",
	15: "PUSH_GVOIP",
	16: "PUSH_LINK",
	17: "PUSH_CARD",
	18: "PUSH_FOLLOW",
	19: "PUSH_REPLY_YOUR_COMMENT",
	20: "PUSH_COMMENTED_YOUR_POST",
	21: "PUSH_CORRECTED_YOUR_POST",
	22: "PUSH_MOMENT_LIKE",
}
var MESSAGE_PUSH_TYPE_value = map[string]int32{
	"PUSH_TEXT":                    0,
	"PUSH_VOICE":                   1,
	"PUSH_IMAGE":                   2,
	"PUSH_INTRODUCE":               3,
	"PUSH_LOCATION":                4,
	"PUSH_FRIEND_INVITE":           5,
	"PUSH_LANGUAGE_EXCHANGE":       6,
	"PUSH_LANGUAGE_EXCHANGE_REPLY": 7,
	"PUSH_CORRECT_SENTENCE":        8,
	"PUSH_STICKERS":                9,
	"PUSH_DOODLE":                  10,
	"PUSH_GIFT":                    11,
	"PUSH_VOIP":                    12,
	"PUSH_ACCEPT_INVITE":           13,
	"PUSH_VIDEO":                   14,
	"PUSH_GVOIP":                   15,
	"PUSH_LINK":                    16,
	"PUSH_CARD":                    17,
	"PUSH_FOLLOW":                  18,
	"PUSH_REPLY_YOUR_COMMENT":      19,
	"PUSH_COMMENTED_YOUR_POST":     20,
	"PUSH_CORRECTED_YOUR_POST":     21,
	"PUSH_MOMENT_LIKE":             22,
}

func (x MESSAGE_PUSH_TYPE) Enum() *MESSAGE_PUSH_TYPE {
	p := new(MESSAGE_PUSH_TYPE)
	*p = x
	return p
}
func (x MESSAGE_PUSH_TYPE) String() string {
	return proto.EnumName(MESSAGE_PUSH_TYPE_name, int32(x))
}
func (x *MESSAGE_PUSH_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MESSAGE_PUSH_TYPE_value, data, "MESSAGE_PUSH_TYPE")
	if err != nil {
		return err
	}
	*x = MESSAGE_PUSH_TYPE(value)
	return nil
}
func (MESSAGE_PUSH_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ReqBody struct {
	NotifyRemarknameReqbody *NotifyRemarkNameReqBody `protobuf:"bytes,1,opt,name=notify_remarkname_reqbody" json:"notify_remarkname_reqbody,omitempty"`
	PushMsgReqbody          *PushMsgReqBody          `protobuf:"bytes,2,opt,name=push_msg_reqbody" json:"push_msg_reqbody,omitempty"`
	XXX_unrecognized        []byte                   `json:"-"`
}

func (m *ReqBody) Reset()                    { *m = ReqBody{} }
func (m *ReqBody) String() string            { return proto.CompactTextString(m) }
func (*ReqBody) ProtoMessage()               {}
func (*ReqBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReqBody) GetNotifyRemarknameReqbody() *NotifyRemarkNameReqBody {
	if m != nil {
		return m.NotifyRemarknameReqbody
	}
	return nil
}

func (m *ReqBody) GetPushMsgReqbody() *PushMsgReqBody {
	if m != nil {
		return m.PushMsgReqbody
	}
	return nil
}

type RspBody struct {
	NotifyRemarknameRspbody *NotifyRemarkNameRspBody `protobuf:"bytes,1,opt,name=notify_remarkname_rspbody" json:"notify_remarkname_rspbody,omitempty"`
	PushMsgRspbody          *PushMsgRspBody          `protobuf:"bytes,2,opt,name=push_msg_rspbody" json:"push_msg_rspbody,omitempty"`
	XXX_unrecognized        []byte                   `json:"-"`
}

func (m *RspBody) Reset()                    { *m = RspBody{} }
func (m *RspBody) String() string            { return proto.CompactTextString(m) }
func (*RspBody) ProtoMessage()               {}
func (*RspBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RspBody) GetNotifyRemarknameRspbody() *NotifyRemarkNameRspBody {
	if m != nil {
		return m.NotifyRemarknameRspbody
	}
	return nil
}

func (m *RspBody) GetPushMsgRspbody() *PushMsgRspBody {
	if m != nil {
		return m.PushMsgRspbody
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqBody)(nil), "ht.push.ReqBody")
	proto.RegisterType((*RspBody)(nil), "ht.push.RspBody")
	proto.RegisterEnum("ht.push.CMD_TYPE", CMD_TYPE_name, CMD_TYPE_value)
	proto.RegisterEnum("ht.push.SYS_TYPE", SYS_TYPE_name, SYS_TYPE_value)
	proto.RegisterEnum("ht.push.RET_CODE", RET_CODE_name, RET_CODE_value)
	proto.RegisterEnum("ht.push.TERMINAL_TYPE", TERMINAL_TYPE_name, TERMINAL_TYPE_value)
	proto.RegisterEnum("ht.push.CHAT_TYPE", CHAT_TYPE_name, CHAT_TYPE_value)
	proto.RegisterEnum("ht.push.MESSAGE_PUSH_TYPE", MESSAGE_PUSH_TYPE_name, MESSAGE_PUSH_TYPE_value)
}

func init() { proto.RegisterFile("HT_push_head.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 757 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0x1b, 0x37,
	0x10, 0xad, 0xb4, 0xad, 0x2d, 0x8d, 0x2d, 0x99, 0xa6, 0xe5, 0xcf, 0x1a, 0x85, 0xd1, 0xf6, 0x50,
	0xe8, 0x20, 0xa0, 0xbe, 0xf6, 0xb4, 0xe6, 0x52, 0xd2, 0x42, 0xbb, 0xe4, 0x96, 0xcb, 0x75, 0xad,
	0x13, 0xe1, 0xc2, 0x8a, 0x1d, 0x04, 0xb6, 0x64, 0xcb, 0x39, 0xf8, 0xe6, 0x5c, 0xf3, 0x3f, 0x82,
	0xfc, 0xbf, 0x20, 0xdf, 0x09, 0x90, 0x0c, 0x49, 0x69, 0x63, 0x03, 0x49, 0x90, 0xcb, 0x82, 0xf3,
	0x66, 0xde, 0xf0, 0x0d, 0xdf, 0x2c, 0xd0, 0xbe, 0x36, 0x93, 0xc7, 0xd3, 0x33, 0x73, 0x36, 0x3a,
	0x3e, 0xe9, 0x4c, 0xae, 0xc6, 0xd7, 0x63, 0xba, 0x78, 0x76, 0xdd, 0xb1, 0xd8, 0x4e, 0x99, 0xfc,
	0x7f, 0x7c, 0x72, 0xe3, 0x93, 0xbf, 0x3f, 0xa9, 0xc0, 0xa2, 0x1a, 0x5d, 0x1e, 0x20, 0x42, 0x19,
	0x6c, 0x5f, 0x8c, 0xaf, 0x1f, 0x3e, 0xb8, 0x31, 0x57, 0xa3, 0xf3, 0xe3, 0xab, 0x47, 0x17, 0xc7,
	0xe7, 0x23, 0x3c, 0x5e, 0xda, 0xf2, 0xad, 0xca, 0x5e, 0xe5, 0xaf, 0xa5, 0xfd, 0xbd, 0xce, 0xac,
	0x59, 0x47, 0xb8, 0x4a, 0xe5, 0x0a, 0x05, 0x16, 0xce, 0x9b, 0xfc, 0x0d, 0xc4, 0xdd, 0x71, 0x3e,
	0x3d, 0x2d, 0xb9, 0x55, 0xc7, 0xdd, 0x2c, 0xb9, 0x19, 0x7e, 0xd2, 0xe9, 0xe9, 0x8c, 0xe2, 0x35,
	0x4c, 0x27, 0xdf, 0xd1, 0x30, 0x9d, 0xfc, 0x98, 0x86, 0x59, 0x93, 0x7b, 0x1a, 0x66, 0xdc, 0x6f,
	0x69, 0xf0, 0x94, 0x76, 0x02, 0x35, 0x96, 0x46, 0x46, 0x0f, 0x33, 0x4e, 0xff, 0x84, 0xdf, 0xec,
	0x39, 0xdf, 0xcf, 0x4d, 0x1a, 0xaa, 0x81, 0x08, 0x53, 0xce, 0xfa, 0xa1, 0xe8, 0xf1, 0xc8, 0x08,
	0xa9, 0xe3, 0xee, 0x90, 0x3c, 0xbb, 0xad, 0xd2, 0x1d, 0x68, 0x95, 0x55, 0x3c, 0xcf, 0xc3, 0x1e,
	0x37, 0x59, 0x91, 0xf7, 0xc9, 0xf3, 0xdb, 0x6a, 0xfb, 0x12, 0x6a, 0xf9, 0x30, 0xf7, 0xdd, 0x56,
	0xa1, 0x61, 0xcf, 0x71, 0x6a, 0x72, 0xae, 0x0e, 0xb9, 0x22, 0x15, 0xba, 0x06, 0x2b, 0x16, 0x3a,
	0x94, 0x71, 0x36, 0x07, 0xab, 0x94, 0x42, 0xd3, 0x82, 0x69, 0xc1, 0xe6, 0x58, 0x40, 0x37, 0x80,
	0x5a, 0x4c, 0x76, 0xbb, 0x49, 0x2c, 0xf8, 0x1c, 0xff, 0x79, 0xde, 0xd3, 0xf6, 0x37, 0x5a, 0xca,
	0x84, 0xb4, 0xda, 0x4f, 0xab, 0x50, 0x53, 0x5c, 0x1b, 0x26, 0x23, 0x4e, 0x57, 0x60, 0xc9, 0x9e,
	0xf3, 0x82, 0x31, 0x94, 0x46, 0x7e, 0xb2, 0xcd, 0x5d, 0x32, 0x91, 0xf9, 0x4c, 0xe6, 0xc9, 0x1c,
	0xd3, 0x72, 0xc0, 0x85, 0x11, 0x45, 0x92, 0x90, 0x11, 0x12, 0xc1, 0x62, 0xd9, 0x81, 0xe1, 0x4a,
	0x91, 0x97, 0x01, 0x5d, 0x07, 0x62, 0x81, 0x58, 0x68, 0xae, 0x44, 0x98, 0x38, 0xf8, 0x55, 0x40,
	0xb7, 0xa1, 0xe5, 0x2e, 0xc0, 0xee, 0x46, 0xc7, 0x29, 0x97, 0x85, 0x76, 0xa9, 0xd7, 0x01, 0xdd,
	0x82, 0x35, 0xcf, 0xc8, 0x10, 0xcb, 0x42, 0x15, 0xa6, 0x2e, 0xf3, 0x26, 0xc0, 0xb1, 0xdd, 0x85,
	0xff, 0x16, 0xbc, 0xe0, 0xa6, 0x6b, 0x2f, 0x7c, 0x1b, 0xe0, 0x28, 0xcb, 0x16, 0x0c, 0x33, 0x91,
	0xbb, 0xba, 0x77, 0x01, 0x25, 0x5e, 0x7d, 0x8f, 0x79, 0xe6, 0xfb, 0x52, 0x85, 0xe2, 0x49, 0xa8,
	0x63, 0x29, 0x1c, 0xfc, 0x21, 0xa0, 0x9b, 0x40, 0x2d, 0x5c, 0xe0, 0xbb, 0x18, 0x16, 0xb2, 0x3e,
	0x77, 0x89, 0x8f, 0x41, 0xfb, 0x1f, 0x68, 0xa0, 0xde, 0x34, 0xb6, 0x8a, 0x9d, 0x09, 0x00, 0x0b,
	0x1a, 0x35, 0x49, 0xfb, 0x16, 0x4d, 0x00, 0x3c, 0x87, 0x22, 0x52, 0x32, 0x8e, 0xd0, 0x8d, 0x26,
	0xd4, 0x31, 0x2e, 0xc4, 0x40, 0xc8, 0xff, 0xc8, 0xa7, 0x4a, 0xfb, 0x0f, 0xa8, 0xa3, 0xdd, 0xba,
	0x24, 0x32, 0x1c, 0x63, 0x3f, 0x43, 0xa2, 0x3f, 0xa3, 0x41, 0xa4, 0xd2, 0x7e, 0x11, 0xc0, 0xea,
	0x5d, 0xdb, 0x7d, 0x75, 0x03, 0xea, 0x3e, 0xe0, 0x47, 0xda, 0xdf, 0xe4, 0x42, 0x34, 0x9a, 0x71,
	0x77, 0x93, 0x8f, 0xe3, 0x14, 0x69, 0xde, 0x72, 0x1f, 0x0b, 0xad, 0x64, 0x54, 0x60, 0x8d, 0x7d,
	0x8f, 0x86, 0xc3, 0x12, 0xc9, 0xdc, 0xac, 0xe8, 0x36, 0x6e, 0x81, 0x83, 0xba, 0x2a, 0xe6, 0x22,
	0xc2, 0xea, 0xc3, 0x58, 0x73, 0xf2, 0x0b, 0x6e, 0xe0, 0x86, 0x2f, 0xc5, 0xdd, 0x2c, 0xac, 0x10,
	0x7e, 0xe4, 0xf7, 0x94, 0x2c, 0xd0, 0x3d, 0xd8, 0xfd, 0x7a, 0x0e, 0x1f, 0x31, 0x4b, 0x86, 0x64,
	0x11, 0x2d, 0x5c, 0x77, 0x15, 0x4c, 0x2a, 0xc5, 0x99, 0xf5, 0x12, 0x3d, 0x16, 0xa8, 0xa1, 0x56,
	0x6a, 0xc8, 0x75, 0xcc, 0x06, 0x5c, 0xe5, 0xa4, 0x6e, 0x37, 0xca, 0x41, 0x91, 0x94, 0x51, 0xc2,
	0x09, 0x94, 0xa3, 0xf6, 0xe2, 0xae, 0x26, 0x4b, 0x65, 0x68, 0x77, 0x9a, 0x2c, 0x97, 0x92, 0x43,
	0x5c, 0xc0, 0x4c, 0xcf, 0x25, 0x37, 0xbe, 0xbc, 0x48, 0x1c, 0x71, 0x49, 0x9a, 0x65, 0xdc, 0x73,
	0xbc, 0x95, 0xb2, 0x0d, 0xae, 0xfb, 0x80, 0x90, 0x32, 0x64, 0xa1, 0x8a, 0xc8, 0x6a, 0x29, 0xa2,
	0x2b, 0x93, 0x04, 0xbd, 0xa2, 0xf4, 0x57, 0xd8, 0x74, 0x80, 0x9b, 0xc9, 0x0c, 0x65, 0x81, 0x7b,
	0x20, 0xd3, 0x14, 0x27, 0x21, 0x6b, 0x74, 0x17, 0xb6, 0x66, 0x03, 0x3a, 0x04, 0xff, 0x5e, 0x57,
	0x90, 0xc9, 0x5c, 0x93, 0xd6, 0x9d, 0xac, 0x1b, 0xff, 0x5e, 0x76, 0x9d, 0xb6, 0x80, 0xb8, 0x6c,
	0x2a, 0x2d, 0x15, 0xe5, 0x0c, 0x38, 0xd9, 0xf8, 0x1c, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xe2, 0x22,
	0x42, 0x5e, 0x05, 0x00, 0x00,
}
