// Code generated by protoc-gen-go.
// source: QueryUser.proto
// DO NOT EDIT!

/*
Package QueryUser is a generated protocol buffer package.

It is generated from these files:
	QueryUser.proto

It has these top-level messages:
	Regids
	Users
	StatUser
	StatUsers
	Query
	ValidateUsers
	Querys
	Response
	Responses
*/
package QueryUser

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PLATFORM int32

const (
	PLATFORM_ANDROID  PLATFORM = 0
	PLATFORM_IPHONE   PLATFORM = 1
	PLATFORM_WINPHONE PLATFORM = 2
)

var PLATFORM_name = map[int32]string{
	0: "ANDROID",
	1: "IPHONE",
	2: "WINPHONE",
}
var PLATFORM_value = map[string]int32{
	"ANDROID":  0,
	"IPHONE":   1,
	"WINPHONE": 2,
}

func (x PLATFORM) Enum() *PLATFORM {
	p := new(PLATFORM)
	*p = x
	return p
}
func (x PLATFORM) String() string {
	return proto.EnumName(PLATFORM_name, int32(x))
}
func (x *PLATFORM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PLATFORM_value, data, "PLATFORM")
	if err != nil {
		return err
	}
	*x = PLATFORM(value)
	return nil
}
func (PLATFORM) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type STATUS int32

const (
	STATUS_SUCCESS               STATUS = 0
	STATUS_BAD_PROTO             STATUS = 1
	STATUS_INVALID_APPKEY        STATUS = 2
	STATUS_INVALID_PLATFORM      STATUS = 3
	STATUS_INVALID_REGID         STATUS = 4
	STATUS_SERIALIZE_RESP_ERROR  STATUS = 5
	STATUS_ERROR_PAGE            STATUS = 6
	STATUS_SERVER_INTERNAL_ERROR STATUS = 100
)

var STATUS_name = map[int32]string{
	0:   "SUCCESS",
	1:   "BAD_PROTO",
	2:   "INVALID_APPKEY",
	3:   "INVALID_PLATFORM",
	4:   "INVALID_REGID",
	5:   "SERIALIZE_RESP_ERROR",
	6:   "ERROR_PAGE",
	100: "SERVER_INTERNAL_ERROR",
}
var STATUS_value = map[string]int32{
	"SUCCESS":               0,
	"BAD_PROTO":             1,
	"INVALID_APPKEY":        2,
	"INVALID_PLATFORM":      3,
	"INVALID_REGID":         4,
	"SERIALIZE_RESP_ERROR":  5,
	"ERROR_PAGE":            6,
	"SERVER_INTERNAL_ERROR": 100,
}

func (x STATUS) Enum() *STATUS {
	p := new(STATUS)
	*p = x
	return p
}
func (x STATUS) String() string {
	return proto.EnumName(STATUS_name, int32(x))
}
func (x *STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(STATUS_value, data, "STATUS")
	if err != nil {
		return err
	}
	*x = STATUS(value)
	return nil
}
func (STATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type USERSTATUS int32

const (
	USERSTATUS_USER_OK    USERSTATUS = 1
	USERSTATUS_USER_BAD   USERSTATUS = 2
	USERSTATUS_USER_FAIL  USERSTATUS = 3
	USERSTATUS_USER_ERROR USERSTATUS = 4
)

var USERSTATUS_name = map[int32]string{
	1: "USER_OK",
	2: "USER_BAD",
	3: "USER_FAIL",
	4: "USER_ERROR",
}
var USERSTATUS_value = map[string]int32{
	"USER_OK":    1,
	"USER_BAD":   2,
	"USER_FAIL":  3,
	"USER_ERROR": 4,
}

func (x USERSTATUS) Enum() *USERSTATUS {
	p := new(USERSTATUS)
	*p = x
	return p
}
func (x USERSTATUS) String() string {
	return proto.EnumName(USERSTATUS_name, int32(x))
}
func (x *USERSTATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(USERSTATUS_value, data, "USERSTATUS")
	if err != nil {
		return err
	}
	*x = USERSTATUS(value)
	return nil
}
func (USERSTATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Regids struct {
	Regid            [][]byte `protobuf:"bytes,1,rep,name=regid" json:"regid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Regids) Reset()                    { *m = Regids{} }
func (m *Regids) String() string            { return proto.CompactTextString(m) }
func (*Regids) ProtoMessage()               {}
func (*Regids) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Regids) GetRegid() [][]byte {
	if m != nil {
		return m.Regid
	}
	return nil
}

type Users struct {
	Uid              []int64 `protobuf:"varint,1,rep,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Users) GetUid() []int64 {
	if m != nil {
		return m.Uid
	}
	return nil
}

type StatUser struct {
	Uid              *int64      `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Valid            *USERSTATUS `protobuf:"varint,2,opt,name=valid,enum=QueryUser.USERSTATUS,def=3" json:"valid,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *StatUser) Reset()                    { *m = StatUser{} }
func (m *StatUser) String() string            { return proto.CompactTextString(m) }
func (*StatUser) ProtoMessage()               {}
func (*StatUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_StatUser_Valid USERSTATUS = USERSTATUS_USER_FAIL

func (m *StatUser) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *StatUser) GetValid() USERSTATUS {
	if m != nil && m.Valid != nil {
		return *m.Valid
	}
	return Default_StatUser_Valid
}

type StatUsers struct {
	Appkey           []byte      `protobuf:"bytes,1,opt,name=appkey" json:"appkey,omitempty"`
	Platform         *PLATFORM   `protobuf:"varint,2,opt,name=platform,enum=QueryUser.PLATFORM,def=0" json:"platform,omitempty"`
	Users            []*StatUser `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *StatUsers) Reset()                    { *m = StatUsers{} }
func (m *StatUsers) String() string            { return proto.CompactTextString(m) }
func (*StatUsers) ProtoMessage()               {}
func (*StatUsers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_StatUsers_Platform PLATFORM = PLATFORM_ANDROID

func (m *StatUsers) GetAppkey() []byte {
	if m != nil {
		return m.Appkey
	}
	return nil
}

func (m *StatUsers) GetPlatform() PLATFORM {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return Default_StatUsers_Platform
}

func (m *StatUsers) GetUsers() []*StatUser {
	if m != nil {
		return m.Users
	}
	return nil
}

type Query struct {
	ReqNo            *int64    `protobuf:"varint,1,opt,name=reqNo,def=0" json:"reqNo,omitempty"`
	Cookie           []byte    `protobuf:"bytes,2,opt,name=cookie" json:"cookie,omitempty"`
	Scookie          []byte    `protobuf:"bytes,3,opt,name=scookie" json:"scookie,omitempty"`
	Appkey           []byte    `protobuf:"bytes,4,opt,name=appkey" json:"appkey,omitempty"`
	Platform         *PLATFORM `protobuf:"varint,5,opt,name=platform,enum=QueryUser.PLATFORM,def=0" json:"platform,omitempty"`
	Page             *int32    `protobuf:"varint,6,opt,name=page,def=1" json:"page,omitempty"`
	Regids           *Regids   `protobuf:"bytes,7,opt,name=regids" json:"regids,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

const Default_Query_ReqNo int64 = 0
const Default_Query_Platform PLATFORM = PLATFORM_ANDROID
const Default_Query_Page int32 = 1

func (m *Query) GetReqNo() int64 {
	if m != nil && m.ReqNo != nil {
		return *m.ReqNo
	}
	return Default_Query_ReqNo
}

func (m *Query) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *Query) GetScookie() []byte {
	if m != nil {
		return m.Scookie
	}
	return nil
}

func (m *Query) GetAppkey() []byte {
	if m != nil {
		return m.Appkey
	}
	return nil
}

func (m *Query) GetPlatform() PLATFORM {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return Default_Query_Platform
}

func (m *Query) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return Default_Query_Page
}

func (m *Query) GetRegids() *Regids {
	if m != nil {
		return m.Regids
	}
	return nil
}

// request and response!
type ValidateUsers struct {
	ReqNo            *int64       `protobuf:"varint,1,opt,name=reqNo,def=0" json:"reqNo,omitempty"`
	Cookie           []byte       `protobuf:"bytes,2,opt,name=cookie" json:"cookie,omitempty"`
	Status           *STATUS      `protobuf:"varint,3,opt,name=status,enum=QueryUser.STATUS,def=0" json:"status,omitempty"`
	Apps             []*StatUsers `protobuf:"bytes,4,rep,name=apps" json:"apps,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ValidateUsers) Reset()                    { *m = ValidateUsers{} }
func (m *ValidateUsers) String() string            { return proto.CompactTextString(m) }
func (*ValidateUsers) ProtoMessage()               {}
func (*ValidateUsers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

const Default_ValidateUsers_ReqNo int64 = 0
const Default_ValidateUsers_Status STATUS = STATUS_SUCCESS

func (m *ValidateUsers) GetReqNo() int64 {
	if m != nil && m.ReqNo != nil {
		return *m.ReqNo
	}
	return Default_ValidateUsers_ReqNo
}

func (m *ValidateUsers) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *ValidateUsers) GetStatus() STATUS {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_ValidateUsers_Status
}

func (m *ValidateUsers) GetApps() []*StatUsers {
	if m != nil {
		return m.Apps
	}
	return nil
}

type Querys struct {
	Querys           []*Query `protobuf:"bytes,1,rep,name=querys" json:"querys,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Querys) Reset()                    { *m = Querys{} }
func (m *Querys) String() string            { return proto.CompactTextString(m) }
func (*Querys) ProtoMessage()               {}
func (*Querys) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Querys) GetQuerys() []*Query {
	if m != nil {
		return m.Querys
	}
	return nil
}

type Response struct {
	Query            *Query  `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Status           *STATUS `protobuf:"varint,2,opt,name=status,enum=QueryUser.STATUS,def=0" json:"status,omitempty"`
	Pages            *int32  `protobuf:"varint,3,opt,name=pages,def=1" json:"pages,omitempty"`
	Users            *Users  `protobuf:"bytes,4,opt,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

const Default_Response_Status STATUS = STATUS_SUCCESS
const Default_Response_Pages int32 = 1

func (m *Response) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Response) GetStatus() STATUS {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_Response_Status
}

func (m *Response) GetPages() int32 {
	if m != nil && m.Pages != nil {
		return *m.Pages
	}
	return Default_Response_Pages
}

func (m *Response) GetUsers() *Users {
	if m != nil {
		return m.Users
	}
	return nil
}

type Responses struct {
	Responses        []*Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Responses) Reset()                    { *m = Responses{} }
func (m *Responses) String() string            { return proto.CompactTextString(m) }
func (*Responses) ProtoMessage()               {}
func (*Responses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Responses) GetResponses() []*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func init() {
	proto.RegisterType((*Regids)(nil), "QueryUser.Regids")
	proto.RegisterType((*Users)(nil), "QueryUser.Users")
	proto.RegisterType((*StatUser)(nil), "QueryUser.StatUser")
	proto.RegisterType((*StatUsers)(nil), "QueryUser.StatUsers")
	proto.RegisterType((*Query)(nil), "QueryUser.Query")
	proto.RegisterType((*ValidateUsers)(nil), "QueryUser.ValidateUsers")
	proto.RegisterType((*Querys)(nil), "QueryUser.Querys")
	proto.RegisterType((*Response)(nil), "QueryUser.Response")
	proto.RegisterType((*Responses)(nil), "QueryUser.Responses")
	proto.RegisterEnum("QueryUser.PLATFORM", PLATFORM_name, PLATFORM_value)
	proto.RegisterEnum("QueryUser.STATUS", STATUS_name, STATUS_value)
	proto.RegisterEnum("QueryUser.USERSTATUS", USERSTATUS_name, USERSTATUS_value)
}

func init() { proto.RegisterFile("QueryUser.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4d, 0x4f, 0xdb, 0x4c,
	0x10, 0xc7, 0xd9, 0xf8, 0x25, 0xc9, 0xe4, 0x85, 0x65, 0x08, 0x7a, 0xfc, 0x9c, 0x48, 0x7d, 0xa8,
	0xa2, 0x1c, 0x68, 0xa1, 0xb7, 0xdc, 0x0c, 0x59, 0xc0, 0x22, 0xb5, 0xdd, 0x75, 0x42, 0xd5, 0x5e,
	0x2c, 0xab, 0xb8, 0x08, 0x41, 0x6b, 0xe3, 0x75, 0x2a, 0x71, 0xec, 0xb5, 0x1f, 0xa4, 0xc7, 0x7e,
	0xc6, 0x6a, 0xd7, 0x36, 0x49, 0x04, 0x12, 0xbd, 0xcd, 0xcc, 0x8e, 0xff, 0xf3, 0xdb, 0xff, 0x78,
	0x61, 0xfb, 0xc3, 0x32, 0xc9, 0x1f, 0x16, 0x22, 0xc9, 0x0f, 0xb2, 0x3c, 0x2d, 0x52, 0x6c, 0x3f,
	0x16, 0xec, 0xff, 0xc0, 0xe4, 0xc9, 0xf5, 0xcd, 0x95, 0xc0, 0x1e, 0x18, 0xb9, 0x8c, 0x2c, 0x32,
	0xd4, 0x46, 0x5d, 0x7b, 0x00, 0x86, 0x6c, 0x10, 0xd8, 0x01, 0x6d, 0x59, 0x55, 0x35, 0xfb, 0x1c,
	0x5a, 0x61, 0x11, 0x17, 0xf2, 0x64, 0x75, 0x40, 0x46, 0x1a, 0xbe, 0x01, 0xe3, 0x47, 0x7c, 0x77,
	0x73, 0x65, 0x35, 0x86, 0x64, 0xd4, 0x3f, 0xda, 0x3b, 0x58, 0xcd, 0x5c, 0x84, 0x8c, 0x87, 0x73,
	0x67, 0xbe, 0x08, 0x27, 0x6d, 0x19, 0x47, 0xa7, 0x8e, 0x3b, 0xb3, 0x53, 0x68, 0xd7, 0x4a, 0x02,
	0xfb, 0x60, 0xc6, 0x59, 0x76, 0x9b, 0x3c, 0x28, 0xb5, 0x2e, 0x1e, 0x40, 0x2b, 0xbb, 0x8b, 0x8b,
	0xaf, 0x69, 0xfe, 0xad, 0x12, 0xdc, 0x5d, 0x13, 0x0c, 0x66, 0xce, 0xfc, 0xd4, 0xe7, 0xef, 0x27,
	0x4d, 0xc7, 0x9b, 0x72, 0xdf, 0x9d, 0xa2, 0x0d, 0xc6, 0x52, 0x0a, 0x59, 0xda, 0x50, 0x1b, 0x75,
	0x36, 0x9a, 0xeb, 0x21, 0xf6, 0x1f, 0x02, 0x86, 0x2a, 0x23, 0x95, 0x37, 0xbd, 0xf7, 0xd2, 0x12,
	0x7d, 0x42, 0xde, 0xca, 0xf9, 0x5f, 0xd2, 0xf4, 0xf6, 0x26, 0x51, 0xd3, 0xba, 0xb8, 0x0d, 0x4d,
	0x51, 0x15, 0x34, 0x55, 0x58, 0x01, 0xea, 0x4f, 0x00, 0x8d, 0x7f, 0x00, 0xdc, 0x06, 0x3d, 0x8b,
	0xaf, 0x13, 0xcb, 0x1c, 0x92, 0x91, 0x31, 0x21, 0x87, 0xf8, 0x0a, 0x4c, 0xe5, 0xb6, 0xb0, 0x9a,
	0x43, 0x32, 0xea, 0x1c, 0xed, 0xac, 0x7d, 0x5e, 0x2e, 0xc4, 0xfe, 0x49, 0xa0, 0x77, 0x29, 0x3d,
	0x8d, 0x8b, 0xa4, 0xb4, 0xe9, 0x65, 0xf0, 0x31, 0x98, 0xa2, 0x88, 0x8b, 0xa5, 0x50, 0xdc, 0xfd,
	0x0d, 0xd9, 0x6a, 0x07, 0xcd, 0x70, 0x71, 0x72, 0xc2, 0xc2, 0x10, 0x6d, 0xd0, 0xe3, 0x2c, 0x13,
	0x96, 0xae, 0x3c, 0x1b, 0x3c, 0xe3, 0x99, 0xb0, 0xc7, 0x60, 0xaa, 0xb2, 0xc0, 0x21, 0x98, 0xf7,
	0x2a, 0x52, 0x7f, 0x42, 0xe7, 0x88, 0xae, 0xf5, 0xab, 0xc8, 0xfe, 0x45, 0xa0, 0xc5, 0x13, 0x91,
	0xa5, 0xdf, 0x45, 0x82, 0xfb, 0x60, 0xa8, 0x76, 0x85, 0xfa, 0x4c, 0xf7, 0x1a, 0x69, 0xe3, 0x45,
	0x52, 0x0a, 0x86, 0x74, 0xaf, 0xbc, 0x94, 0xb2, 0x6f, 0xbf, 0x5e, 0xb8, 0xfe, 0x44, 0xbe, 0x04,
	0x7f, 0x07, 0xed, 0x9a, 0x45, 0xe0, 0x6b, 0x68, 0xe7, 0x75, 0x52, 0xe1, 0xef, 0x6e, 0xf8, 0x5d,
	0x9e, 0x8d, 0x0f, 0xa1, 0x55, 0xaf, 0x0e, 0x3b, 0x50, 0x2f, 0x8f, 0x6e, 0x21, 0x80, 0xe9, 0x06,
	0xe7, 0xbe, 0xc7, 0x28, 0xc1, 0x2e, 0xb4, 0x3e, 0xba, 0x5e, 0x99, 0x35, 0xc6, 0xbf, 0x09, 0x98,
	0x25, 0xae, 0xfc, 0xa2, 0x02, 0xa6, 0x5b, 0xd8, 0x83, 0xf6, 0xb1, 0x33, 0x8d, 0x02, 0xee, 0xcf,
	0x7d, 0x4a, 0x10, 0xa1, 0xef, 0x7a, 0x97, 0xce, 0xcc, 0x9d, 0x46, 0x4e, 0x10, 0x5c, 0xb0, 0x4f,
	0xb4, 0x81, 0x03, 0xa0, 0x75, 0xad, 0x9e, 0x4a, 0x35, 0xdc, 0x81, 0x5e, 0x5d, 0xe5, 0xec, 0xcc,
	0x9d, 0x52, 0x1d, 0x2d, 0x18, 0x84, 0x8c, 0xbb, 0xce, 0xcc, 0xfd, 0xcc, 0x22, 0xce, 0xc2, 0x20,
	0x62, 0x9c, 0xfb, 0x9c, 0x1a, 0xd8, 0x07, 0x50, 0x61, 0x14, 0x38, 0x67, 0x8c, 0x9a, 0xf8, 0x3f,
	0xec, 0x85, 0x8c, 0x5f, 0x32, 0x1e, 0xb9, 0xde, 0x9c, 0x71, 0xcf, 0x99, 0x55, 0xad, 0x57, 0xe3,
	0x53, 0x80, 0xd5, 0x43, 0x94, 0xac, 0xea, 0x29, 0xfa, 0x17, 0xe5, 0x8d, 0x54, 0x72, 0xec, 0x4c,
	0x69, 0x43, 0x92, 0x3f, 0xbe, 0x52, 0xaa, 0xc9, 0x11, 0x2a, 0x2d, 0x75, 0xf4, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x63, 0x97, 0xbf, 0x1d, 0x4d, 0x04, 0x00, 0x00,
}
