// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TagAliasBatchQuery/tagalias_query_interface.proto

/*
Package TagAliasBatchQuery is a generated protocol buffer package.

It is generated from these files:
	TagAliasBatchQuery/tagalias_query_interface.proto

It has these top-level messages:
	OpsUnit
	TagAliasQuery
	TagAliasQueryII
	TagAlsResult
	TagAlsResp
*/
package TagAliasBatchQuery

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tagalias_common "ice_tagalias/protobuf/tagalias_common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OpsUnit struct {
	Cmd              *tagalias_common.QUERY_ACTION `protobuf:"varint,1,opt,name=cmd,enum=QUERY_ACTION" json:"cmd,omitempty"`
	Page             *int32                        `protobuf:"varint,2,opt,name=page,def=1" json:"page,omitempty"`
	Uid              []int64                       `protobuf:"varint,3,rep,name=uid" json:"uid,omitempty"`
	Tags             [][]byte                      `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Alias            [][]byte                      `protobuf:"bytes,5,rep,name=alias" json:"alias,omitempty"`
	Queryk           []byte                        `protobuf:"bytes,6,opt,name=queryk" json:"queryk,omitempty"`
	DevType          *tagalias_common.DEVSUBTYPE   `protobuf:"varint,7,opt,name=dev_type,enum=DEVSUBTYPE,def=1" json:"dev_type,omitempty"`
	Total            []int32                       `protobuf:"varint,8,rep,name=total" json:"total,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *OpsUnit) Reset()                    { *m = OpsUnit{} }
func (m *OpsUnit) String() string            { return proto.CompactTextString(m) }
func (*OpsUnit) ProtoMessage()               {}
func (*OpsUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_OpsUnit_Page int32 = 1
const Default_OpsUnit_DevType tagalias_common.DEVSUBTYPE = tagalias_common.DEVSUBTYPE_NORMAL_TYPE

func (m *OpsUnit) GetCmd() tagalias_common.QUERY_ACTION {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return tagalias_common.QUERY_ACTION_GET_TAGS_BY_USER
}

func (m *OpsUnit) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return Default_OpsUnit_Page
}

func (m *OpsUnit) GetUid() []int64 {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *OpsUnit) GetTags() [][]byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *OpsUnit) GetAlias() [][]byte {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *OpsUnit) GetQueryk() []byte {
	if m != nil {
		return m.Queryk
	}
	return nil
}

func (m *OpsUnit) GetDevType() tagalias_common.DEVSUBTYPE {
	if m != nil && m.DevType != nil {
		return *m.DevType
	}
	return Default_OpsUnit_DevType
}

func (m *OpsUnit) GetTotal() []int32 {
	if m != nil {
		return m.Total
	}
	return nil
}

// for first query!
type TagAliasQuery struct {
	ReqNo            *int64                    `protobuf:"varint,1,opt,name=reqNo,def=0" json:"reqNo,omitempty"`
	Appkey           []byte                    `protobuf:"bytes,2,opt,name=appkey" json:"appkey,omitempty"`
	Platform         *tagalias_common.PLATFORM `protobuf:"varint,3,opt,name=platform,enum=PLATFORM" json:"platform,omitempty"`
	Query            []*OpsUnit                `protobuf:"bytes,4,rep,name=query" json:"query,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *TagAliasQuery) Reset()                    { *m = TagAliasQuery{} }
func (m *TagAliasQuery) String() string            { return proto.CompactTextString(m) }
func (*TagAliasQuery) ProtoMessage()               {}
func (*TagAliasQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

const Default_TagAliasQuery_ReqNo int64 = 0

func (m *TagAliasQuery) GetReqNo() int64 {
	if m != nil && m.ReqNo != nil {
		return *m.ReqNo
	}
	return Default_TagAliasQuery_ReqNo
}

func (m *TagAliasQuery) GetAppkey() []byte {
	if m != nil {
		return m.Appkey
	}
	return nil
}

func (m *TagAliasQuery) GetPlatform() tagalias_common.PLATFORM {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return tagalias_common.PLATFORM_ANDROID
}

func (m *TagAliasQuery) GetQuery() []*OpsUnit {
	if m != nil {
		return m.Query
	}
	return nil
}

// for remain result!
type TagAliasQueryII struct {
	ReqNo            *int64                        `protobuf:"varint,1,opt,name=reqNo" json:"reqNo,omitempty"`
	Total            *int32                        `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Page             *int32                        `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	Cmd              *tagalias_common.QUERY_ACTION `protobuf:"varint,4,opt,name=cmd,enum=QUERY_ACTION" json:"cmd,omitempty"`
	QueryK           []byte                        `protobuf:"bytes,5,opt,name=queryK" json:"queryK,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *TagAliasQueryII) Reset()                    { *m = TagAliasQueryII{} }
func (m *TagAliasQueryII) String() string            { return proto.CompactTextString(m) }
func (*TagAliasQueryII) ProtoMessage()               {}
func (*TagAliasQueryII) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TagAliasQueryII) GetReqNo() int64 {
	if m != nil && m.ReqNo != nil {
		return *m.ReqNo
	}
	return 0
}

func (m *TagAliasQueryII) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *TagAliasQueryII) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *TagAliasQueryII) GetCmd() tagalias_common.QUERY_ACTION {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return tagalias_common.QUERY_ACTION_GET_TAGS_BY_USER
}

func (m *TagAliasQueryII) GetQueryK() []byte {
	if m != nil {
		return m.QueryK
	}
	return nil
}

// result
// 响应：
type TagAlsResult struct {
	ReqType          *tagalias_common.QUERY_ACTION `protobuf:"varint,1,opt,name=req_type,enum=QUERY_ACTION" json:"req_type,omitempty"`
	Code             *tagalias_common.STATUS       `protobuf:"varint,2,opt,name=code,enum=STATUS,def=0" json:"code,omitempty"`
	Msg              []byte                        `protobuf:"bytes,3,opt,name=msg,def=SUCCESS" json:"msg,omitempty"`
	Total            *int32                        `protobuf:"varint,4,opt,name=total,def=1" json:"total,omitempty"`
	Cur              *int32                        `protobuf:"varint,5,opt,name=cur,def=1" json:"cur,omitempty"`
	Expired          *uint32                       `protobuf:"varint,6,opt,name=expired" json:"expired,omitempty"`
	QueryK           []byte                        `protobuf:"bytes,7,opt,name=queryK" json:"queryK,omitempty"`
	Uid              []int64                       `protobuf:"varint,8,rep,name=uid" json:"uid,omitempty"`
	Ouid             []int64                       `protobuf:"varint,9,rep,name=ouid" json:"ouid,omitempty"`
	UidCount         *int32                        `protobuf:"varint,10,opt,name=uid_count" json:"uid_count,omitempty"`
	Tags             [][]byte                      `protobuf:"bytes,11,rep,name=tags" json:"tags,omitempty"`
	Alias            [][]byte                      `protobuf:"bytes,12,rep,name=alias" json:"alias,omitempty"`
	DevType          *tagalias_common.DEVSUBTYPE   `protobuf:"varint,13,opt,name=dev_type,enum=DEVSUBTYPE,def=1" json:"dev_type,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *TagAlsResult) Reset()                    { *m = TagAlsResult{} }
func (m *TagAlsResult) String() string            { return proto.CompactTextString(m) }
func (*TagAlsResult) ProtoMessage()               {}
func (*TagAlsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_TagAlsResult_Code tagalias_common.STATUS = tagalias_common.STATUS_SUCCESS

var Default_TagAlsResult_Msg []byte = []byte("SUCCESS")

const Default_TagAlsResult_Total int32 = 1
const Default_TagAlsResult_Cur int32 = 1
const Default_TagAlsResult_DevType tagalias_common.DEVSUBTYPE = tagalias_common.DEVSUBTYPE_NORMAL_TYPE

func (m *TagAlsResult) GetReqType() tagalias_common.QUERY_ACTION {
	if m != nil && m.ReqType != nil {
		return *m.ReqType
	}
	return tagalias_common.QUERY_ACTION_GET_TAGS_BY_USER
}

func (m *TagAlsResult) GetCode() tagalias_common.STATUS {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_TagAlsResult_Code
}

func (m *TagAlsResult) GetMsg() []byte {
	if m != nil && m.Msg != nil {
		return m.Msg
	}
	return append([]byte(nil), Default_TagAlsResult_Msg...)
}

func (m *TagAlsResult) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return Default_TagAlsResult_Total
}

func (m *TagAlsResult) GetCur() int32 {
	if m != nil && m.Cur != nil {
		return *m.Cur
	}
	return Default_TagAlsResult_Cur
}

func (m *TagAlsResult) GetExpired() uint32 {
	if m != nil && m.Expired != nil {
		return *m.Expired
	}
	return 0
}

func (m *TagAlsResult) GetQueryK() []byte {
	if m != nil {
		return m.QueryK
	}
	return nil
}

func (m *TagAlsResult) GetUid() []int64 {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *TagAlsResult) GetOuid() []int64 {
	if m != nil {
		return m.Ouid
	}
	return nil
}

func (m *TagAlsResult) GetUidCount() int32 {
	if m != nil && m.UidCount != nil {
		return *m.UidCount
	}
	return 0
}

func (m *TagAlsResult) GetTags() [][]byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TagAlsResult) GetAlias() [][]byte {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *TagAlsResult) GetDevType() tagalias_common.DEVSUBTYPE {
	if m != nil && m.DevType != nil {
		return *m.DevType
	}
	return Default_TagAlsResult_DevType
}

type TagAlsResp struct {
	ReqNo            *int64                    `protobuf:"varint,1,opt,name=reqNo" json:"reqNo,omitempty"`
	Code             *int32                    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Appkey           []byte                    `protobuf:"bytes,3,opt,name=appkey" json:"appkey,omitempty"`
	Platform         *tagalias_common.PLATFORM `protobuf:"varint,4,opt,name=platform,enum=PLATFORM" json:"platform,omitempty"`
	Result           []*TagAlsResult           `protobuf:"bytes,5,rep,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *TagAlsResp) Reset()                    { *m = TagAlsResp{} }
func (m *TagAlsResp) String() string            { return proto.CompactTextString(m) }
func (*TagAlsResp) ProtoMessage()               {}
func (*TagAlsResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TagAlsResp) GetReqNo() int64 {
	if m != nil && m.ReqNo != nil {
		return *m.ReqNo
	}
	return 0
}

func (m *TagAlsResp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *TagAlsResp) GetAppkey() []byte {
	if m != nil {
		return m.Appkey
	}
	return nil
}

func (m *TagAlsResp) GetPlatform() tagalias_common.PLATFORM {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return tagalias_common.PLATFORM_ANDROID
}

func (m *TagAlsResp) GetResult() []*TagAlsResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*OpsUnit)(nil), "TagAliasBatchQuery.OpsUnit")
	proto.RegisterType((*TagAliasQuery)(nil), "TagAliasBatchQuery.TagAliasQuery")
	proto.RegisterType((*TagAliasQueryII)(nil), "TagAliasBatchQuery.TagAliasQueryII")
	proto.RegisterType((*TagAlsResult)(nil), "TagAliasBatchQuery.TagAlsResult")
	proto.RegisterType((*TagAlsResp)(nil), "TagAliasBatchQuery.TagAlsResp")
}

func init() { proto.RegisterFile("TagAliasBatchQuery/tagalias_query_interface.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x6e, 0xda, 0x40,
	0x18, 0x84, 0xe5, 0xac, 0x8d, 0xe1, 0xb7, 0x81, 0x74, 0xd5, 0xc3, 0x2a, 0x91, 0x5a, 0x0b, 0xa9,
	0x92, 0x95, 0x83, 0x93, 0x70, 0xe4, 0x46, 0x28, 0x95, 0x50, 0x13, 0x48, 0xb0, 0xa9, 0x94, 0x93,
	0xb5, 0xb2, 0x37, 0xd4, 0x0a, 0x60, 0x63, 0xaf, 0xab, 0xd2, 0x27, 0xe8, 0x5b, 0xf4, 0x01, 0xfa,
	0x92, 0x95, 0x7f, 0x70, 0xe2, 0x00, 0xea, 0x71, 0x2c, 0xfd, 0x9e, 0xd9, 0x6f, 0x06, 0xae, 0x3d,
	0x3e, 0xef, 0x2f, 0x22, 0x9e, 0xdd, 0x70, 0x19, 0x7c, 0x7f, 0xc8, 0x45, 0xba, 0xb9, 0x94, 0x7c,
	0xce, 0x8b, 0x4f, 0xfe, 0xba, 0x90, 0x7e, 0xb4, 0x92, 0x22, 0x7d, 0xe2, 0x81, 0x70, 0x92, 0x34,
	0x96, 0x31, 0xa5, 0x87, 0x27, 0x67, 0x9f, 0x5e, 0x6e, 0x82, 0x78, 0xb9, 0x8c, 0x57, 0x97, 0x7b,
	0x7a, 0x7b, 0xda, 0xf9, 0xab, 0x80, 0x3e, 0x49, 0xb2, 0xd9, 0x2a, 0x92, 0xf4, 0x0c, 0x48, 0xb0,
	0x0c, 0x99, 0x62, 0x29, 0x76, 0xab, 0xdb, 0x74, 0x1e, 0x66, 0xc3, 0xe9, 0xa3, 0xdf, 0x1f, 0x78,
	0xa3, 0xc9, 0x98, 0xb6, 0x41, 0x4d, 0xf8, 0x5c, 0xb0, 0x13, 0x4b, 0xb1, 0xb5, 0x9e, 0x72, 0x4d,
	0x0d, 0x20, 0x79, 0x14, 0x32, 0x62, 0x11, 0x9b, 0x50, 0x13, 0x54, 0xc9, 0xe7, 0x19, 0x53, 0x2d,
	0x62, 0x9b, 0xb4, 0x09, 0x1a, 0x3a, 0x31, 0x0d, 0x65, 0x0b, 0x6a, 0x18, 0xfb, 0x99, 0xd5, 0x2c,
	0xc5, 0x36, 0xe9, 0x05, 0xd4, 0x43, 0xf1, 0xc3, 0x97, 0x9b, 0x44, 0x30, 0x1d, 0xbd, 0x0c, 0xe7,
	0xf3, 0xf0, 0x9b, 0x3b, 0xbb, 0xf1, 0x1e, 0xef, 0x87, 0x3d, 0x63, 0x3c, 0x99, 0xde, 0xf5, 0x6f,
	0xfd, 0x42, 0x14, 0xbf, 0x92, 0xb1, 0xe4, 0x0b, 0x56, 0xb7, 0x88, 0xad, 0x75, 0x7e, 0x41, 0xb3,
	0x7c, 0x2a, 0xbe, 0x92, 0x9e, 0x82, 0x96, 0x8a, 0xf5, 0x38, 0xc6, 0xd0, 0xa4, 0xa7, 0x5c, 0x15,
	0x6e, 0x3c, 0x49, 0x9e, 0xc5, 0x06, 0xa3, 0x9a, 0xf4, 0x1c, 0xea, 0xc9, 0x82, 0xcb, 0xa7, 0x38,
	0x5d, 0x32, 0x82, 0x6e, 0x0d, 0xe7, 0xfe, 0xb6, 0xef, 0x7d, 0x99, 0x4c, 0xef, 0xe8, 0x05, 0x68,
	0x18, 0x0d, 0x83, 0x1b, 0xdd, 0x73, 0xe7, 0x10, 0xa4, 0xb3, 0xa3, 0xd3, 0x89, 0xa0, 0xfd, 0xc6,
	0x7b, 0x34, 0x2a, 0xd2, 0x55, 0xdc, 0x5f, 0xc3, 0x22, 0xa4, 0x02, 0x0a, 0x22, 0x23, 0xa8, 0x76,
	0x70, 0xd5, 0x63, 0x70, 0x4b, 0x42, 0x5f, 0x99, 0x56, 0x64, 0xee, 0xfc, 0x39, 0x01, 0x13, 0xbd,
	0xb2, 0xa9, 0xc8, 0xf2, 0x85, 0xa4, 0x1f, 0xa1, 0x9e, 0x8a, 0xf5, 0x16, 0xd9, 0xd1, 0x7a, 0x3e,
	0x80, 0x1a, 0xc4, 0xe1, 0xb6, 0x9e, 0x56, 0x57, 0x77, 0x5c, 0xaf, 0xef, 0xcd, 0xdc, 0x9e, 0xee,
	0xce, 0x06, 0x83, 0xa1, 0xeb, 0xd2, 0xf7, 0x40, 0x96, 0xd9, 0x1c, 0xa3, 0x98, 0xaf, 0x5f, 0x4f,
	0xcb, 0xc0, 0x6a, 0xd9, 0x6a, 0x0b, 0x48, 0x90, 0xa7, 0x18, 0x03, 0x75, 0x1b, 0x74, 0xf1, 0x33,
	0x89, 0x52, 0x11, 0x62, 0x79, 0xcd, 0x4a, 0x54, 0x1d, 0xf1, 0xee, 0x66, 0x50, 0x2f, 0x67, 0x10,
	0x17, 0xaa, 0x81, 0xea, 0x1d, 0x34, 0xf2, 0x28, 0xf4, 0x83, 0x38, 0x5f, 0x49, 0x06, 0x25, 0x12,
	0xdc, 0x89, 0xf1, 0x76, 0x27, 0x26, 0xca, 0xea, 0x2e, 0x9a, 0xff, 0xdf, 0x45, 0xe7, 0xb7, 0x02,
	0xf0, 0x42, 0x28, 0xd9, 0x2f, 0xc2, 0xac, 0xd0, 0xd0, 0x2a, 0x8b, 0x20, 0x07, 0x8b, 0x50, 0xf7,
	0x17, 0x71, 0x05, 0xb5, 0x14, 0x99, 0xe3, 0x78, 0x8d, 0xae, 0x75, 0x6c, 0x12, 0xd5, 0x6e, 0xfe,
	0x05, 0x00, 0x00, 0xff, 0xff, 0xef, 0x70, 0x4e, 0xc4, 0xb0, 0x03, 0x00, 0x00,
}
