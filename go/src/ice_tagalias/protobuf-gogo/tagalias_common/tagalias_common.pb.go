// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tagalias_common/tagalias_common.proto

/*
	Package tagalias_common is a generated protocol buffer package.

	It is generated from these files:
		tagalias_common/tagalias_common.proto

	It has these top-level messages:
		UserStuff
		MiBaseInfo
*/
package tagalias_common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ACTION int32

const (
	// tags operation
	ACTION_ADD_USER_TO_TAG   ACTION = 1
	ACTION_DEL_USER_FROM_TAG ACTION = 2
	ACTION_USER_SET_TAG      ACTION = 4
	ACTION_USER_CLEAR_TAG    ACTION = 8
	ACTION_DEL_TAGS_FROM_APP ACTION = 16
	// alias operation
	ACTION_USER_SET_ALIAS     ACTION = 32
	ACTION_USER_CLEAR_ALIAS   ACTION = 64
	ACTION_DEL_ALIAS_FROM_APP ACTION = 128
)

var ACTION_name = map[int32]string{
	1:   "ADD_USER_TO_TAG",
	2:   "DEL_USER_FROM_TAG",
	4:   "USER_SET_TAG",
	8:   "USER_CLEAR_TAG",
	16:  "DEL_TAGS_FROM_APP",
	32:  "USER_SET_ALIAS",
	64:  "USER_CLEAR_ALIAS",
	128: "DEL_ALIAS_FROM_APP",
}
var ACTION_value = map[string]int32{
	"ADD_USER_TO_TAG":    1,
	"DEL_USER_FROM_TAG":  2,
	"USER_SET_TAG":       4,
	"USER_CLEAR_TAG":     8,
	"DEL_TAGS_FROM_APP":  16,
	"USER_SET_ALIAS":     32,
	"USER_CLEAR_ALIAS":   64,
	"DEL_ALIAS_FROM_APP": 128,
}

func (x ACTION) Enum() *ACTION {
	p := new(ACTION)
	*p = x
	return p
}
func (x ACTION) String() string {
	return proto.EnumName(ACTION_name, int32(x))
}
func (x *ACTION) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ACTION_value, data, "ACTION")
	if err != nil {
		return err
	}
	*x = ACTION(value)
	return nil
}
func (ACTION) EnumDescriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{0} }

// / Though QUERY_ACTION is combined, support one type one time now!!!
type QUERY_ACTION int32

const (
	QUERY_ACTION_GET_TAGS_BY_USER         QUERY_ACTION = 1
	QUERY_ACTION_GET_ALIAS_BY_USER        QUERY_ACTION = 2
	QUERY_ACTION_GET_USERS_BY_TAG         QUERY_ACTION = 4
	QUERY_ACTION_GET_USERS_BY_ALIAS       QUERY_ACTION = 8
	QUERY_ACTION_GET_APPKEY_TAGS          QUERY_ACTION = 16
	QUERY_ACTION_CHECK_USER_BELONG_TAGS   QUERY_ACTION = 32
	QUERY_ACTION_CHECK_USER_BELONG_ALIAS  QUERY_ACTION = 64
	QUERY_ACTION_GET_USERS_COUNT_BY_TAGS  QUERY_ACTION = 128
	QUERY_ACTION_GET_USERS_COUNT_BY_ALIAS QUERY_ACTION = 256
	QUERY_ACTION_CHECK_TAGS_HAS_USERS     QUERY_ACTION = 512
	QUERY_ACTION_CHECK_ALIAS_HAS_USERS    QUERY_ACTION = 1024
	QUERY_ACTION_GET_TAGS_COUNT_BY_USER   QUERY_ACTION = 2048
)

var QUERY_ACTION_name = map[int32]string{
	1:    "GET_TAGS_BY_USER",
	2:    "GET_ALIAS_BY_USER",
	4:    "GET_USERS_BY_TAG",
	8:    "GET_USERS_BY_ALIAS",
	16:   "GET_APPKEY_TAGS",
	32:   "CHECK_USER_BELONG_TAGS",
	64:   "CHECK_USER_BELONG_ALIAS",
	128:  "GET_USERS_COUNT_BY_TAGS",
	256:  "GET_USERS_COUNT_BY_ALIAS",
	512:  "CHECK_TAGS_HAS_USERS",
	1024: "CHECK_ALIAS_HAS_USERS",
	2048: "GET_TAGS_COUNT_BY_USER",
}
var QUERY_ACTION_value = map[string]int32{
	"GET_TAGS_BY_USER":         1,
	"GET_ALIAS_BY_USER":        2,
	"GET_USERS_BY_TAG":         4,
	"GET_USERS_BY_ALIAS":       8,
	"GET_APPKEY_TAGS":          16,
	"CHECK_USER_BELONG_TAGS":   32,
	"CHECK_USER_BELONG_ALIAS":  64,
	"GET_USERS_COUNT_BY_TAGS":  128,
	"GET_USERS_COUNT_BY_ALIAS": 256,
	"CHECK_TAGS_HAS_USERS":     512,
	"CHECK_ALIAS_HAS_USERS":    1024,
	"GET_TAGS_COUNT_BY_USER":   2048,
}

func (x QUERY_ACTION) Enum() *QUERY_ACTION {
	p := new(QUERY_ACTION)
	*p = x
	return p
}
func (x QUERY_ACTION) String() string {
	return proto.EnumName(QUERY_ACTION_name, int32(x))
}
func (x *QUERY_ACTION) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QUERY_ACTION_value, data, "QUERY_ACTION")
	if err != nil {
		return err
	}
	*x = QUERY_ACTION(value)
	return nil
}
func (QUERY_ACTION) EnumDescriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{1} }

type PLATFORM int32

const (
	PLATFORM_ANDROID  PLATFORM = 0
	PLATFORM_IPHONE   PLATFORM = 1
	PLATFORM_WINPHONE PLATFORM = 2
)

var PLATFORM_name = map[int32]string{
	0: "ANDROID",
	1: "IPHONE",
	2: "WINPHONE",
}
var PLATFORM_value = map[string]int32{
	"ANDROID":  0,
	"IPHONE":   1,
	"WINPHONE": 2,
}

func (x PLATFORM) Enum() *PLATFORM {
	p := new(PLATFORM)
	*p = x
	return p
}
func (x PLATFORM) String() string {
	return proto.EnumName(PLATFORM_name, int32(x))
}
func (x *PLATFORM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PLATFORM_value, data, "PLATFORM")
	if err != nil {
		return err
	}
	*x = PLATFORM(value)
	return nil
}
func (PLATFORM) EnumDescriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{2} }

type SERVER_TYPE int32

const (
	SERVER_TYPE_INTERFACE_API SERVER_TYPE = 1
	SERVER_TYPE_DEVICE_API    SERVER_TYPE = 2
)

var SERVER_TYPE_name = map[int32]string{
	1: "INTERFACE_API",
	2: "DEVICE_API",
}
var SERVER_TYPE_value = map[string]int32{
	"INTERFACE_API": 1,
	"DEVICE_API":    2,
}

func (x SERVER_TYPE) Enum() *SERVER_TYPE {
	p := new(SERVER_TYPE)
	*p = x
	return p
}
func (x SERVER_TYPE) String() string {
	return proto.EnumName(SERVER_TYPE_name, int32(x))
}
func (x *SERVER_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SERVER_TYPE_value, data, "SERVER_TYPE")
	if err != nil {
		return err
	}
	*x = SERVER_TYPE(value)
	return nil
}
func (SERVER_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{3} }

// errcode defin
type STATUS int32

const (
	STATUS_SUCCESS               STATUS = 0
	STATUS_BAD_PROTO             STATUS = 1
	STATUS_NO_APPKEY             STATUS = 2
	STATUS_NO_PLATFORM           STATUS = 3
	STATUS_NO_QUERY_ACTION       STATUS = 4
	STATUS_SERIALIZE_RESP_FAILED STATUS = 5
	STATUS_SERVER_INTERNAL_ERROR STATUS = 6
	STATUS_EXCEED_TOTAL_PAGE     STATUS = 7
	STATUS_TOO_MANY_TAGS         STATUS = 8
	STATUS_TOO_MANY_ALIAS        STATUS = 9
	STATUS_NO_UID                STATUS = 10
	STATUS_NO_TAGS               STATUS = 11
	STATUS_NO_ALIAS              STATUS = 12
	STATUS_AUTHORITY_FAILED      STATUS = 13
	STATUS_INVALID_TAGS          STATUS = 14
	STATUS_INVALID_ALIAS         STATUS = 15
	STATUS_INVALID_PAGE          STATUS = 16
	STATUS_STATUS_REDISDOWN      STATUS = 64
	STATUS_TOO_MANY_QUERYS       STATUS = 65
	STATUS_QUERY_TOO_FREQUENCY   STATUS = 66
	STATUS_OTHER_API_ERR         STATUS = 67
	STATUS_STATUS_OTHER_ERR      STATUS = 128
)

var STATUS_name = map[int32]string{
	0:   "SUCCESS",
	1:   "BAD_PROTO",
	2:   "NO_APPKEY",
	3:   "NO_PLATFORM",
	4:   "NO_QUERY_ACTION",
	5:   "SERIALIZE_RESP_FAILED",
	6:   "SERVER_INTERNAL_ERROR",
	7:   "EXCEED_TOTAL_PAGE",
	8:   "TOO_MANY_TAGS",
	9:   "TOO_MANY_ALIAS",
	10:  "NO_UID",
	11:  "NO_TAGS",
	12:  "NO_ALIAS",
	13:  "AUTHORITY_FAILED",
	14:  "INVALID_TAGS",
	15:  "INVALID_ALIAS",
	16:  "INVALID_PAGE",
	64:  "STATUS_REDISDOWN",
	65:  "TOO_MANY_QUERYS",
	66:  "QUERY_TOO_FREQUENCY",
	67:  "OTHER_API_ERR",
	128: "STATUS_OTHER_ERR",
}
var STATUS_value = map[string]int32{
	"SUCCESS":               0,
	"BAD_PROTO":             1,
	"NO_APPKEY":             2,
	"NO_PLATFORM":           3,
	"NO_QUERY_ACTION":       4,
	"SERIALIZE_RESP_FAILED": 5,
	"SERVER_INTERNAL_ERROR": 6,
	"EXCEED_TOTAL_PAGE":     7,
	"TOO_MANY_TAGS":         8,
	"TOO_MANY_ALIAS":        9,
	"NO_UID":                10,
	"NO_TAGS":               11,
	"NO_ALIAS":              12,
	"AUTHORITY_FAILED":      13,
	"INVALID_TAGS":          14,
	"INVALID_ALIAS":         15,
	"INVALID_PAGE":          16,
	"STATUS_REDISDOWN":      64,
	"TOO_MANY_QUERYS":       65,
	"QUERY_TOO_FREQUENCY":   66,
	"OTHER_API_ERR":         67,
	"STATUS_OTHER_ERR":      128,
}

func (x STATUS) Enum() *STATUS {
	p := new(STATUS)
	*p = x
	return p
}
func (x STATUS) String() string {
	return proto.EnumName(STATUS_name, int32(x))
}
func (x *STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(STATUS_value, data, "STATUS")
	if err != nil {
		return err
	}
	*x = STATUS(value)
	return nil
}
func (STATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{4} }

// !兼容miPush huweiPush meizuPush新增字段
type DEVSUBTYPE int32

const (
	DEVSUBTYPE_NORMAL_TYPE DEVSUBTYPE = 1
	DEVSUBTYPE_XIAOMI_TYPE DEVSUBTYPE = 2
	DEVSUBTYPE_HUAWEI_TYPE DEVSUBTYPE = 4
	DEVSUBTYPE_MEIZU_TYPE  DEVSUBTYPE = 8
)

var DEVSUBTYPE_name = map[int32]string{
	1: "NORMAL_TYPE",
	2: "XIAOMI_TYPE",
	4: "HUAWEI_TYPE",
	8: "MEIZU_TYPE",
}
var DEVSUBTYPE_value = map[string]int32{
	"NORMAL_TYPE": 1,
	"XIAOMI_TYPE": 2,
	"HUAWEI_TYPE": 4,
	"MEIZU_TYPE":  8,
}

func (x DEVSUBTYPE) Enum() *DEVSUBTYPE {
	p := new(DEVSUBTYPE)
	*p = x
	return p
}
func (x DEVSUBTYPE) String() string {
	return proto.EnumName(DEVSUBTYPE_name, int32(x))
}
func (x *DEVSUBTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DEVSUBTYPE_value, data, "DEVSUBTYPE")
	if err != nil {
		return err
	}
	*x = DEVSUBTYPE(value)
	return nil
}
func (DEVSUBTYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{5} }

type UserStuff struct {
	Uid              *uint64     `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Type             *DEVSUBTYPE `protobuf:"varint,2,opt,name=type,enum=DEVSUBTYPE,def=1" json:"type,omitempty"`
	Token            []byte      `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UserStuff) Reset()                    { *m = UserStuff{} }
func (m *UserStuff) String() string            { return proto.CompactTextString(m) }
func (*UserStuff) ProtoMessage()               {}
func (*UserStuff) Descriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{0} }

const Default_UserStuff_Type DEVSUBTYPE = DEVSUBTYPE_NORMAL_TYPE

func (m *UserStuff) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *UserStuff) GetType() DEVSUBTYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_UserStuff_Type
}

func (m *UserStuff) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type MiBaseInfo struct {
	Appid            []byte `protobuf:"bytes,1,opt,name=appid" json:"appid,omitempty"`
	Appsecret        []byte `protobuf:"bytes,2,opt,name=appsecret" json:"appsecret,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MiBaseInfo) Reset()                    { *m = MiBaseInfo{} }
func (m *MiBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*MiBaseInfo) ProtoMessage()               {}
func (*MiBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptorTagaliasCommon, []int{1} }

func (m *MiBaseInfo) GetAppid() []byte {
	if m != nil {
		return m.Appid
	}
	return nil
}

func (m *MiBaseInfo) GetAppsecret() []byte {
	if m != nil {
		return m.Appsecret
	}
	return nil
}

func init() {
	proto.RegisterType((*UserStuff)(nil), "UserStuff")
	proto.RegisterType((*MiBaseInfo)(nil), "MiBaseInfo")
	proto.RegisterEnum("ACTION", ACTION_name, ACTION_value)
	proto.RegisterEnum("QUERY_ACTION", QUERY_ACTION_name, QUERY_ACTION_value)
	proto.RegisterEnum("PLATFORM", PLATFORM_name, PLATFORM_value)
	proto.RegisterEnum("SERVER_TYPE", SERVER_TYPE_name, SERVER_TYPE_value)
	proto.RegisterEnum("STATUS", STATUS_name, STATUS_value)
	proto.RegisterEnum("DEVSUBTYPE", DEVSUBTYPE_name, DEVSUBTYPE_value)
}
func (m *UserStuff) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserStuff) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintTagaliasCommon(dAtA, i, uint64(*m.Uid))
	}
	if m.Type != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintTagaliasCommon(dAtA, i, uint64(*m.Type))
	}
	if m.Token != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTagaliasCommon(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MiBaseInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MiBaseInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Appid != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintTagaliasCommon(dAtA, i, uint64(len(m.Appid)))
		i += copy(dAtA[i:], m.Appid)
	}
	if m.Appsecret != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTagaliasCommon(dAtA, i, uint64(len(m.Appsecret)))
		i += copy(dAtA[i:], m.Appsecret)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintTagaliasCommon(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *UserStuff) Size() (n int) {
	var l int
	_ = l
	if m.Uid != nil {
		n += 1 + sovTagaliasCommon(uint64(*m.Uid))
	}
	if m.Type != nil {
		n += 1 + sovTagaliasCommon(uint64(*m.Type))
	}
	if m.Token != nil {
		l = len(m.Token)
		n += 1 + l + sovTagaliasCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MiBaseInfo) Size() (n int) {
	var l int
	_ = l
	if m.Appid != nil {
		l = len(m.Appid)
		n += 1 + l + sovTagaliasCommon(uint64(l))
	}
	if m.Appsecret != nil {
		l = len(m.Appsecret)
		n += 1 + l + sovTagaliasCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovTagaliasCommon(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozTagaliasCommon(x uint64) (n int) {
	return sovTagaliasCommon(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UserStuff) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTagaliasCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserStuff: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserStuff: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTagaliasCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Uid = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v DEVSUBTYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTagaliasCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (DEVSUBTYPE(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTagaliasCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTagaliasCommon
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTagaliasCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTagaliasCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MiBaseInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTagaliasCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MiBaseInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MiBaseInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Appid", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTagaliasCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTagaliasCommon
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Appid = append(m.Appid[:0], dAtA[iNdEx:postIndex]...)
			if m.Appid == nil {
				m.Appid = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Appsecret", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTagaliasCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTagaliasCommon
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Appsecret = append(m.Appsecret[:0], dAtA[iNdEx:postIndex]...)
			if m.Appsecret == nil {
				m.Appsecret = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTagaliasCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTagaliasCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTagaliasCommon(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTagaliasCommon
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTagaliasCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTagaliasCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthTagaliasCommon
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTagaliasCommon
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTagaliasCommon(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTagaliasCommon = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTagaliasCommon   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("tagalias_common/tagalias_common.proto", fileDescriptorTagaliasCommon) }

var fileDescriptorTagaliasCommon = []byte{
	// 774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x54, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0x36, 0xd7, 0x8a, 0x23, 0x8d, 0x7e, 0x4c, 0x33, 0x96, 0xa5, 0x24, 0xad, 0x20, 0x04, 0x68,
	0x61, 0xe8, 0xe0, 0xfe, 0x1c, 0x7b, 0x0a, 0xb5, 0x4b, 0x49, 0x44, 0x56, 0xe4, 0x86, 0xe4, 0xca,
	0x51, 0x2e, 0x84, 0x90, 0xca, 0x85, 0xd1, 0xc6, 0x12, 0x2c, 0xe5, 0xd0, 0x9b, 0x1e, 0xa3, 0x6f,
	0xd1, 0x4b, 0x1f, 0x22, 0xc7, 0x3e, 0x42, 0xe1, 0xbe, 0x48, 0x41, 0x72, 0xb5, 0x51, 0xdb, 0x1c,
	0xe7, 0x9b, 0x99, 0x8f, 0xdf, 0x7c, 0x33, 0xbb, 0xf0, 0xd5, 0x76, 0xf1, 0xd3, 0xe2, 0x97, 0xdb,
	0xc5, 0xc6, 0xbe, 0x5b, 0xbd, 0x7f, 0xbf, 0xba, 0xfb, 0xe6, 0x3f, 0xf1, 0xd5, 0xfa, 0x7e, 0xb5,
	0x5d, 0xbd, 0x90, 0x50, 0xcb, 0x37, 0xcb, 0x7b, 0xbd, 0xfd, 0x70, 0x73, 0x43, 0xea, 0x70, 0xfc,
	0xe1, 0xf6, 0xc7, 0x2e, 0xea, 0xa3, 0xcb, 0x0a, 0xf9, 0x1a, 0x2a, 0xdb, 0x5f, 0xd7, 0xcb, 0x6e,
	0xd4, 0x47, 0x97, 0xad, 0xef, 0xeb, 0x57, 0x09, 0x9b, 0xe9, 0x7c, 0x68, 0xe6, 0x19, 0xfb, 0xa1,
	0x2e, 0xa4, 0x9a, 0xd2, 0xd4, 0xba, 0x80, 0x34, 0xe1, 0xd1, 0x76, 0xf5, 0xf3, 0xf2, 0xae, 0x7b,
	0xdc, 0x47, 0x97, 0x8d, 0x17, 0x57, 0x00, 0xd3, 0xdb, 0xe1, 0x62, 0xb3, 0xe4, 0x77, 0x37, 0x2b,
	0x97, 0x5c, 0xac, 0xd7, 0x05, 0x67, 0x83, 0x9c, 0x41, 0x6d, 0xb1, 0x5e, 0x6f, 0x96, 0xef, 0xee,
	0x97, 0x5b, 0x4f, 0xdc, 0x18, 0xfc, 0x81, 0xe0, 0x84, 0xc6, 0x86, 0x4b, 0x41, 0x9e, 0xc0, 0x29,
	0x4d, 0x12, 0x9b, 0x6b, 0xa6, 0xac, 0x91, 0xd6, 0xd0, 0x31, 0x46, 0xa4, 0x0d, 0x67, 0x09, 0x4b,
	0x03, 0x38, 0x52, 0x72, 0xea, 0xe1, 0x88, 0x60, 0x68, 0x78, 0x48, 0x33, 0xe3, 0x91, 0x0a, 0x21,
	0xd0, 0xf2, 0x48, 0x9c, 0x32, 0xaa, 0x3c, 0x56, 0xdd, 0x37, 0x1b, 0x3a, 0xd6, 0xa1, 0x99, 0x66,
	0x19, 0xc6, 0x65, 0xa9, 0x6b, 0xa6, 0x29, 0xa7, 0x1a, 0xf7, 0xc9, 0x39, 0xe0, 0x83, 0xf6, 0x80,
	0xbe, 0x24, 0x1d, 0x20, 0x8e, 0xc0, 0x87, 0x9f, 0x18, 0x76, 0x68, 0xf0, 0x31, 0x82, 0xc6, 0xeb,
	0x9c, 0xa9, 0xb9, 0x2d, 0xc4, 0x9f, 0x03, 0x1e, 0x07, 0x2d, 0xda, 0x0e, 0xe7, 0x5e, 0x6f, 0x50,
	0x3f, 0xde, 0x3f, 0x52, 0xc2, 0xd1, 0xbe, 0xd8, 0x45, 0x1e, 0x0e, 0x13, 0x5c, 0x00, 0xf9, 0x17,
	0x1a, 0x44, 0x54, 0x9d, 0x2f, 0x9e, 0x24, 0xcb, 0x5e, 0x31, 0x5f, 0xab, 0x31, 0x26, 0xcf, 0xe0,
	0x22, 0x9e, 0xb0, 0xf8, 0x55, 0x70, 0x66, 0xc8, 0x52, 0x29, 0xc6, 0x21, 0xd7, 0x27, 0xcf, 0xa1,
	0xf3, 0xff, 0xdc, 0x7e, 0xa4, 0x2f, 0xa0, 0xf3, 0xe9, 0x95, 0x58, 0xe6, 0xc2, 0x14, 0x0a, 0x34,
	0xde, 0x21, 0xf2, 0x25, 0x74, 0x3f, 0x93, 0x0d, 0xbd, 0xbb, 0x88, 0x3c, 0x85, 0xf3, 0xc0, 0xec,
	0xe7, 0x9c, 0x50, 0x1d, 0x2a, 0xf1, 0xae, 0x42, 0x9e, 0x41, 0x3b, 0xa4, 0xc2, 0xb0, 0x07, 0xb9,
	0x2a, 0x79, 0x0e, 0x17, 0xa5, 0x39, 0x25, 0xa9, 0xf7, 0x62, 0x87, 0x07, 0xdf, 0x41, 0x35, 0x4b,
	0xa9, 0x19, 0x49, 0x35, 0x25, 0x75, 0x78, 0x4c, 0x45, 0xa2, 0x24, 0x4f, 0xf0, 0x11, 0x01, 0x38,
	0xe1, 0xd9, 0x44, 0x0a, 0x86, 0x11, 0x69, 0x40, 0xf5, 0x9a, 0x8b, 0x10, 0x45, 0x83, 0x6f, 0xa1,
	0xae, 0x99, 0x9a, 0xb9, 0x3b, 0x71, 0x27, 0x78, 0x06, 0x4d, 0x2e, 0x0c, 0x53, 0x23, 0x1a, 0x33,
	0x4b, 0x33, 0x8e, 0x11, 0x69, 0x01, 0x24, 0x6c, 0xc6, 0x8b, 0x38, 0x1a, 0xfc, 0x7e, 0x0c, 0x27,
	0xda, 0x50, 0x93, 0x6b, 0xf7, 0x86, 0xce, 0xe3, 0x98, 0x69, 0x8d, 0x8f, 0x48, 0x13, 0x6a, 0x43,
	0x9a, 0xd8, 0x4c, 0x49, 0x23, 0x31, 0x72, 0xa1, 0x90, 0x85, 0xd3, 0x38, 0x22, 0xa7, 0x50, 0x17,
	0xd2, 0xee, 0xd5, 0xe1, 0x63, 0xb7, 0x0a, 0x21, 0xed, 0xe1, 0xe2, 0x71, 0x85, 0x3c, 0x85, 0xb6,
	0x66, 0x8a, 0xd3, 0x94, 0xbf, 0x65, 0x56, 0x31, 0x9d, 0xd9, 0x11, 0xe5, 0x29, 0x4b, 0xf0, 0xa3,
	0x22, 0xe5, 0x84, 0x7a, 0x81, 0x82, 0xa6, 0x96, 0x29, 0x25, 0x15, 0x3e, 0x71, 0xa7, 0xc1, 0xde,
	0xc4, 0x8c, 0x25, 0xd6, 0x48, 0x43, 0x53, 0x9b, 0xd1, 0x31, 0xc3, 0x8f, 0xdd, 0x2c, 0x46, 0x4a,
	0x3b, 0xa5, 0xa2, 0x58, 0x4a, 0xd5, 0x9d, 0x6b, 0x09, 0x85, 0x4d, 0xd4, 0x9c, 0x37, 0x42, 0xda,
	0x9c, 0x27, 0x18, 0xdc, 0x40, 0x42, 0x86, 0xe2, 0xba, 0x33, 0xca, 0x4d, 0xe0, 0xcb, 0x1a, 0xee,
	0xd0, 0x68, 0x6e, 0x26, 0x52, 0x71, 0x33, 0xdf, 0xab, 0x6a, 0xba, 0x8f, 0x87, 0x8b, 0x19, 0x4d,
	0x79, 0x12, 0xba, 0x5a, 0xc1, 0xc1, 0x80, 0x84, 0xd6, 0xd3, 0xc3, 0x22, 0x2f, 0x0d, 0x3b, 0xb2,
	0x60, 0xa1, 0x55, 0x2c, 0xe1, 0x3a, 0x91, 0xd7, 0x02, 0xbf, 0x74, 0x96, 0x94, 0xea, 0xbc, 0x31,
	0x1a, 0x53, 0xd2, 0x81, 0x27, 0xc1, 0x24, 0x97, 0x1a, 0x29, 0xf6, 0x3a, 0x67, 0x22, 0x9e, 0xe3,
	0xa1, 0x7b, 0x48, 0x9a, 0x09, 0x53, 0x6e, 0x2d, 0xce, 0x0a, 0x1c, 0x93, 0x76, 0x49, 0x1b, 0x32,
	0x0e, 0xdd, 0xa1, 0x81, 0xf4, 0x1b, 0x2c, 0x7e, 0x39, 0x61, 0x13, 0xe5, 0x4f, 0x07, 0x23, 0x07,
	0xbc, 0xe1, 0x54, 0x4e, 0x79, 0x00, 0xfc, 0xae, 0x26, 0x39, 0xbd, 0x66, 0x05, 0x50, 0x71, 0x27,
	0x30, 0x65, 0xfc, 0x6d, 0x1e, 0xe2, 0xea, 0x10, 0x7f, 0x7c, 0xe8, 0xa1, 0x3f, 0x1f, 0x7a, 0xe8,
	0xaf, 0x87, 0x1e, 0xfa, 0xed, 0xef, 0xde, 0xd1, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xa5,
	0xc5, 0x78, 0x24, 0x05, 0x00, 0x00,
}
