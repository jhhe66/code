!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
AccumulativeMarkup	.\comm\JsonFeildDef.h	/^const char* const AccumulativeMarkup		= "F2"; \/\/20日累计涨幅                  $/;"	v
AccumulativeMarkup	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AccumulativeMarkup;        \/\/20日累计涨幅，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
AccumulativeMarkupHY	.\comm\JsonFeildDef.h	/^const char* const AccumulativeMarkupHY		= "F3"; \/\/20日行业累计涨幅              $/;"	v
AccumulativeMarkupHY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AccumulativeMarkupHY;      \/\/20日行业累计涨幅，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
AccumulativeMarkupSHZS	.\comm\JsonFeildDef.h	/^const char* const AccumulativeMarkupSHZS	= "F4"; \/\/20日上证指数累计涨幅          $/;"	v
AccumulativeMarkupSHZS	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AccumulativeMarkupSHZS;    \/\/20日上证指数累计涨幅，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
AmountInRate	.\comm\JsonFeildDef.h	/^const char* const AmountInRate         = "A01"; \/\/净流入占成交额比                                                             $/;"	v
AmountInRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AmountInRate;\/\/净流入占成交额比$/;"	m	struct:JWStkFundFlowData	access:public
AmountOutRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AmountOutRate;\/\/净流出占成交额比$/;"	m	struct:JWStkFundFlowData	access:public
AppearDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AppearDate; \/\/出现日期（格式：Unix格式时间数值）$/;"	m	struct:JWKlineFormData	access:public
AreaAmountRate	.\comm\JsonFeildDef.h	/^const char* const AreaAmountRate       = "A02"; \/\/占区间总成交比例                                                    $/;"	v
AreaAmountRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaAmountRate;\/\/占区间总成交比例$/;"	m	struct:JWStkFundFlowData	access:public
AreaChangeRate	.\comm\JsonFeildDef.h	/^const char* const AreaChangeRate       = "A03"; \/\/区间换手率                                                          $/;"	v
AreaChangeRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaChangeRate;\/\/区间换手率 $/;"	m	struct:JWStkFundFlowData	access:public
AreaClose	.\comm\JsonFeildDef.h	/^const char* const AreaClose            = "A04"; \/\/区间收盘价                                                          $/;"	v
AreaClose	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaClose; \/\/区间收盘价$/;"	m	struct:JWStkFundFlowData	access:public
AreaDate	.\comm\JsonFeildDef.h	/^const char* const AreaDate             = "A05"; \/\/                                                                    $/;"	v
AreaDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaDate;$/;"	m	struct:JWStkFundFlowData	access:public
AreaDeltaPercent	.\comm\JsonFeildDef.h	/^const char* const AreaDeltaPercent     = "A06"; \/\/区间涨跌幅                                                          $/;"	v
AreaDeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaDeltaPercent;\/\/区间涨跌幅$/;"	m	struct:JWStkFundFlowData	access:public
Attention	.\comm\JsonFeildDef.h	/^const char* const Attention         = "M05"; \/\/机构关注度$/;"	v
Attention	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Attention;                        \/\/机构关注度，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
BigBuy	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int BigBuy;\/\/大单买* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
BigSell	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int BigSell;\/\/大单买* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
BindList	.\lib\libprotocol\include\jw_struct.h	/^    JWBindItemInfo BindList[JW_MAX_BIND_MOBILE_NUM];$/;"	m	struct:JWGetBindMobileInfoRsp	access:public
BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWBindItemInfo	access:public
BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWBindMobileInfoReq	access:public
BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWBindVerifyInfoReq	access:public
BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWGetBindMobileInfoReq	access:public
BreadthValue	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int BreadthValue;\/\/幅度值（ 幅度值=((现价-昨收)\/昨收)*100000 ），服务器 x100000 客户端\/100000$/;"	m	struct:JWRiseFallBreadthData	access:public
BriefMacketData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockBriefMacketData BriefMacketData[JW_MAX_STOCK_NUM];   \/\/股票简易行情数据结构$/;"	m	struct:JWBatchBriefMarketDataInfoRsp	access:public
BuyBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrder; \/\/买入大单 数\/金额$/;"	m	struct:JWDDEData	access:public
BuyBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrder; \/\/买入大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
BuyBigOrderAmount	.\comm\JsonFeildDef.h	/^const char* const BuyBigOrderAmount		= "B03"; \/\/	买入大单额$/;"	v
BuyBigOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrderAmount;\/\/买入大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyBigOrderVolume	.\comm\JsonFeildDef.h	/^const char* const BuyBigOrderVolume		= "B02"; \/\/	买入大单量$/;"	v
BuyBigOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrderVolume;\/\/买入大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyCount; \/\/买入成交笔数$/;"	m	struct:JWDDEData	access:public
BuyCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyCount; \/\/买入成交笔数，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
BuyInfo	.\lib\libprotocol\include\jw_struct.h	/^	JWBuyLevel BuyInfo[JW_MAX_STOCK_BUY_SELL_NUM];\/\/委买详情$/;"	m	struct:JWStockDetail	access:public
BuyLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrder; \/\/买入特大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
BuyLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrder;\/\/买入特大单 数\/金额$/;"	m	struct:JWDDEData	access:public
BuyLargeOrderAmount	.\comm\JsonFeildDef.h	/^const char* const BuyLargeOrderAmount	= "B15"; \/\/	买入特大单额$/;"	v
BuyLargeOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrderAmount;\/\/买入特大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyLargeOrderVolume	.\comm\JsonFeildDef.h	/^const char* const BuyLargeOrderVolume	= "B14"; \/\/	买入特大单量$/;"	v
BuyLargeOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrderVolume;\/\/买入特大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrder; \/\/买入中单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
BuyMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrder;\/\/买入中单 数\/金额$/;"	m	struct:JWDDEData	access:public
BuyMidOrderAmount	.\comm\JsonFeildDef.h	/^const char* const BuyMidOrderAmount		= "B11"; \/\/	买入中单额$/;"	v
BuyMidOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrderAmount;\/\/买入中单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyMidOrderVolume	.\comm\JsonFeildDef.h	/^const char* const BuyMidOrderVolume		= "B10"; \/\/	买入中单量$/;"	v
BuyMidOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrderVolume;\/\/买入中单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrder; \/\/买入小单 数\/金额$/;"	m	struct:JWDDEData	access:public
BuyMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrder; \/\/买入小单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
BuyMinOrderAmount	.\comm\JsonFeildDef.h	/^const char* const BuyMinOrderAmount		= "B07"; \/\/	买入小单额$/;"	v
BuyMinOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrderAmount;\/\/买入小单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyMinOrderVolume	.\comm\JsonFeildDef.h	/^const char* const BuyMinOrderVolume		= "B06"; \/\/	买入小单量$/;"	v
BuyMinOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrderVolume;\/\/买入小单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
BuyNum	.\comm\JsonFeildDef.h	/^const char* const BuyNum            = "M06"; \/\/买入数量  $/;"	v
BuyNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short BuyNum;                         \/\/买入数量$/;"	m	struct:JWFundOrganizationViewData	access:public
CFinanceAnysHandler	.\inc\FinanceAnysHandler.h	/^	CFinanceAnysHandler() {}$/;"	f	class:Handler::CFinanceAnysHandler	access:public	signature:()
CFinanceAnysHandler	.\inc\FinanceAnysHandler.h	/^class CFinanceAnysHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CFundAluHandler	.\inc\FundAluHandler.h	/^    CFundAluHandler() {}$/;"	f	class:Handler::CFundAluHandler	access:public	signature:()
CFundAluHandler	.\inc\FundAluHandler.h	/^class CFundAluHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CFundDtlHandler	.\inc\FundDtlHandler.h	/^    CFundDtlHandler() {}$/;"	f	class:Handler::CFundDtlHandler	access:public	signature:()
CFundDtlHandler	.\inc\FundDtlHandler.h	/^class CFundDtlHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CFundFinanceHandler	.\inc\FundFinanceHandler.h	/^    CFundFinanceHandler() {}$/;"	f	class:Handler::CFundFinanceHandler	access:public	signature:()
CFundFinanceHandler	.\inc\FundFinanceHandler.h	/^class CFundFinanceHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CFundHandler	.\funds\inc\FundHandler.h	/^    CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
CFundHandler	.\funds\inc\FundHandler.h	/^class CFundHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CFundHandler	.\inc\FundHandler.h	/^    CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
CFundHandler	.\inc\FundHandler.h	/^class CFundHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CFundInduHandler	.\inc\FundInduHandler.h	/^    CFundInduHandler() {}$/;"	f	class:Handler::CFundInduHandler	access:public	signature:()
CFundInduHandler	.\inc\FundInduHandler.h	/^class CFundInduHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CHandlerBase	.\comm\HandlerBase.cc	/^CHandlerBase::CHandlerBase()$/;"	f	class:Handler::CHandlerBase	signature:()
CHandlerBase	.\comm\HandlerBase.h	/^    CHandlerBase();$/;"	p	class:Handler::CHandlerBase	access:public	signature:()
CHandlerBase	.\comm\HandlerBase.h	/^class CHandlerBase$/;"	c	namespace:Handler
CHandlerBase	.\inc\HandlerFactory.h	/^class CHandlerBase;$/;"	x
CHandlerFactory	.\inc\HandlerFactory.h	/^    CHandlerFactory();$/;"	p	class:Handler::CHandlerFactory	access:public	signature:()
CHandlerFactory	.\inc\HandlerFactory.h	/^class CHandlerFactory$/;"	c	namespace:Handler
CHandlerFactory	.\src\HandlerFactory.cc	/^CHandlerFactory::CHandlerFactory() $/;"	f	class:Handler::CHandlerFactory	signature:()
CMemcachedHandler	.\comm\HandlerBase.h	/^class CMemcachedHandler;$/;"	x
CMemcachedHandler	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::CMemcachedHandler(const string & host)$/;"	f	class:Handler::CMemcachedHandler	signature:(const string & host)
CMemcachedHandler	.\comm\MemcachedHandler.h	/^	CMemcachedHandler(const string& host);$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:(const string& host)
CMemcachedHandler	.\comm\MemcachedHandler.h	/^class CMemcachedHandler $/;"	c	namespace:Handler
CODE_KEY_MAP	.\comm\ShmMap.h	/^typedef map<string, MapItem*> CODE_KEY_MAP;$/;"	t
CShmMap	.\comm\HandlerBase.h	/^class CShmMap;$/;"	x
CShmMap	.\comm\ShmMap.h	/^	CShmMap(unsigned int key)$/;"	f	class:CShmMap	access:public	signature:(unsigned int key)
CShmMap	.\comm\ShmMap.h	/^class CShmMap$/;"	c
CShmMap::CShmMap	.\comm\ShmMap.h	/^	CShmMap(unsigned int key)$/;"	f	class:CShmMap	access:public	signature:(unsigned int key)
CShmMap::Clear	.\comm\ShmMap.cc	/^CShmMap::Clear()$/;"	f	class:CShmMap	signature:()
CShmMap::Clear	.\comm\ShmMap.h	/^	void Clear();$/;"	p	class:CShmMap	access:public	signature:()
CShmMap::Code_Map_Size	.\comm\ShmMap.h	/^	unsigned short Code_Map_Size() const {return code_key_list_.size();}$/;"	f	class:CShmMap	access:public	signature:() const
CShmMap::FindCodeByIndex	.\comm\ShmMap.cc	/^CShmMap::FindCodeByIndex(unsigned short index)$/;"	f	class:CShmMap	signature:(unsigned short index)
CShmMap::FindCodeByIndex	.\comm\ShmMap.h	/^	string FindCodeByIndex(unsigned short index);$/;"	p	class:CShmMap	access:private	signature:(unsigned short index)
CShmMap::FindIndexByCode	.\comm\ShmMap.cc	/^CShmMap::FindIndexByCode(const string& code)$/;"	f	class:CShmMap	signature:(const string& code)
CShmMap::FindIndexByCode	.\comm\ShmMap.h	/^	unsigned short FindIndexByCode(const string& code);$/;"	p	class:CShmMap	access:private	signature:(const string& code)
CShmMap::GetCodeByIdx	.\comm\ShmMap.cc	/^CShmMap::GetCodeByIdx(unsigned short index)$/;"	f	class:CShmMap	signature:(unsigned short index)
CShmMap::GetCodeByIdx	.\comm\ShmMap.h	/^	string GetCodeByIdx(unsigned short index);$/;"	p	class:CShmMap	access:public	signature:(unsigned short index)
CShmMap::GetCodeByOffset	.\comm\ShmMap.cc	/^CShmMap::GetCodeByOffset(unsigned short offset)$/;"	f	class:CShmMap	signature:(unsigned short offset)
CShmMap::GetCodeByOffset	.\comm\ShmMap.h	/^	string GetCodeByOffset(unsigned short offset);$/;"	p	class:CShmMap	access:public	signature:(unsigned short offset)
CShmMap::GetIndexByCode	.\comm\ShmMap.cc	/^CShmMap::GetIndexByCode(const string & code)$/;"	f	class:CShmMap	signature:(const string & code)
CShmMap::GetIndexByCode	.\comm\ShmMap.h	/^	unsigned short GetIndexByCode(const string& code);$/;"	p	class:CShmMap	access:public	signature:(const string& code)
CShmMap::GetIndexByOffset	.\comm\ShmMap.cc	/^CShmMap::GetIndexByOffset(unsigned short offset)$/;"	f	class:CShmMap	signature:(unsigned short offset)
CShmMap::GetIndexByOffset	.\comm\ShmMap.h	/^	unsigned short GetIndexByOffset(unsigned short offset);$/;"	p	class:CShmMap	access:public	signature:(unsigned short offset)
CShmMap::Index_Map_Size	.\comm\ShmMap.h	/^	unsigned short Index_Map_Size() const {return index_key_list_.size();}$/;"	f	class:CShmMap	access:public	signature:() const
CShmMap::Insert	.\comm\ShmMap.cc	/^CShmMap::Insert(unsigned short index,const string & code)$/;"	f	class:CShmMap	signature:(unsigned short index,const string & code)
CShmMap::Insert	.\comm\ShmMap.h	/^	void Insert(unsigned short index, const string& code);$/;"	p	class:CShmMap	access:public	signature:(unsigned short index, const string& code)
CShmMap::Restore	.\comm\ShmMap.cc	/^CShmMap::Restore()$/;"	f	class:CShmMap	signature:()
CShmMap::Restore	.\comm\ShmMap.h	/^	int Restore();$/;"	p	class:CShmMap	access:public	signature:()
CShmMap::code_key_list_	.\comm\ShmMap.h	/^	CODE_KEY_MAP code_key_list_;$/;"	m	class:CShmMap	access:private
CShmMap::index_key_list_	.\comm\ShmMap.h	/^	INDEX_KEY_MAP index_key_list_;$/;"	m	class:CShmMap	access:private
CShmMap::init	.\comm\ShmMap.cc	/^CShmMap::init()$/;"	f	class:CShmMap	signature:()
CShmMap::init	.\comm\ShmMap.h	/^	int init();$/;"	p	class:CShmMap	access:public	signature:()
CShmMap::key_	.\comm\ShmMap.h	/^	unsigned int key_;$/;"	m	class:CShmMap	access:private
CShmMap::offset_	.\comm\ShmMap.h	/^	unsigned int offset_;$/;"	m	class:CShmMap	access:private
CShmMap::shm_head_	.\comm\ShmMap.h	/^	MapItem* shm_head_;$/;"	m	class:CShmMap	access:private
CShmMap::shm_id_	.\comm\ShmMap.h	/^	int shm_id_;$/;"	m	class:CShmMap	access:private
CShmMap::size	.\comm\ShmMap.h	/^	unsigned short size() const { return offset_; }$/;"	f	class:CShmMap	access:public	signature:() const
CShmMap::~CShmMap	.\comm\ShmMap.h	/^	~CShmMap() {}$/;"	f	class:CShmMap	access:public	signature:()
CTcpClient	.\comm\HandlerBase.h	/^class CTcpClient;$/;"	x
CTcpClient	.\comm\TcpClient.cc	/^CTcpClient::CTcpClient(string host, unsigned short port)$/;"	f	class:CTcpClient	signature:(string host, unsigned short port)
CTcpClient	.\comm\TcpClient.h	/^    CTcpClient(string host, unsigned short port);$/;"	p	class:CTcpClient	access:public	signature:(string host, unsigned short port)
CTcpClient	.\comm\TcpClient.h	/^class CTcpClient$/;"	c
CTcpClient::CTcpClient	.\comm\TcpClient.cc	/^CTcpClient::CTcpClient(string host, unsigned short port)$/;"	f	class:CTcpClient	signature:(string host, unsigned short port)
CTcpClient::CTcpClient	.\comm\TcpClient.h	/^    CTcpClient(string host, unsigned short port);$/;"	p	class:CTcpClient	access:public	signature:(string host, unsigned short port)
CTcpClient::Close	.\comm\TcpClient.cc	/^CTcpClient::Close()$/;"	f	class:CTcpClient	signature:()
CTcpClient::Close	.\comm\TcpClient.h	/^    int Close();$/;"	p	class:CTcpClient	access:private	signature:()
CTcpClient::Connect	.\comm\TcpClient.cc	/^CTcpClient::Connect()$/;"	f	class:CTcpClient	signature:()
CTcpClient::Connect	.\comm\TcpClient.h	/^    int Connect();$/;"	p	class:CTcpClient	access:public	signature:()
CTcpClient::Disconneced	.\comm\TcpClient.h	/^    int Disconneced();$/;"	p	class:CTcpClient	access:public	signature:()
CTcpClient::IsConnected	.\comm\TcpClient.h	/^    bool IsConnected;$/;"	m	class:CTcpClient	access:private
CTcpClient::Recv	.\comm\TcpClient.cc	/^CTcpClient::Recv(char* buffer, int size)$/;"	f	class:CTcpClient	signature:(char* buffer, int size)
CTcpClient::Recv	.\comm\TcpClient.h	/^    int Recv(char* buffer, int size);$/;"	p	class:CTcpClient	access:public	signature:(char* buffer, int size)
CTcpClient::Send	.\comm\TcpClient.cc	/^CTcpClient::Send(const char* buffer, int size)$/;"	f	class:CTcpClient	signature:(const char* buffer, int size)
CTcpClient::Send	.\comm\TcpClient.h	/^    int Send(const char* buffer, int size);$/;"	p	class:CTcpClient	access:public	signature:(const char* buffer, int size)
CTcpClient::SetRecvBuffSize	.\comm\TcpClient.cc	/^CTcpClient::SetRecvBuffSize(unsigned int size)$/;"	f	class:CTcpClient	signature:(unsigned int size)
CTcpClient::SetRecvBuffSize	.\comm\TcpClient.h	/^	int SetRecvBuffSize(unsigned int size);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int size)
CTcpClient::SetRecvTimeout	.\comm\TcpClient.cc	/^CTcpClient::SetRecvTimeout(unsigned int sec)$/;"	f	class:CTcpClient	signature:(unsigned int sec)
CTcpClient::SetRecvTimeout	.\comm\TcpClient.h	/^	int SetRecvTimeout(unsigned int sec);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int sec)
CTcpClient::SetSendBuffSize	.\comm\TcpClient.cc	/^CTcpClient::SetSendBuffSize(unsigned int size)$/;"	f	class:CTcpClient	signature:(unsigned int size)
CTcpClient::SetSendBuffSize	.\comm\TcpClient.h	/^	int SetSendBuffSize(unsigned int size);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int size)
CTcpClient::SetSendTimeout	.\comm\TcpClient.cc	/^CTcpClient::SetSendTimeout(unsigned int sec)$/;"	f	class:CTcpClient	signature:(unsigned int sec)
CTcpClient::SetSendTimeout	.\comm\TcpClient.h	/^	int SetSendTimeout(unsigned int sec);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int sec)
CTcpClient::Socket	.\comm\TcpClient.cc	/^CTcpClient::Socket()$/;"	f	class:CTcpClient	signature:()
CTcpClient::Socket	.\comm\TcpClient.h	/^	 int Socket();$/;"	p	class:CTcpClient	access:private	signature:()
CTcpClient::host_	.\comm\TcpClient.h	/^    string	host_;$/;"	m	class:CTcpClient	access:private
CTcpClient::port_	.\comm\TcpClient.h	/^    unsigned short port_;$/;"	m	class:CTcpClient	access:private
CTcpClient::socketfd_	.\comm\TcpClient.h	/^    int	socketfd_;$/;"	m	class:CTcpClient	access:private
CTcpClient::~CTcpClient	.\comm\TcpClient.cc	/^CTcpClient::~CTcpClient()$/;"	f	class:CTcpClient	signature:()
CTcpClient::~CTcpClient	.\comm\TcpClient.h	/^    ~CTcpClient();$/;"	p	class:CTcpClient	access:public	signature:()
CTrendAnysHandler	.\inc\TrendAnysHandler.h	/^    CTrendAnysHandler() {}$/;"	f	class:Handler::CTrendAnysHandler	access:public	signature:()
CTrendAnysHandler	.\inc\TrendAnysHandler.h	/^class CTrendAnysHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CTrendMarketHandler	.\inc\TrendMarketHandler.h	/^    CTrendMarketHandler() {}$/;"	f	class:Handler::CTrendMarketHandler	access:public	signature:()
CTrendMarketHandler	.\inc\TrendMarketHandler.h	/^class CTrendMarketHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
CalculateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int CalculateDate; \/\/计算日期$/;"	m	struct:JWKlineFormData	access:public
CalculateDateNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short CalculateDateNum;\/\/计算天数$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
ChangeRate	.\comm\JsonFeildDef.h	/^const char* const ChangeRate           = "A07"; \/\/换手率                                                              $/;"	v
ChangeRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ChangeRate; \/\/行业换手率$/;"	m	struct:JWIndustryFundFlowData	access:public
ChangeRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ChangeRate;\/\/换手率$/;"	m	struct:JWStkFundFlowData	access:public
ChipsNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ChipsNumber; \/\/筹码数$/;"	m	struct:JWRegionDetailData	access:public
Clear	.\comm\ShmMap.cc	/^CShmMap::Clear()$/;"	f	class:CShmMap	signature:()
Clear	.\comm\ShmMap.h	/^	void Clear();$/;"	p	class:CShmMap	access:public	signature:()
Close	.\comm\TcpClient.cc	/^CTcpClient::Close()$/;"	f	class:CTcpClient	signature:()
Close	.\comm\TcpClient.h	/^    int Close();$/;"	p	class:CTcpClient	access:private	signature:()
ClosePrice	.\comm\JsonFeildDef.h	/^const char* const ClosePrice	= "E3"; \/\/收盘价                        $/;"	v
ClosePrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ClosePrice; \/\/收盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFinancialMainCostContentData	access:public
Code	.\comm\JsonFeildDef.h	/^const char* const Code                 = "A30"; \/\/股票代码     $/;"	v
Code_Map_Size	.\comm\ShmMap.h	/^	unsigned short Code_Map_Size() const {return code_key_list_.size();}$/;"	f	class:CShmMap	access:public	signature:() const
Connect	.\comm\TcpClient.cc	/^CTcpClient::Connect()$/;"	f	class:CTcpClient	signature:()
Connect	.\comm\TcpClient.h	/^    int Connect();$/;"	p	class:CTcpClient	access:public	signature:()
Content	.\lib\libprotocol\include\jw_struct.h	/^    char Content[JW_MAX_DIAGNOSE_CONTENT_LEN]; \/\/诊断内容（utf-8编码）$/;"	m	struct:JWDiagnoseDataRsp	access:public
CreateHandler	.\inc\HandlerFactory.h	/^    CHandlerBase* CreateHandler(unsigned short handlerID);$/;"	p	class:Handler::CHandlerFactory	access:public	signature:(unsigned short handlerID)
CreateHandler	.\src\HandlerFactory.cc	/^CHandlerFactory::CreateHandler(unsigned short handlerID)$/;"	f	class:Handler::CHandlerFactory	signature:(unsigned short handlerID)
DDEData	.\lib\libprotocol\include\jw_struct.h	/^    JWDDEData DDEData[JW_MAX_STOCK_NUM];\/\/DDE数据结构数组$/;"	m	struct:JWDDEDataRsp	access:public
DDEDataNums	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DDEDataNums; \/\/DDE数据个数$/;"	m	struct:JWDDEDataRsp	access:public
DDEHisData	.\lib\libprotocol\include\jw_struct.h	/^    JWDDEHisData DDEHisData[JW_MAX_DDE_HIS_NUM];\/\/历史DDE数据数组$/;"	m	struct:JWDDEHisDataRsp	access:public
DDX	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDX;\/\/DDX * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
DDX60	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDX60;\/\/60日DDX * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
DDY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDY;\/\/DDY * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
DDY60	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDY60;\/\/60日DDY * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
DDZ	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDZ;\/\/DDZ * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
Data	.\comm\JsonFeildDef.h	/^const char* const Data                 = "A97"; \/\/内容数组字段$/;"	v
Date	.\comm\JsonFeildDef.h	/^const char* const Date					= "B01"; \/\/	日期（格式：Unix格式时间数值）$/;"	v
Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date; \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWDDEData	access:public
Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date; \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWDDEHisData	access:public
Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date;\/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWMultiEmptyGameData	access:public
Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date;\/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWStkFundFlowDetailData	access:public
DayCount	.\comm\JsonFeildDef.h	/^const char* const DayCount             = "A08"; \/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)                      $/;"	v
DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount; \/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWIndustryFundFlowInfo	access:public
DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount; \/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWStkFundFlowData	access:public
DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount; \/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWStkFundFlowInfo	access:public
DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount;\/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
DdsortData	.\lib\libprotocol\include\jw_struct.h	/^    JWDdsortData DdsortData[JW_MAX_STOCK_NUM];\/\/个股DDSort数据结构数组$/;"	m	struct:JWDDSortDataRsp	access:public
DealCountAmount	.\comm\JsonFeildDef.h	/^const char* const DealCountAmount		= "B19"; \/\/	成交额$/;"	v
DealCountAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t DealCountAmount;\/\/成交额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
DealCountVolume	.\comm\JsonFeildDef.h	/^const char* const DealCountVolume		= "B18"; \/\/	成交笔数量$/;"	v
DealCountVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t DealCountVolume;\/\/成交笔数量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
DealPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DealPx;  \/\/成交价$/;"	m	struct:JWRegionDetailData	access:public
DeltaPercent	.\comm\JsonFeildDef.h	/^const char* const DeltaPercent         = "A09"; \/\/涨跌幅                                                              $/;"	v
DeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DeltaPercent; \/\/涨跌幅$/;"	m	struct:JWStkFundFlowData	access:public
DeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DeltaPercent;\/\/涨跌幅 * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
DeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DeltaPercent;\/\/涨跌幅$/;"	m	struct:JWIndustryFundFlowData	access:public
DetailData	.\lib\libprotocol\include\jw_struct.h	/^    JWRegionDetailData DetailData[1024]; \/\/明细数组$/;"	m	struct:JWCostDistributionDetailRsp	access:public
DetailNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DetailNumber; \/\/明细个数$/;"	m	struct:JWCostDistributionDetailRsp	access:public
Disconneced	.\comm\TcpClient.h	/^    int Disconneced();$/;"	p	class:CTcpClient	access:public	signature:()
DisperseHold	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t DisperseHold; \/\/散户持仓$/;"	m	struct:JWDDEData	access:public
DownCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DownCount; \/\/下跌家数$/;"	m	struct:JWIndustryFundFlowData	access:public
FinancialMainCostContentData	.\lib\libprotocol\include\jw_struct.h	/^    JWFinancialMainCostContentData FinancialMainCostContentData[JW_MAX_MAIN_COST_CONTENT_NUM];\/\/内容的数组$/;"	m	struct:JWFinancialMainCostData	access:public
FinancialMainCostData	.\lib\libprotocol\include\jw_struct.h	/^    JWFinancialMainCostData FinancialMainCostData[JW_MAX_STOCK_NUM];\/\/个股主力分析-主力成本数据数组$/;"	m	struct:JWFinancialMainCostRsp	access:public
FindCodeByIndex	.\comm\ShmMap.cc	/^CShmMap::FindCodeByIndex(unsigned short index)$/;"	f	class:CShmMap	signature:(unsigned short index)
FindCodeByIndex	.\comm\ShmMap.h	/^	string FindCodeByIndex(unsigned short index);$/;"	p	class:CShmMap	access:private	signature:(unsigned short index)
FindIndexByCode	.\comm\ShmMap.cc	/^CShmMap::FindIndexByCode(const string& code)$/;"	f	class:CShmMap	signature:(const string& code)
FindIndexByCode	.\comm\ShmMap.h	/^	unsigned short FindIndexByCode(const string& code);$/;"	p	class:CShmMap	access:private	signature:(const string& code)
FiveDays	.\funds\inc\FundHandler.h	/^		FiveDays,$/;"	e	enum:Handler::CFundHandler::FundType
FiveDays	.\inc\FundHandler.h	/^		FiveDays,$/;"	e	enum:Handler::CFundHandler::FundType
FormTurnover	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int FormTurnover;\/\/形态换手率，服务器*1000，客户端\/1000还原$/;"	m	struct:JWKlineFormData	access:public
FundAluationRserchData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAluationReserchData FundAluationRserchData[JW_MAX_STOCK_NUM];  \/\/估值研究数据数组$/;"	m	struct:JWFundAluationReserchRsp	access:public
FundAmentalsAnalysisData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAmentalsAnalysisData FundAmentalsAnalysisData[JW_MAX_STOCK_NUM];\/\/财务分析数据数组$/;"	m	struct:JWFundAmentalsAnalysisRsp	access:public
FundAmentalsTargetsContentData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAmentalsTargetsContentData FundAmentalsTargetsContentData[JW_MAX_TARGETS_CONTENT_NUM];  \/\/内容数组$/;"	m	struct:JWFundAmentalsTargetsData	access:public
FundAmentalsTargetsData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAmentalsTargetsData FundAmentalsTargetsData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWFundAmentalsTargetsRsp	access:public
FundIndustryRanksData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundIndustryRanksData FundIndustryRanksData[JW_MAX_STOCK_NUM];\/\/行业排名数据数组$/;"	m	struct:JWFundIndustryRanksRsp	access:public
FundOrganizationViewData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundOrganizationViewData FundOrganizationViewData[JW_MAX_STOCK_NUM]; \/\/机构观点数据数组$/;"	m	struct:JWFundOrganizationViewRsp	access:public
FundType	.\funds\inc\FundHandler.h	/^    enum FundType$/;"	g	class:Handler::CFundHandler	access:public
FundType	.\inc\FundHandler.h	/^    enum FundType$/;"	g	class:Handler::CFundHandler	access:public
Get	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::Get(string& key)$/;"	f	class:Handler::CMemcachedHandler	signature:(string& key)
Get	.\comm\MemcachedHandler.h	/^	string Get(string& key);$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:(string& key)
GetCodeByIdx	.\comm\ShmMap.cc	/^CShmMap::GetCodeByIdx(unsigned short index)$/;"	f	class:CShmMap	signature:(unsigned short index)
GetCodeByIdx	.\comm\ShmMap.h	/^	string GetCodeByIdx(unsigned short index);$/;"	p	class:CShmMap	access:public	signature:(unsigned short index)
GetCodeByOffset	.\comm\ShmMap.cc	/^CShmMap::GetCodeByOffset(unsigned short offset)$/;"	f	class:CShmMap	signature:(unsigned short offset)
GetCodeByOffset	.\comm\ShmMap.h	/^	string GetCodeByOffset(unsigned short offset);$/;"	p	class:CShmMap	access:public	signature:(unsigned short offset)
GetIndexByCode	.\comm\ShmMap.cc	/^CShmMap::GetIndexByCode(const string & code)$/;"	f	class:CShmMap	signature:(const string & code)
GetIndexByCode	.\comm\ShmMap.h	/^	unsigned short GetIndexByCode(const string& code);$/;"	p	class:CShmMap	access:public	signature:(const string& code)
GetIndexByOffset	.\comm\ShmMap.cc	/^CShmMap::GetIndexByOffset(unsigned short offset)$/;"	f	class:CShmMap	signature:(unsigned short offset)
GetIndexByOffset	.\comm\ShmMap.h	/^	unsigned short GetIndexByOffset(unsigned short offset);$/;"	p	class:CShmMap	access:public	signature:(unsigned short offset)
Glossary	.\comm\JsonFeildDef.h	/^const char* const Glossary                  = "D6"; \/\/分析术语(MACD技术指标)（utf-8编码）$/;"	v
Glossary	.\lib\libprotocol\include\jw_struct.h	/^    char Glossary[JW_MAX_GLOSSARY_LEN]; \/\/分析术语(MACD技术指标)（utf-8编码）$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
HOST	.\comm\ServerDef.h	/^const char HOST[] = {"183.62.104.80"};$/;"	v
Handler	.\comm\HandlerBase.cc	/^namespace Handler$/;"	n	file:
Handler	.\comm\HandlerBase.h	/^namespace Handler$/;"	n
Handler	.\comm\MemcachedHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\comm\MemcachedHandler.h	/^namespace Handler$/;"	n
Handler	.\funds\inc\FundHandler.h	/^namespace Handler$/;"	n
Handler	.\funds\src\FundHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\inc\FinanceAnysHandler.h	/^namespace Handler$/;"	n
Handler	.\inc\FundAluHandler.h	/^namespace Handler$/;"	n
Handler	.\inc\FundDtlHandler.h	/^namespace Handler$/;"	n
Handler	.\inc\FundFinanceHandler.h	/^namespace Handler$/;"	n
Handler	.\inc\FundHandler.h	/^namespace Handler$/;"	n
Handler	.\inc\FundInduHandler.h	/^namespace Handler$/;"	n
Handler	.\inc\HandlerFactory.h	/^namespace Handler$/;"	n
Handler	.\inc\TrendAnysHandler.h	/^namespace Handler$/;"	n
Handler	.\inc\TrendMarketHandler.h	/^namespace Handler$/;"	n
Handler	.\src\FinanceAnysHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\FundAluHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\FundDtlHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\FundFinanceHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\FundHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\FundInduHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\HandlerFactory.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\TrendAnysHandler.cc	/^namespace Handler$/;"	n	file:
Handler	.\src\TrendMarketHandler.cc	/^namespace Handler$/;"	n	file:
Handler::CFinanceAnysHandler	.\inc\FinanceAnysHandler.h	/^class CFinanceAnysHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CFinanceAnysHandler::CFinanceAnysHandler	.\inc\FinanceAnysHandler.h	/^	CFinanceAnysHandler() {}$/;"	f	class:Handler::CFinanceAnysHandler	access:public	signature:()
Handler::CFinanceAnysHandler::SyncToAll	.\inc\FinanceAnysHandler.h	/^	int SyncToAll();$/;"	p	class:Handler::CFinanceAnysHandler	access:private	signature:()
Handler::CFinanceAnysHandler::SyncToAll	.\src\FinanceAnysHandler.cc	/^CFinanceAnysHandler::SyncToAll()$/;"	f	class:Handler::CFinanceAnysHandler	signature:()
Handler::CFinanceAnysHandler::ToJson	.\inc\FinanceAnysHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFinanceAnysHandler	access:private	signature:(const void* data, string& json)
Handler::CFinanceAnysHandler::ToJson	.\src\FinanceAnysHandler.cc	/^CFinanceAnysHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFinanceAnysHandler	signature:(const void* data, string& json)
Handler::CFinanceAnysHandler::~CFinanceAnysHandler	.\inc\FinanceAnysHandler.h	/^	~CFinanceAnysHandler() {}$/;"	f	class:Handler::CFinanceAnysHandler	access:public	signature:()
Handler::CFundAluHandler	.\inc\FundAluHandler.h	/^class CFundAluHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CFundAluHandler::CFundAluHandler	.\inc\FundAluHandler.h	/^    CFundAluHandler() {}$/;"	f	class:Handler::CFundAluHandler	access:public	signature:()
Handler::CFundAluHandler::SyncToAll	.\inc\FundAluHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundAluHandler	access:private	signature:()
Handler::CFundAluHandler::SyncToAll	.\src\FundAluHandler.cc	/^CFundAluHandler::SyncToAll()$/;"	f	class:Handler::CFundAluHandler	signature:()
Handler::CFundAluHandler::ToJson	.\inc\FundAluHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundAluHandler	access:private	signature:(const void* data, string& json)
Handler::CFundAluHandler::ToJson	.\src\FundAluHandler.cc	/^CFundAluHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundAluHandler	signature:(const void* data, string& json)
Handler::CFundAluHandler::~CFundAluHandler	.\inc\FundAluHandler.h	/^    ~CFundAluHandler() {}$/;"	f	class:Handler::CFundAluHandler	access:public	signature:()
Handler::CFundDtlHandler	.\inc\FundDtlHandler.h	/^class CFundDtlHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CFundDtlHandler::CFundDtlHandler	.\inc\FundDtlHandler.h	/^    CFundDtlHandler() {}$/;"	f	class:Handler::CFundDtlHandler	access:public	signature:()
Handler::CFundDtlHandler::SyncToAll	.\inc\FundDtlHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundDtlHandler	access:private	signature:()
Handler::CFundDtlHandler::SyncToAll	.\src\FundDtlHandler.cc	/^CFundDtlHandler::SyncToAll()$/;"	f	class:Handler::CFundDtlHandler	signature:()
Handler::CFundDtlHandler::ToJson	.\inc\FundDtlHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundDtlHandler	access:private	signature:(const void* data, string& json)
Handler::CFundDtlHandler::ToJson	.\src\FundDtlHandler.cc	/^CFundDtlHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundDtlHandler	signature:(const void* data, string& json)
Handler::CFundDtlHandler::~CFundDtlHandler	.\inc\FundDtlHandler.h	/^    ~CFundDtlHandler() {}$/;"	f	class:Handler::CFundDtlHandler	access:public	signature:()
Handler::CFundFinanceHandler	.\inc\FundFinanceHandler.h	/^class CFundFinanceHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CFundFinanceHandler::CFundFinanceHandler	.\inc\FundFinanceHandler.h	/^    CFundFinanceHandler() {}$/;"	f	class:Handler::CFundFinanceHandler	access:public	signature:()
Handler::CFundFinanceHandler::SyncToAll	.\inc\FundFinanceHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundFinanceHandler	access:private	signature:()
Handler::CFundFinanceHandler::SyncToAll	.\src\FundFinanceHandler.cc	/^CFundFinanceHandler::SyncToAll()$/;"	f	class:Handler::CFundFinanceHandler	signature:()
Handler::CFundFinanceHandler::ToJson	.\inc\FundFinanceHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundFinanceHandler	access:private	signature:(const void* data, string& json)
Handler::CFundFinanceHandler::ToJson	.\src\FundFinanceHandler.cc	/^CFundFinanceHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundFinanceHandler	signature:(const void* data, string& json)
Handler::CFundFinanceHandler::~CFundFinanceHandler	.\inc\FundFinanceHandler.h	/^    ~CFundFinanceHandler() {}$/;"	f	class:Handler::CFundFinanceHandler	access:public	signature:()
Handler::CFundHandler	.\funds\inc\FundHandler.h	/^class CFundHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CFundHandler	.\inc\FundHandler.h	/^class CFundHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CFundHandler::CFundHandler	.\funds\inc\FundHandler.h	/^    CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
Handler::CFundHandler::CFundHandler	.\inc\FundHandler.h	/^    CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
Handler::CFundHandler::FiveDays	.\funds\inc\FundHandler.h	/^		FiveDays,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::FiveDays	.\inc\FundHandler.h	/^		FiveDays,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::FundType	.\funds\inc\FundHandler.h	/^    enum FundType$/;"	g	class:Handler::CFundHandler	access:public
Handler::CFundHandler::FundType	.\inc\FundHandler.h	/^    enum FundType$/;"	g	class:Handler::CFundHandler	access:public
Handler::CFundHandler::SyncToAll	.\funds\inc\FundHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundHandler	access:private	signature:()
Handler::CFundHandler::SyncToAll	.\funds\src\FundHandler.cc	/^CFundHandler::SyncToAll()$/;"	f	class:Handler::CFundHandler	signature:()
Handler::CFundHandler::SyncToAll	.\inc\FundHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundHandler	access:private	signature:()
Handler::CFundHandler::SyncToAll	.\src\FundHandler.cc	/^CFundHandler::SyncToAll()$/;"	f	class:Handler::CFundHandler	signature:()
Handler::CFundHandler::TenDays	.\funds\inc\FundHandler.h	/^		TenDays,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::TenDays	.\inc\FundHandler.h	/^		TenDays,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::ThreeDays	.\funds\inc\FundHandler.h	/^		ThreeDays,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::ThreeDays	.\inc\FundHandler.h	/^		ThreeDays,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::ToJson	.\funds\inc\FundHandler.h	/^    string& ToJson(const void* data, string& json);   $/;"	p	class:Handler::CFundHandler	access:private	signature:(const void* data, string& json)
Handler::CFundHandler::ToJson	.\funds\src\FundHandler.cc	/^CFundHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundHandler	signature:(const void* data, string& json)
Handler::CFundHandler::ToJson	.\inc\FundHandler.h	/^    string& ToJson(const void* data, string& json);   $/;"	p	class:Handler::CFundHandler	access:private	signature:(const void* data, string& json)
Handler::CFundHandler::ToJson	.\src\FundHandler.cc	/^CFundHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundHandler	signature:(const void* data, string& json)
Handler::CFundHandler::Today	.\funds\inc\FundHandler.h	/^		Today=0,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::Today	.\inc\FundHandler.h	/^		Today=0,$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::TwentyDays	.\funds\inc\FundHandler.h	/^		TwentyDays$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::TwentyDays	.\inc\FundHandler.h	/^		TwentyDays$/;"	e	enum:Handler::CFundHandler::FundType
Handler::CFundHandler::~CFundHandler	.\funds\inc\FundHandler.h	/^    virtual ~CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
Handler::CFundHandler::~CFundHandler	.\inc\FundHandler.h	/^    virtual ~CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
Handler::CFundInduHandler	.\inc\FundInduHandler.h	/^class CFundInduHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CFundInduHandler::CFundInduHandler	.\inc\FundInduHandler.h	/^    CFundInduHandler() {}$/;"	f	class:Handler::CFundInduHandler	access:public	signature:()
Handler::CFundInduHandler::SyncToAll	.\inc\FundInduHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundInduHandler	access:private	signature:()
Handler::CFundInduHandler::SyncToAll	.\src\FundInduHandler.cc	/^CFundInduHandler::SyncToAll()$/;"	f	class:Handler::CFundInduHandler	signature:()
Handler::CFundInduHandler::ToJson	.\inc\FundInduHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundInduHandler	access:private	signature:(const void* data, string& json)
Handler::CFundInduHandler::ToJson	.\src\FundInduHandler.cc	/^CFundInduHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundInduHandler	signature:(const void* data, string& json)
Handler::CFundInduHandler::~CFundInduHandler	.\inc\FundInduHandler.h	/^    ~CFundInduHandler() {}$/;"	f	class:Handler::CFundInduHandler	access:public	signature:()
Handler::CHandlerBase	.\comm\HandlerBase.h	/^class CHandlerBase$/;"	c	namespace:Handler
Handler::CHandlerBase	.\inc\HandlerFactory.h	/^class CHandlerBase;$/;"	x
Handler::CHandlerBase::CHandlerBase	.\comm\HandlerBase.cc	/^CHandlerBase::CHandlerBase()$/;"	f	class:Handler::CHandlerBase	signature:()
Handler::CHandlerBase::CHandlerBase	.\comm\HandlerBase.h	/^    CHandlerBase();$/;"	p	class:Handler::CHandlerBase	access:public	signature:()
Handler::CHandlerBase::Sync	.\comm\HandlerBase.cc	/^CHandlerBase::Sync()$/;"	f	class:Handler::CHandlerBase	signature:()
Handler::CHandlerBase::Sync	.\comm\HandlerBase.h	/^    int Sync();$/;"	p	class:Handler::CHandlerBase	access:public	signature:()
Handler::CHandlerBase::SyncToAll	.\comm\HandlerBase.h	/^    virtual int SyncToAll() =0;$/;"	p	class:Handler::CHandlerBase	access:private	signature:()
Handler::CHandlerBase::ToJson	.\comm\HandlerBase.h	/^    virtual string& ToJson(const void* data, string& json) =0 ;$/;"	p	class:Handler::CHandlerBase	access:private	signature:(const void* data, string& json)
Handler::CHandlerBase::client_	.\comm\HandlerBase.h	/^    boost::scoped_ptr<CTcpClient> client_;$/;"	m	class:Handler::CHandlerBase	access:protected
Handler::CHandlerBase::map_	.\comm\HandlerBase.h	/^    boost::scoped_ptr<CShmMap> map_;$/;"	m	class:Handler::CHandlerBase	access:protected
Handler::CHandlerBase::mc_	.\comm\HandlerBase.h	/^    boost::scoped_ptr<CMemcachedHandler> mc_;$/;"	m	class:Handler::CHandlerBase	access:protected
Handler::CHandlerBase::~CHandlerBase	.\comm\HandlerBase.cc	/^CHandlerBase::~CHandlerBase() {}$/;"	f	class:Handler::CHandlerBase	signature:()
Handler::CHandlerBase::~CHandlerBase	.\comm\HandlerBase.h	/^    virtual ~CHandlerBase();$/;"	p	class:Handler::CHandlerBase	access:public	signature:()
Handler::CHandlerFactory	.\inc\HandlerFactory.h	/^class CHandlerFactory$/;"	c	namespace:Handler
Handler::CHandlerFactory::CHandlerFactory	.\inc\HandlerFactory.h	/^    CHandlerFactory();$/;"	p	class:Handler::CHandlerFactory	access:public	signature:()
Handler::CHandlerFactory::CHandlerFactory	.\src\HandlerFactory.cc	/^CHandlerFactory::CHandlerFactory() $/;"	f	class:Handler::CHandlerFactory	signature:()
Handler::CHandlerFactory::CreateHandler	.\inc\HandlerFactory.h	/^    CHandlerBase* CreateHandler(unsigned short handlerID);$/;"	p	class:Handler::CHandlerFactory	access:public	signature:(unsigned short handlerID)
Handler::CHandlerFactory::CreateHandler	.\src\HandlerFactory.cc	/^CHandlerFactory::CreateHandler(unsigned short handlerID)$/;"	f	class:Handler::CHandlerFactory	signature:(unsigned short handlerID)
Handler::CHandlerFactory::~CHandlerFactory	.\inc\HandlerFactory.h	/^    virtual ~CHandlerFactory();$/;"	p	class:Handler::CHandlerFactory	access:public	signature:()
Handler::CHandlerFactory::~CHandlerFactory	.\src\HandlerFactory.cc	/^CHandlerFactory::~CHandlerFactory() $/;"	f	class:Handler::CHandlerFactory	signature:()
Handler::CMemcachedHandler	.\comm\HandlerBase.h	/^class CMemcachedHandler;$/;"	x
Handler::CMemcachedHandler	.\comm\MemcachedHandler.h	/^class CMemcachedHandler $/;"	c	namespace:Handler
Handler::CMemcachedHandler::CMemcachedHandler	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::CMemcachedHandler(const string & host)$/;"	f	class:Handler::CMemcachedHandler	signature:(const string & host)
Handler::CMemcachedHandler::CMemcachedHandler	.\comm\MemcachedHandler.h	/^	CMemcachedHandler(const string& host);$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:(const string& host)
Handler::CMemcachedHandler::Get	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::Get(string& key)$/;"	f	class:Handler::CMemcachedHandler	signature:(string& key)
Handler::CMemcachedHandler::Get	.\comm\MemcachedHandler.h	/^	string Get(string& key);$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:(string& key)
Handler::CMemcachedHandler::Set	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::Set(const string & key,const string & value)$/;"	f	class:Handler::CMemcachedHandler	signature:(const string & key,const string & value)
Handler::CMemcachedHandler::Set	.\comm\MemcachedHandler.h	/^	int Set(const string& key, const string& value);$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:(const string& key, const string& value)
Handler::CMemcachedHandler::host_	.\comm\MemcachedHandler.h	/^	string host_;$/;"	m	class:Handler::CMemcachedHandler	access:private
Handler::CMemcachedHandler::memc_	.\comm\MemcachedHandler.h	/^	memcached_st* memc_;$/;"	m	class:Handler::CMemcachedHandler	access:private
Handler::CMemcachedHandler::~CMemcachedHandler	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::~CMemcachedHandler()$/;"	f	class:Handler::CMemcachedHandler	signature:()
Handler::CMemcachedHandler::~CMemcachedHandler	.\comm\MemcachedHandler.h	/^	~CMemcachedHandler();$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:()
Handler::CTrendAnysHandler	.\inc\TrendAnysHandler.h	/^class CTrendAnysHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CTrendAnysHandler::CTrendAnysHandler	.\inc\TrendAnysHandler.h	/^    CTrendAnysHandler() {}$/;"	f	class:Handler::CTrendAnysHandler	access:public	signature:()
Handler::CTrendAnysHandler::SyncToAll	.\inc\TrendAnysHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CTrendAnysHandler	access:private	signature:()
Handler::CTrendAnysHandler::SyncToAll	.\src\TrendAnysHandler.cc	/^CTrendAnysHandler::SyncToAll()$/;"	f	class:Handler::CTrendAnysHandler	signature:()
Handler::CTrendAnysHandler::ToJson	.\inc\TrendAnysHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CTrendAnysHandler	access:private	signature:(const void* data, string& json)
Handler::CTrendAnysHandler::ToJson	.\src\TrendAnysHandler.cc	/^CTrendAnysHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CTrendAnysHandler	signature:(const void* data, string& json)
Handler::CTrendAnysHandler::~CTrendAnysHandler	.\inc\TrendAnysHandler.h	/^    ~CTrendAnysHandler() {}$/;"	f	class:Handler::CTrendAnysHandler	access:public	signature:()
Handler::CTrendMarketHandler	.\inc\TrendMarketHandler.h	/^class CTrendMarketHandler: public CHandlerBase$/;"	c	namespace:Handler	inherits:CHandlerBase
Handler::CTrendMarketHandler::CTrendMarketHandler	.\inc\TrendMarketHandler.h	/^    CTrendMarketHandler() {}$/;"	f	class:Handler::CTrendMarketHandler	access:public	signature:()
Handler::CTrendMarketHandler::SyncToAll	.\inc\TrendMarketHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CTrendMarketHandler	access:private	signature:()
Handler::CTrendMarketHandler::SyncToAll	.\src\TrendMarketHandler.cc	/^CTrendMarketHandler::SyncToAll()$/;"	f	class:Handler::CTrendMarketHandler	signature:()
Handler::CTrendMarketHandler::ToJson	.\inc\TrendMarketHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CTrendMarketHandler	access:private	signature:(const void* data, string& json)
Handler::CTrendMarketHandler::ToJson	.\src\TrendMarketHandler.cc	/^CTrendMarketHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CTrendMarketHandler	signature:(const void* data, string& json)
Handler::CTrendMarketHandler::~CTrendMarketHandler	.\inc\TrendMarketHandler.h	/^    ~CTrendMarketHandler() {}$/;"	f	class:Handler::CTrendMarketHandler	access:public	signature:()
Handler::USER_FLAG	.\comm\MemcachedHandler.cc	/^const unsigned short USER_FLAG = 0;\/\/ C# 客户端需要设置该值才能访问$/;"	v
HangupAmount	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int HangupAmount; \/\/套牢金额（客户端  \/1000），单位：万元(CBFB)$/;"	m	struct:JWRegionData	access:public
HangupNumber	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int HangupNumber;\/\/套牢手数（客户端  \/1000），,单位：手(CBFB)$/;"	m	struct:JWRegionData	access:public
HexDumpImp	.\comm\HexDumpImp.cc	/^void HexDumpImp(const void *pdata, unsigned int len)$/;"	f	signature:(const void *pdata, unsigned int len)
HexDumpImp	.\comm\HexDumpImp.h	/^extern void HexDumpImp(const void *pdata, unsigned int len);$/;"	p	signature:(const void *pdata, unsigned int len)
HoldingsNum	.\comm\JsonFeildDef.h	/^const char* const HoldingsNum       = "M07"; \/\/增持数量  $/;"	v
HoldingsNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short HoldingsNum;                    \/\/增持数量$/;"	m	struct:JWFundOrganizationViewData	access:public
INDEX_KEY_MAP	.\comm\ShmMap.h	/^typedef map<unsigned short, MapItem*> INDEX_KEY_MAP;$/;"	t
ImpetusBill	.\comm\JsonFeildDef.h	/^const char* const ImpetusBill          = "A10"; \/\/大单动能                                                            $/;"	v
ImpetusBill	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ImpetusBill;\/\/大单动能 $/;"	m	struct:JWStkFundFlowData	access:public
Index_Map_Size	.\comm\ShmMap.h	/^	unsigned short Index_Map_Size() const {return index_key_list_.size();}$/;"	f	class:CShmMap	access:public	signature:() const
InduElementNum	.\comm\JsonFeildDef.h	/^const char* const InduElementNum        = "K15"; \/\/所属行业成份股总数  $/;"	v
InduElementNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short InduElementNum;      \/\/所属行业成份股总数$/;"	m	struct:JWFundIndustryRanksData	access:public
IndustryCode	.\comm\JsonFeildDef.h	/^const char* const IndustryCode         = "A11"; \/\/行业代码                                                            $/;"	v
IndustryCode	.\lib\libprotocol\include\jw_struct.h	/^    char IndustryCode[JW_MAX_INDU_CODE_LEN];\/\/行业代码$/;"	m	struct:JWStkFundFlowData	access:public
IndustryFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^    JWIndustryFundFlowData IndustryFundFlowData[JW_MAX_INDUSTRY_NUM];\/\/行业资金流向数据结构数组$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
IndustryIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryIndex; \/\/行业索引$/;"	m	struct:JWIndustryFundFlowData	access:public
IndustryIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryIndex[JW_MAX_INDUSTRY_NUM];\/\/行业索引数组$/;"	m	struct:JWIndustryFundFlowInfo	access:public
IndustryName	.\comm\JsonFeildDef.h	/^const char* const IndustryName			= "K02"; \/\/所属行业名称        $/;"	v
IndustryName	.\lib\libprotocol\include\jw_struct.h	/^    char IndustryName[JW_MAX_INDUSTRY_NAME_LEN];              \/\/所属行业名称$/;"	m	struct:JWFundIndustryRanksData	access:public
IndustryNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryNumber;\/\/行业个数$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
IndustryNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryNumber;\/\/行业个数$/;"	m	struct:JWIndustryFundFlowInfo	access:public
IndustryType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryType;\/\/行业类型（0=证监会行业; 1=新财富行业）$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
IndustryType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryType;\/\/行业类型（0=证监会行业; 1=新财富行业）$/;"	m	struct:JWIndustryFundFlowInfo	access:public
Insert	.\comm\ShmMap.cc	/^CShmMap::Insert(unsigned short index,const string & code)$/;"	f	class:CShmMap	signature:(unsigned short index,const string & code)
Insert	.\comm\ShmMap.h	/^	void Insert(unsigned short index, const string& code);$/;"	p	class:CShmMap	access:public	signature:(unsigned short index, const string& code)
IsActivate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char IsActivate;\/\/是否注册同时激活,0:不激活,1:立即激活$/;"	m	struct:JWRegAccountInfo	access:public
IsConnected	.\comm\TcpClient.h	/^    bool IsConnected;$/;"	m	class:CTcpClient	access:private
ItemList	.\lib\libprotocol\include\jw_struct.h	/^    JWIncomeItem ItemList[JW_MAX_INCOME_NUM];$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JLRL	.\comm\JsonFeildDef.h	/^const char* const JLRL                  = "K06"; \/\/个股净利润率        $/;"	v
JLRL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLRL;                  \/\/个股净利润率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JLRL_HY	.\comm\JsonFeildDef.h	/^const char* const JLRL_HY               = "K07"; \/\/行业净利润率        $/;"	v
JLRL_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLRL_HY;               \/\/行业净利润率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JLRL_PM	.\comm\JsonFeildDef.h	/^const char* const JLRL_PM               = "K08"; \/\/个股净利润率排名    $/;"	v
JLRL_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short JLRL_PM;             \/\/个股净利润率排名$/;"	m	struct:JWFundIndustryRanksData	access:public
JLR_PARENT	.\comm\JsonFeildDef.h	/^const char* const JLR_PARENT	= "H4"; \/\/净利润          $/;"	v
JLR_PARENT	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t JLR_PARENT;             \/\/净利润，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JLR_TB_ZZ	.\comm\JsonFeildDef.h	/^const char* const JLR_TB_ZZ		= "H5"; \/\/净利润同比增长  $/;"	v
JLR_TB_ZZ	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLR_TB_ZZ;          \/\/净利润同比增长，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JLR_TB_ZZL	.\comm\JsonFeildDef.h	/^const char* const JLR_TB_ZZL	= "I4"; \/\/净利润同比增长率              $/;"	v
JLR_TB_ZZL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLR_TB_ZZL;        \/\/净利润同比增长率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAmentalsTargetsContentData	access:public
JWAccountInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWAccountInfo$/;"	s
JWAccountInfo::account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfo	access:public
JWAccountInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWAccountInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWAccountInfoRsp::account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::birth	.\lib\libprotocol\include\jw_struct.h	/^    char birth[JW_MAX_BIRTH_LEN+1];\/\/生日格式：YYYYMMDD  例如：19810306$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::city	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int city;\/\/居住地$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::gender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char gender;\/\/性别0:未知,1:男,2:女$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::invest_level	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int invest_level;\/\/投资能力$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::ip_addr	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ip_addr;\/\/注册IP$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::name	.\lib\libprotocol\include\jw_struct.h	/^    char name[JW_MAX_NAME_LEN+1];\/\/用户姓名，,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::operatorStyle	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int operatorStyle;\/\/操盘风格 ,每一bit代表一项  0：短线 1：中线 2：长线 $/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::reg_time	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int reg_time;\/\/注册时间，YYYYMMDD格式。$/;"	m	struct:JWAccountInfoRsp	access:public
JWAccountInfoRsp::verify_code	.\lib\libprotocol\include\jw_struct.h	/^    char verify_code[JW_MAX_VERIFY_CODE_LEN+1];\/\/激活码,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfoRsp	access:public
JWActiveAccountInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWActiveAccountInfo$/;"	s
JWActiveAccountInfo::account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWActiveAccountInfo	access:public
JWActiveAccountInfo::verify_code	.\lib\libprotocol\include\jw_struct.h	/^    char verify_code[JW_MAX_DCODE_LEN+1];\/\/激活码,utf-8编码,\\0结束$/;"	m	struct:JWActiveAccountInfo	access:public
JWActiveAccountInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWActiveAccountInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWAddStockInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWAddStockInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWAddStockInfo::StockKey	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockKey;\/\/股票代码+市场类型$/;"	m	struct:JWAddStockInfo	access:public
JWAddStockInfo::nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/分组ID$/;"	m	struct:JWAddStockInfo	access:public
JWAddStockRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWAddStockRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWAuthInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWAuthInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWAuthInfo::type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char type; \/\/票据类型$/;"	m	struct:JWAuthInfo	access:public
JWAuthInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWAuthInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWAuthInfoRsp::ticket	.\lib\libprotocol\include\jw_struct.h	/^    char ticket[JW_MAX_TICKET_LEN+1];$/;"	m	struct:JWAuthInfoRsp	access:public
JWBatchBriefMarketDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWBatchBriefMarketDataInfo :public JWPullMarketDataInfo \/\/批量简要的行情数据请求消息结构与拉最新行情数据请求消息结构体一样$/;"	s	inherits:JWPullMarketDataInfo
JWBatchBriefMarketDataInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWBatchBriefMarketDataInfoRsp:public JWCommonRsp  \/\/批量拉取股票简易行情数据应答消息体结构$/;"	s	inherits:JWCommonRsp
JWBatchBriefMarketDataInfoRsp::BriefMacketData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockBriefMacketData BriefMacketData[JW_MAX_STOCK_NUM];   \/\/股票简易行情数据结构$/;"	m	struct:JWBatchBriefMarketDataInfoRsp	access:public
JWBatchBriefMarketDataInfoRsp::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                                \/\/股票个数$/;"	m	struct:JWBatchBriefMarketDataInfoRsp	access:public
JWBatchStockNewsNumInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWBatchStockNewsNumInfo  \/\/批量拉取股票最新新闻标题请求结构体$/;"	s
JWBatchStockNewsNumInfo::StockNews	.\lib\libprotocol\include\jw_struct.h	/^    JWStockNewsNumInfo StockNews[JW_MAX_STOCK_NUM];$/;"	m	struct:JWBatchStockNewsNumInfo	access:public
JWBatchStockNewsNumInfo::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;$/;"	m	struct:JWBatchStockNewsNumInfo	access:public
JWBatchStockNewsNumInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWBatchStockNewsNumInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWBatchStockNewsNumInfoRsp::StockAllNewsData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockAllNewsData StockAllNewsData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWBatchStockNewsNumInfoRsp	access:public
JWBatchStockNewsNumInfoRsp::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;$/;"	m	struct:JWBatchStockNewsNumInfoRsp	access:public
JWBindItemInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWBindItemInfo$/;"	s
JWBindItemInfo::BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWBindItemInfo	access:public
JWBindItemInfo::szMobile	.\lib\libprotocol\include\jw_struct.h	/^    char szMobile[JW_MAX_MOBILE_LEN + 1];\/\/手机号码$/;"	m	struct:JWBindItemInfo	access:public
JWBindMobileInfoReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWBindMobileInfoReq:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWBindMobileInfoReq::BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWBindMobileInfoReq	access:public
JWBindMobileInfoReq::opType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char opType;\/\/操作类型 0.绑定, 1.解除绑定    $/;"	m	struct:JWBindMobileInfoReq	access:public
JWBindMobileInfoReq::szMobile	.\lib\libprotocol\include\jw_struct.h	/^    char szMobile[JW_MAX_MOBILE_LEN + 1];\/\/手机号码$/;"	m	struct:JWBindMobileInfoReq	access:public
JWBindMobileInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWBindMobileInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWBindMobileInfoRsp::nExpire	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nExpire;\/\/验证码失效时间，单位秒$/;"	m	struct:JWBindMobileInfoRsp	access:public
JWBindVerifyInfoReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWBindVerifyInfoReq:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWBindVerifyInfoReq::BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWBindVerifyInfoReq	access:public
JWBindVerifyInfoReq::opType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char opType;\/\/操作类型 0.绑定, 1.解除绑定$/;"	m	struct:JWBindVerifyInfoReq	access:public
JWBindVerifyInfoReq::szMobile	.\lib\libprotocol\include\jw_struct.h	/^    char szMobile[JW_MAX_MOBILE_LEN + 1];\/\/手机号码$/;"	m	struct:JWBindVerifyInfoReq	access:public
JWBindVerifyInfoReq::szVerifyCode	.\lib\libprotocol\include\jw_struct.h	/^    char szVerifyCode[JW_MAX_VERIFY_CODE_LEN + 1];\/\/验证码$/;"	m	struct:JWBindVerifyInfoReq	access:public
JWBindVerifyInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWBindVerifyInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWBuyLevel	.\lib\libprotocol\include\jw_struct.h	/^struct JWBuyLevel$/;"	s
JWBuyLevel::nBuyPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nBuyPx;           \/\/委买价$/;"	m	struct:JWBuyLevel	access:public
JWBuyLevel::nBuyVolume	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nBuyVolume;       \/\/委买量$/;"	m	struct:JWBuyLevel	access:public
JWCheckTicketInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWCheckTicketInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWCheckTicketInfo::nClientIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nClientIP;\/\/客户端IP$/;"	m	struct:JWCheckTicketInfo	access:public
JWCheckTicketInfo::nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（外网IP）$/;"	m	struct:JWCheckTicketInfo	access:public
JWCheckTicketInfo::szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWCheckTicketInfo	access:public
JWCheckTicketRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWCheckTicketRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWCommonReqInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWCommonReqInfo$/;"	s
JWCommonReqInfo::UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWCommonReqInfo	access:public
JWCommonRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWCommonRsp$/;"	s
JWCommonRsp::nErrno	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nErrno;\/\/错误码$/;"	m	struct:JWCommonRsp	access:public
JWCommonRsp::szErrMsg	.\lib\libprotocol\include\jw_struct.h	/^    char szErrMsg[JW_MAX_ERR_MSG_LEN + 1];\/\/错误信息$/;"	m	struct:JWCommonRsp	access:public
JWCostDistributionDetailRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWCostDistributionDetailRsp : public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWCostDistributionDetailRsp::DetailData	.\lib\libprotocol\include\jw_struct.h	/^    JWRegionDetailData DetailData[1024]; \/\/明细数组$/;"	m	struct:JWCostDistributionDetailRsp	access:public
JWCostDistributionDetailRsp::DetailNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DetailNumber; \/\/明细个数$/;"	m	struct:JWCostDistributionDetailRsp	access:public
JWCostDistributionDetailRsp::Region	.\lib\libprotocol\include\jw_struct.h	/^    JWRegionData_0A18 Region[JW_MAX_REGION_NUM]; \/\/区间数据数组$/;"	m	struct:JWCostDistributionDetailRsp	access:public
JWCostDistributionDetailRsp::RegionNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char RegionNumber;\/\/区间个数$/;"	m	struct:JWCostDistributionDetailRsp	access:public
JWCostDistributionDetailRsp::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWCostDistributionDetailRsp	access:public
JWCostDistributionRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWCostDistributionRsp : public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWCostDistributionRsp::OperatorAnalysis	.\lib\libprotocol\include\jw_struct.h	/^    char OperatorAnalysis[JW_MAX_OPER_ANALY];\/\/操作分析，（UTF8）$/;"	m	struct:JWCostDistributionRsp	access:public
JWCostDistributionRsp::Region	.\lib\libprotocol\include\jw_struct.h	/^    JWRegionData Region[JW_MAX_REGION_NUM]; \/\/分部指标数组$/;"	m	struct:JWCostDistributionRsp	access:public
JWCostDistributionRsp::RegionNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char RegionNumber;\/\/区间个数$/;"	m	struct:JWCostDistributionRsp	access:public
JWCostDistributionRsp::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWCostDistributionRsp	access:public
JWCreateAccountInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWCreateAccountInfo$/;"	s
JWCreateAccountInfo::nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（接入服务器取到的远端IP）$/;"	m	struct:JWCreateAccountInfo	access:public
JWCreateAccountInfo::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWCreateAccountInfo	access:public
JWCreateAccountInfo::szName	.\lib\libprotocol\include\jw_struct.h	/^    char szName[JW_MAX_NAME_LEN + 1];\/\/用户昵称$/;"	m	struct:JWCreateAccountInfo	access:public
JWCreateAccountInfo::szPasswd	.\lib\libprotocol\include\jw_struct.h	/^    char szPasswd[JW_MAX_PWD_LEN + 1];\/\/密码  $/;"	m	struct:JWCreateAccountInfo	access:public
JWCreateAccountRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWCreateAccountRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWCreateAccountRsp::UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWCreateAccountRsp	access:public
JWDDEData	.\lib\libprotocol\include\jw_struct.h	/^struct JWDDEData$/;"	s
JWDDEData::BuyBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrder; \/\/买入大单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::BuyCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyCount; \/\/买入成交笔数$/;"	m	struct:JWDDEData	access:public
JWDDEData::BuyLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrder;\/\/买入特大单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::BuyMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrder;\/\/买入中单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::BuyMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrder; \/\/买入小单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date; \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWDDEData	access:public
JWDDEData::DisperseHold	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t DisperseHold; \/\/散户持仓$/;"	m	struct:JWDDEData	access:public
JWDDEData::MainHold	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t MainHold;\/\/主力持仓$/;"	m	struct:JWDDEData	access:public
JWDDEData::SelBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrder; \/\/卖出大单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::SelLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrder; \/\/卖出特大单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::SelMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrder;\/\/卖出中单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::SelMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrder; \/\/卖出小单 数\/金额$/;"	m	struct:JWDDEData	access:public
JWDDEData::SellCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SellCount; \/\/卖出成交笔数$/;"	m	struct:JWDDEData	access:public
JWDDEData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDDEData	access:public
JWDDEDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWDDEDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWDDEDataRsp::DDEData	.\lib\libprotocol\include\jw_struct.h	/^    JWDDEData DDEData[JW_MAX_STOCK_NUM];\/\/DDE数据结构数组$/;"	m	struct:JWDDEDataRsp	access:public
JWDDEDataRsp::DDEDataNums	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DDEDataNums; \/\/DDE数据个数$/;"	m	struct:JWDDEDataRsp	access:public
JWDDEHisData	.\lib\libprotocol\include\jw_struct.h	/^struct JWDDEHisData$/;"	s
JWDDEHisData::BuyBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrder; \/\/买入大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::BuyCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyCount; \/\/买入成交笔数，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::BuyLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrder; \/\/买入特大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::BuyMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrder; \/\/买入中单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::BuyMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrder; \/\/买入小单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date; \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::SelBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrder; \/\/卖出大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::SelLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrder; \/\/卖出特大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::SelMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrder; \/\/卖出中单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::SelMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrder; \/\/卖出小单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::SellCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SellCount; \/\/卖出成交笔数，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisData::StopBit	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StopBit; \/\/停止位：0表示停止，>0表示还有数据$/;"	m	struct:JWDDEHisData	access:public
JWDDEHisDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWDDEHisDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWDDEHisDataRsp::DDEHisData	.\lib\libprotocol\include\jw_struct.h	/^    JWDDEHisData DDEHisData[JW_MAX_DDE_HIS_NUM];\/\/历史DDE数据数组$/;"	m	struct:JWDDEHisDataRsp	access:public
JWDDEHisDataRsp::Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Number; \/\/数据条数$/;"	m	struct:JWDDEHisDataRsp	access:public
JWDDEHisDataRsp::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDDEHisDataRsp	access:public
JWDDSortDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWDDSortDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWDDSortDataRsp::DdsortData	.\lib\libprotocol\include\jw_struct.h	/^    JWDdsortData DdsortData[JW_MAX_STOCK_NUM];\/\/个股DDSort数据结构数组$/;"	m	struct:JWDDSortDataRsp	access:public
JWDDSortDataRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWDDSortDataRsp	access:public
JWDdeDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWDdeDataInfo$/;"	s
JWDdeDataInfo::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex[JW_MAX_STOCK_NUM];\/\/股票索引数组$/;"	m	struct:JWDdeDataInfo	access:public
JWDdeDataInfo::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWDdeDataInfo	access:public
JWDdeHisDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWDdeHisDataInfo$/;"	s
JWDdeHisDataInfo::Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number; \/\/数据条数，返回从最新往前的数据。一般服务器上提供60条数据。如果填1，那么会返回最新的一条数据$/;"	m	struct:JWDdeHisDataInfo	access:public
JWDdeHisDataInfo::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWDdeHisDataInfo	access:public
JWDdsortData	.\lib\libprotocol\include\jw_struct.h	/^struct JWDdsortData$/;"	s
JWDdsortData::BigBuy	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int BigBuy;\/\/大单买* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::BigSell	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int BigSell;\/\/大单买* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::DDX	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDX;\/\/DDX * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::DDX60	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDX60;\/\/60日DDX * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::DDY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDY;\/\/DDY * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::DDY60	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDY60;\/\/60日DDY * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::DDZ	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DDZ;\/\/DDZ * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::DeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DeltaPercent;\/\/涨跌幅 * 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::LagerBuy	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LagerBuy;\/\/特大买* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::LagerSell	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LagerSell;\/\/特大卖* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::Price	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Price;\/\/现价  * 1000 取整$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::Time	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Time;\/\/日期时间$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::Up10	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Up10;\/\/10日内飘红$/;"	m	struct:JWDdsortData	access:public
JWDdsortData::UpDays	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpDays;\/\/连续飘红$/;"	m	struct:JWDdsortData	access:public
JWDdsortDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWDdsortDataInfo:public JWDdeDataInfo$/;"	s	inherits:JWDdeDataInfo
JWDecryptPack	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API void  JWDecryptPack(char * p,unsigned int len);$/;"	p	signature:(char * p,unsigned int len)
JWDelStockInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWDelStockInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWDelStockInfo::StockKey	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockKey;\/\/股票代码+市场类型$/;"	m	struct:JWDelStockInfo	access:public
JWDelStockInfo::nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/股票分组ID$/;"	m	struct:JWDelStockInfo	access:public
JWDelStockRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWDelStockRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWDiagnoseDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWDiagnoseDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWDiagnoseDataRsp::Content	.\lib\libprotocol\include\jw_struct.h	/^    char Content[JW_MAX_DIAGNOSE_CONTENT_LEN]; \/\/诊断内容（utf-8编码）$/;"	m	struct:JWDiagnoseDataRsp	access:public
JWDiagnoseDataRsp::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDiagnoseDataRsp	access:public
JWEarlyWarningInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWEarlyWarningInfo$/;"	s
JWEarlyWarningInfo::cMarketType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cMarketType;      \/\/市场类型,$/;"	m	struct:JWEarlyWarningInfo	access:public
JWEarlyWarningInfo::nVerCounter	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nVerCounter;       \/\/版本计数器，股票服务器传递的值，需要回传给股票服务器，用于鉴别是否有新的数据$/;"	m	struct:JWEarlyWarningInfo	access:public
JWEarlyWarningRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWEarlyWarningRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWEarlyWarningRsp::MarketDataInfo	.\lib\libprotocol\include\jw_struct.h	/^    JWMarketDataInfo MarketDataInfo[JW_MAX_STOCK_NUM];\/\/个股行情数据结构$/;"	m	struct:JWEarlyWarningRsp	access:public
JWEarlyWarningRsp::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                      \/\/股票个数$/;"	m	struct:JWEarlyWarningRsp	access:public
JWEarlyWarningRsp::nVerCounter	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nVerCounter;                         \/\/版本计数器。$/;"	m	struct:JWEarlyWarningRsp	access:public
JWEncryptPack	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API void  JWEncryptPack(char * p, unsigned int len);$/;"	p	signature:(char * p, unsigned int len)
JWFinancialMainCostContentData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFinancialMainCostContentData$/;"	s
JWFinancialMainCostContentData::ClosePrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ClosePrice; \/\/收盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFinancialMainCostContentData	access:public
JWFinancialMainCostContentData::MainPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MainPrice;\/\/10日主力平均交易成本，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFinancialMainCostContentData	access:public
JWFinancialMainCostContentData::MarketPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MarketPrice;\/\/10日市场平均交易成本，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFinancialMainCostContentData	access:public
JWFinancialMainCostContentData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate; \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFinancialMainCostContentData	access:public
JWFinancialMainCostData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFinancialMainCostData$/;"	s
JWFinancialMainCostData::FinancialMainCostContentData	.\lib\libprotocol\include\jw_struct.h	/^    JWFinancialMainCostContentData FinancialMainCostContentData[JW_MAX_MAIN_COST_CONTENT_NUM];\/\/内容的数组$/;"	m	struct:JWFinancialMainCostData	access:public
JWFinancialMainCostData::Num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Num; \/\/内容的个数$/;"	m	struct:JWFinancialMainCostData	access:public
JWFinancialMainCostData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWFinancialMainCostData	access:public
JWFinancialMainCostReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWFinancialMainCostReq:public JWTechniccalTrendAnaysisReq$/;"	s	inherits:JWTechniccalTrendAnaysisReq
JWFinancialMainCostRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWFinancialMainCostRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWFinancialMainCostRsp::FinancialMainCostData	.\lib\libprotocol\include\jw_struct.h	/^    JWFinancialMainCostData FinancialMainCostData[JW_MAX_STOCK_NUM];\/\/个股主力分析-主力成本数据数组$/;"	m	struct:JWFinancialMainCostRsp	access:public
JWFinancialMainCostRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWFinancialMainCostRsp	access:public
JWFundAluationReserchData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAluationReserchData$/;"	s
JWFundAluationReserchData::PB	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB;                \/\/市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PB_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB_HY;             \/\/行业市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PB_MARKET	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB_MARKET;         \/\/市场市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PB_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PB_RANKING[JW_MAX_RANK_LEN];              \/\/市净率排名$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PEG	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG;               \/\/PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PEG_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG_HY;            \/\/行业PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PEG_MARKET	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG_MARKET;        \/\/市场PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PEG_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PEG_RANKING[JW_MAX_RANK_LEN];             \/\/PEG排名$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PE_TTM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PE_TTM;            \/\/市盈率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PE_TTM_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PE_TTM_HY;         \/\/行业市盈率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PE_TTM_MARKET	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PE_TTM_MARKET;     \/\/市场市盈率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::PE_TTM_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PE_TTM_RANKING[JW_MAX_RANK_LEN];          \/\/市盈率排名$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;      \/\/股票索引$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;        \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundAluationReserchData	access:public
JWFundAluationReserchReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAluationReserchReq:public JWTechniccalTrendAnaysisReq$/;"	s	inherits:JWTechniccalTrendAnaysisReq
JWFundAluationReserchRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAluationReserchRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWFundAluationReserchRsp::FundAluationRserchData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAluationReserchData FundAluationRserchData[JW_MAX_STOCK_NUM];  \/\/估值研究数据数组$/;"	m	struct:JWFundAluationReserchRsp	access:public
JWFundAluationReserchRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;                         \/\/股票个数$/;"	m	struct:JWFundAluationReserchRsp	access:public
JWFundAmentalsAnalysisData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAmentalsAnalysisData$/;"	s
JWFundAmentalsAnalysisData::JLR_PARENT	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t JLR_PARENT;             \/\/净利润，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JWFundAmentalsAnalysisData::JLR_TB_ZZ	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLR_TB_ZZ;          \/\/净利润同比增长，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JWFundAmentalsAnalysisData::MGSY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MGSY;               \/\/每股收益，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JWFundAmentalsAnalysisData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;       \/\/股票索引$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JWFundAmentalsAnalysisData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;         \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JWFundAmentalsAnalysisData::YYSR	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t YYSR;                   \/\/营业收入，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JWFundAmentalsAnalysisData::YYSR_TB_ZZ	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int YYSR_TB_ZZ;         \/\/营业收入同比增长，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
JWFundAmentalsAnalysisReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAmentalsAnalysisReq:public JWTechniccalTrendAnaysisReq$/;"	s	inherits:JWTechniccalTrendAnaysisReq
JWFundAmentalsAnalysisRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAmentalsAnalysisRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWFundAmentalsAnalysisRsp::FundAmentalsAnalysisData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAmentalsAnalysisData FundAmentalsAnalysisData[JW_MAX_STOCK_NUM];\/\/财务分析数据数组$/;"	m	struct:JWFundAmentalsAnalysisRsp	access:public
JWFundAmentalsAnalysisRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWFundAmentalsAnalysisRsp	access:public
JWFundAmentalsTargetsContentData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAmentalsTargetsContentData$/;"	s
JWFundAmentalsTargetsContentData::JLR_TB_ZZL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLR_TB_ZZL;        \/\/净利润同比增长率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAmentalsTargetsContentData	access:public
JWFundAmentalsTargetsContentData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;        \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundAmentalsTargetsContentData	access:public
JWFundAmentalsTargetsContentData::YYSR_TB_ZZL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int YYSR_TB_ZZL;       \/\/营业收入同比增长率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAmentalsTargetsContentData	access:public
JWFundAmentalsTargetsData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAmentalsTargetsData$/;"	s
JWFundAmentalsTargetsData::FundAmentalsTargetsContentData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAmentalsTargetsContentData FundAmentalsTargetsContentData[JW_MAX_TARGETS_CONTENT_NUM];  \/\/内容数组$/;"	m	struct:JWFundAmentalsTargetsData	access:public
JWFundAmentalsTargetsData::Num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Num;                                                 \/\/内容的个数$/;"	m	struct:JWFundAmentalsTargetsData	access:public
JWFundAmentalsTargetsData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;                                          \/\/股票索引$/;"	m	struct:JWFundAmentalsTargetsData	access:public
JWFundAmentalsTargetsReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAmentalsTargetsReq:public JWTechniccalTrendAnaysisReq$/;"	s	inherits:JWTechniccalTrendAnaysisReq
JWFundAmentalsTargetsRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundAmentalsTargetsRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWFundAmentalsTargetsRsp::FundAmentalsTargetsData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundAmentalsTargetsData FundAmentalsTargetsData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWFundAmentalsTargetsRsp	access:public
JWFundAmentalsTargetsRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;$/;"	m	struct:JWFundAmentalsTargetsRsp	access:public
JWFundIndustryRanksData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundIndustryRanksData$/;"	s
JWFundIndustryRanksData::InduElementNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short InduElementNum;      \/\/所属行业成份股总数$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::IndustryName	.\lib\libprotocol\include\jw_struct.h	/^    char IndustryName[JW_MAX_INDUSTRY_NAME_LEN];              \/\/所属行业名称$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::JLRL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLRL;                  \/\/个股净利润率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::JLRL_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JLRL_HY;               \/\/行业净利润率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::JLRL_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short JLRL_PM;             \/\/个股净利润率排名$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::JZCSYL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JZCSYL;                \/\/个股净资产收益率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::JZCSYL_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JZCSYL_HY;             \/\/行业净资产收益率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::JZCSYL_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short JZCSYL_PM;           \/\/个股净资产收益率排名$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;          \/\/股票索引$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;            \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::XSMLL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int XSMLL;                 \/\/个股销售毛利率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::XSMLL_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int XSMLL_HY;              \/\/行业销售毛利率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::XSMLL_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short XSMLL_PM;            \/\/个股销售毛利率排名$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::ZZC	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t ZZC;                       \/\/个股总资产，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::ZZC_HY	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t ZZC_HY;                    \/\/行业总资产均值，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksData::ZZC_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short ZZC_PM;              \/\/个股总资产排名$/;"	m	struct:JWFundIndustryRanksData	access:public
JWFundIndustryRanksReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundIndustryRanksReq:public JWTechniccalTrendAnaysisReq$/;"	s	inherits:JWTechniccalTrendAnaysisReq
JWFundIndustryRanksRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundIndustryRanksRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWFundIndustryRanksRsp::FundIndustryRanksData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundIndustryRanksData FundIndustryRanksData[JW_MAX_STOCK_NUM];\/\/行业排名数据数组$/;"	m	struct:JWFundIndustryRanksRsp	access:public
JWFundIndustryRanksRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWFundIndustryRanksRsp	access:public
JWFundOrganizationViewData	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundOrganizationViewData$/;"	s
JWFundOrganizationViewData::Attention	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Attention;                        \/\/机构关注度，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::BuyNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short BuyNum;                         \/\/买入数量$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::HoldingsNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short HoldingsNum;                    \/\/增持数量$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::NeutralNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short NeutralNum;                     \/\/中性数量$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::OrganNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short OrganNum;                       \/\/机构数量$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::PB	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB;                               \/\/市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::PB_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB_HY;                            \/\/行业市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::PB_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PB_RANKING[JW_MAX_RANK_LEN];              \/\/市净率排名$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::PEG	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG;                              \/\/PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::PEG_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG_HY;                           \/\/行业PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::PEG_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PEG_RANKING[JW_MAX_RANK_LEN];             \/\/PEG排名$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::PE_TTM_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PE_TTM_RANKING[JW_MAX_RANK_LEN];          \/\/市盈率排名$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::Rating	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Rating;                           \/\/机构评级，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::ReductionNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short ReductionNum;                   \/\/减持数量$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::SellNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short SellNum;                        \/\/卖出数量$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::StatDays	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StatDays;                       \/\/统计天数$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;                     \/\/股票索引$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;                       \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundOrganizationViewData	access:public
JWFundOrganizationViewReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundOrganizationViewReq:public JWTechniccalTrendAnaysisReq$/;"	s	inherits:JWTechniccalTrendAnaysisReq
JWFundOrganizationViewRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWFundOrganizationViewRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWFundOrganizationViewRsp::FundOrganizationViewData	.\lib\libprotocol\include\jw_struct.h	/^    JWFundOrganizationViewData FundOrganizationViewData[JW_MAX_STOCK_NUM]; \/\/机构观点数据数组$/;"	m	struct:JWFundOrganizationViewRsp	access:public
JWFundOrganizationViewRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;      \/\/股票个数$/;"	m	struct:JWFundOrganizationViewRsp	access:public
JWGetAccountRegTimeInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetAccountRegTimeInfo$/;"	s
JWGetAccountRegTimeInfo::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/用户帐号$/;"	m	struct:JWGetAccountRegTimeInfo	access:public
JWGetAccountRegTimeRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetAccountRegTimeRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetAccountRegTimeRsp::UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWGetAccountRegTimeRsp	access:public
JWGetAccountRegTimeRsp::nRegTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nRegTime;\/\/注册时间(UNIX TimeStamp)$/;"	m	struct:JWGetAccountRegTimeRsp	access:public
JWGetAccountStatusInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetAccountStatusInfo$/;"	s
JWGetAccountStatusInfo::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];$/;"	m	struct:JWGetAccountStatusInfo	access:public
JWGetAccountStatusRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetAccountStatusRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetAccountStatusRsp::nStatus	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nStatus;\/\/帐号状态，0:已注册已激活，1：已注册未激活，2：未注册$/;"	m	struct:JWGetAccountStatusRsp	access:public
JWGetBasicInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetBasicInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetBasicInfo::nFaceType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nFaceType;\/\/头像类型,1:大头像，2：小头像$/;"	m	struct:JWGetBasicInfo	access:public
JWGetBasicInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetBasicInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetBasicInfoRsp::nBirthday	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nBirthday;\/\/生日,如19800101格式的数字串$/;"	m	struct:JWGetBasicInfoRsp	access:public
JWGetBasicInfoRsp::nGender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nGender;\/\/性别$/;"	m	struct:JWGetBasicInfoRsp	access:public
JWGetBasicInfoRsp::szFaceURL	.\lib\libprotocol\include\jw_struct.h	/^    char szFaceURL[JW_MAX_URL_LEN + 1];\/\/头像URL$/;"	m	struct:JWGetBasicInfoRsp	access:public
JWGetBasicInfoRsp::szName	.\lib\libprotocol\include\jw_struct.h	/^    char szName[JW_MAX_NAME_LEN + 1];\/\/姓名$/;"	m	struct:JWGetBasicInfoRsp	access:public
JWGetBindMobileInfoReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetBindMobileInfoReq:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetBindMobileInfoReq::BindType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char BindType;\/\/绑定的业务类型,见jw_define.h中 jw_bind_type 定义$/;"	m	struct:JWGetBindMobileInfoReq	access:public
JWGetBindMobileInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetBindMobileInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetBindMobileInfoRsp::BindList	.\lib\libprotocol\include\jw_struct.h	/^    JWBindItemInfo BindList[JW_MAX_BIND_MOBILE_NUM];$/;"	m	struct:JWGetBindMobileInfoRsp	access:public
JWGetBindMobileInfoRsp::nNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nNumber;\/\/数量$/;"	m	struct:JWGetBindMobileInfoRsp	access:public
JWGetMobileAreaByNumber	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetMobileAreaByNumber$/;"	s
JWGetMobileAreaByNumber::szMobileNumber	.\lib\libprotocol\include\jw_struct.h	/^    char szMobileNumber[JW_MAX_MOBILE_LEN + 1];$/;"	m	struct:JWGetMobileAreaByNumber	access:public
JWGetMobileAreaInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetMobileAreaInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetMobileAreaInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetMobileAreaInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetMobileAreaInfoRsp::szAreaCode	.\lib\libprotocol\include\jw_struct.h	/^    char szAreaCode[JW_MAX_AREA_CODE_LEN + 1];\/\/手机归属区号$/;"	m	struct:JWGetMobileAreaInfoRsp	access:public
JWGetMobileAreaInfoRsp::szCity	.\lib\libprotocol\include\jw_struct.h	/^    char szCity[JW_MAX_CITY_LEN + 1];\/\/手机归属城市$/;"	m	struct:JWGetMobileAreaInfoRsp	access:public
JWGetMobileAreaInfoRsp::szProviance	.\lib\libprotocol\include\jw_struct.h	/^    char szProviance[JW_MAX_PROVIANCE_LEN + 1];\/\/手机归属省份$/;"	m	struct:JWGetMobileAreaInfoRsp	access:public
JWGetModuleVer	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API unsigned int  JWGetModuleVer();$/;"	p	signature:()
JWGetPackCmd	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWGetPackCmd(const char * p, unsigned short * main_cmd, unsigned short * sub_cmd);$/;"	p	signature:(const char * p, unsigned short * main_cmd, unsigned short * sub_cmd)
JWGetPackLen	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API unsigned int  JWGetPackLen(const char * p);$/;"	p	signature:(const char * p)
JWGetPackSeq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWGetPackSeq(const char * p);$/;"	p	signature:(const char * p)
JWGetSourceType	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API unsigned char  JWGetSourceType(const char * p);$/;"	p	signature:(const char * p)
JWGetStockInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetStockInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetStockInfo::nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockInfo	access:public
JWGetStockInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetStockInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetStockInfoRsp::StockList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockList[JW_MAX_GROUP_STOCK_NUM];\/\/股票列表$/;"	m	struct:JWGetStockInfoRsp	access:public
JWGetStockInfoRsp::nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockInfoRsp	access:public
JWGetStockInfoRsp::nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/拉到的数量$/;"	m	struct:JWGetStockInfoRsp	access:public
JWGetStockRankInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetStockRankInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetStockRankInfo::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/排序类型，1：最多自选排名，2：自选飚升排名$/;"	m	struct:JWGetStockRankInfo	access:public
JWGetStockRankRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetStockRankRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetStockRankRsp::RankList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockRankItem RankList[JW_MAX_RANK_NUM];$/;"	m	struct:JWGetStockRankRsp	access:public
JWGetStockRankRsp::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/排序类型，1：最多自选排名，2：自选飚升排名$/;"	m	struct:JWGetStockRankRsp	access:public
JWGetStockRankRsp::nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/自选股数量$/;"	m	struct:JWGetStockRankRsp	access:public
JWGetStockSortInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetStockSortInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetStockSortInfo::nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockSortInfo	access:public
JWGetStockSortRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetStockSortRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetStockSortRsp::StockList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockList[JW_MAX_GROUP_STOCK_NUM];\/\/股票列表$/;"	m	struct:JWGetStockSortRsp	access:public
JWGetStockSortRsp::nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockSortRsp	access:public
JWGetStockSortRsp::nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/自选股数量$/;"	m	struct:JWGetStockSortRsp	access:public
JWGetUserAccountInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetUserAccountInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetUserAccountRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetUserAccountRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetUserAccountRsp::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/用户帐号信息$/;"	m	struct:JWGetUserAccountRsp	access:public
JWGetUserAliasInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetUserAliasInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWGetUserAliasInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWGetUserAliasInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWGetUserAliasInfoRsp::alias_num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short alias_num;$/;"	m	struct:JWGetUserAliasInfoRsp	access:public
JWGetUserAliasInfoRsp::szAlias	.\lib\libprotocol\include\jw_struct.h	/^    char szAlias[JW_MAX_ALIAS_NUM][JW_MAX_ACCOUNT_LEN + 1];\/\/用户登录别名$/;"	m	struct:JWGetUserAliasInfoRsp	access:public
JWHandleInput	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWHandleInput(const char * buf, unsigned int len);$/;"	p	signature:(const char * buf, unsigned int len)
JWIncomeItem	.\lib\libprotocol\include\jw_struct.h	/^struct JWIncomeItem$/;"	s
JWIncomeItem::dwAmount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwAmount;\/\/收益点数$/;"	m	struct:JWIncomeItem	access:public
JWIncomeItem::dwPayAmount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwPayAmount;\/\/商品支付金额$/;"	m	struct:JWIncomeItem	access:public
JWIncomeItem::dwSaleUIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwSaleUIN;\/\/收益用户UIN$/;"	m	struct:JWIncomeItem	access:public
JWIncomeItem::szProductID	.\lib\libprotocol\include\jw_struct.h	/^    char szProductID[JW_MAX_PRODUCT_ID_LEN + 1];\/\/商品编号$/;"	m	struct:JWIncomeItem	access:public
JWIndustryFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^struct JWIndustryFundFlowData$/;"	s
JWIndustryFundFlowData::ChangeRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ChangeRate; \/\/行业换手率$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::DeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DeltaPercent;\/\/涨跌幅$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::DownCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DownCount; \/\/下跌家数$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::IndustryIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryIndex; \/\/行业索引$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::LeaderStock	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LeaderStock;\/\/行业资领涨股$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::LeaderZDF	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LeaderZDF;\/\/领涨股涨跌幅$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::NetFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetFlowIn;\/\/行业资金净流入$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::NetFlowInPower	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NetFlowInPower;\/\/行业资金净流入力度$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::TimeStamp	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TimeStamp; \/\/时间戳$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::TotalFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowIn;\/\/行业资金总流入$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::TotalFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowOut;\/\/行业资金总流出$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowData::UpCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpCount; \/\/上涨家数$/;"	m	struct:JWIndustryFundFlowData	access:public
JWIndustryFundFlowDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWIndustryFundFlowDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWIndustryFundFlowDataRsp::DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount;\/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
JWIndustryFundFlowDataRsp::IndustryFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^    JWIndustryFundFlowData IndustryFundFlowData[JW_MAX_INDUSTRY_NUM];\/\/行业资金流向数据结构数组$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
JWIndustryFundFlowDataRsp::IndustryNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryNumber;\/\/行业个数$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
JWIndustryFundFlowDataRsp::IndustryType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryType;\/\/行业类型（0=证监会行业; 1=新财富行业）$/;"	m	struct:JWIndustryFundFlowDataRsp	access:public
JWIndustryFundFlowInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWIndustryFundFlowInfo$/;"	s
JWIndustryFundFlowInfo::DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount; \/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWIndustryFundFlowInfo	access:public
JWIndustryFundFlowInfo::IndustryIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryIndex[JW_MAX_INDUSTRY_NUM];\/\/行业索引数组$/;"	m	struct:JWIndustryFundFlowInfo	access:public
JWIndustryFundFlowInfo::IndustryNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryNumber;\/\/行业个数$/;"	m	struct:JWIndustryFundFlowInfo	access:public
JWIndustryFundFlowInfo::IndustryType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short IndustryType;\/\/行业类型（0=证监会行业; 1=新财富行业）$/;"	m	struct:JWIndustryFundFlowInfo	access:public
JWInit	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API void  JWInit();$/;"	p	signature:()
JWKlineFormData	.\lib\libprotocol\include\jw_struct.h	/^struct JWKlineFormData$/;"	s
JWKlineFormData::AppearDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AppearDate; \/\/出现日期（格式：Unix格式时间数值）$/;"	m	struct:JWKlineFormData	access:public
JWKlineFormData::CalculateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int CalculateDate; \/\/计算日期$/;"	m	struct:JWKlineFormData	access:public
JWKlineFormData::FormTurnover	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int FormTurnover;\/\/形态换手率，服务器*1000，客户端\/1000还原$/;"	m	struct:JWKlineFormData	access:public
JWKlineFormData::KLineType	.\lib\libprotocol\include\jw_struct.h	/^    char KLineType[JW_MAX_KLINE_TYPE];\/\/K线形态类型$/;"	m	struct:JWKlineFormData	access:public
JWKlineFormData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWKlineFormData	access:public
JWKlineFormDataReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWKlineFormDataReq$/;"	s
JWKlineFormDataReq::Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number;\/\/请求个数，一般是200个，最大是800个$/;"	m	struct:JWKlineFormDataReq	access:public
JWKlineFormDataReq::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/类型：0、最新看多形态；1、近期看多有效形态；2、最新看空形态；3、近期看空有效形态$/;"	m	struct:JWKlineFormDataReq	access:public
JWKlineFormDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWKlineFormDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWKlineFormDataRsp::KlineFormData	.\lib\libprotocol\include\jw_struct.h	/^    JWKlineFormData KlineFormData[JW_MAX_KLINE_NUM];\/\/$/;"	m	struct:JWKlineFormDataRsp	access:public
JWKlineFormDataRsp::Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number;\/\/请求个数，一般是200个，最大是800个；$/;"	m	struct:JWKlineFormDataRsp	access:public
JWKlineFormDataRsp::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/类型：0、最新看多形态；1、近期看多有效形态；2、最新看空形态；3、近期看空有效形态$/;"	m	struct:JWKlineFormDataRsp	access:public
JWLoginInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWLoginInfo$/;"	s
JWLoginInfo::nClientIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nClientIP;\/\/客户端本机IP，无填0$/;"	m	struct:JWLoginInfo	access:public
JWLoginInfo::nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（接入服务器取到的远端IP）$/;"	m	struct:JWLoginInfo	access:public
JWLoginInfo::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWLoginInfo	access:public
JWLoginInfo::szDCode	.\lib\libprotocol\include\jw_struct.h	/^    char szDCode[JW_MAX_DCODE_LEN + 1];\/\/动态码$/;"	m	struct:JWLoginInfo	access:public
JWLoginInfo::szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWLoginInfo	access:public
JWLoginRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWLoginRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWLoginRsp::UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWLoginRsp	access:public
JWLoginRsp::nStatus	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStatus;\/\/帐号状态$/;"	m	struct:JWLoginRsp	access:public
JWLoginRsp::szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWLoginRsp	access:public
JWLogoutInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWLogoutInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWLogoutInfo::nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP$/;"	m	struct:JWLogoutInfo	access:public
JWLogoutRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWLogoutRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWMarketDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWMarketDataInfo  \/\/个股行情数据结构$/;"	s
JWMarketDataInfo::lFloatShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t lFloatShare;               \/\/流通股$/;"	m	struct:JWMarketDataInfo	access:public
JWMarketDataInfo::lTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t lTotalVolume;              \/\/成交总量$/;"	m	struct:JWMarketDataInfo	access:public
JWMarketDataInfo::nLastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLastPx;               \/\/现价$/;"	m	struct:JWMarketDataInfo	access:public
JWMarketDataInfo::nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;           \/\/昨收价$/;"	m	struct:JWMarketDataInfo	access:public
JWMarketDataInfo::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;         \/\/股票索引$/;"	m	struct:JWMarketDataInfo	access:public
JWMarketDataInfo::nTxTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nTxTime;               \/\/交易时间$/;"	m	struct:JWMarketDataInfo	access:public
JWMinData	.\lib\libprotocol\include\jw_struct.h	/^struct JWMinData$/;"	s
JWMinData::nHighPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nHighPx;                   \/\/最高价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
JWMinData::nLastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLastPx;                   \/\/现价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
JWMinData::nLowPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLowPx;                    \/\/最低价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
JWMinData::nTotalAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalAmount;                  \/\/成交总金额，单位是元, 服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
JWMinData::nTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalVolume;                  \/\/成交总量, 服务端\/100000，单位是手，客户端 x100$/;"	m	struct:JWMinData	access:public
JWMinData::nTxTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nTxTime;                   \/\/交易时间$/;"	m	struct:JWMinData	access:public
JWModifyPwdInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWModifyPwdInfo$/;"	s
JWModifyPwdInfo::nClientIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nClientIP;\/\/客户端本机IP，无填0$/;"	m	struct:JWModifyPwdInfo	access:public
JWModifyPwdInfo::nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（接入服务器取到的远端IP）$/;"	m	struct:JWModifyPwdInfo	access:public
JWModifyPwdInfo::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWModifyPwdInfo	access:public
JWModifyPwdInfo::szDCode	.\lib\libprotocol\include\jw_struct.h	/^    char szDCode[JW_MAX_DCODE_LEN + 1];\/\/动态码$/;"	m	struct:JWModifyPwdInfo	access:public
JWModifyPwdInfo::szNewPwd	.\lib\libprotocol\include\jw_struct.h	/^    char szNewPwd[JW_MAX_PWD_LEN + 1];\/\/用户密码(md5 32)$/;"	m	struct:JWModifyPwdInfo	access:public
JWModifyPwdInfo::szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWModifyPwdInfo	access:public
JWModifyUserPwdRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWModifyUserPwdRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWMultiEmptyGameData	.\lib\libprotocol\include\jw_struct.h	/^struct JWMultiEmptyGameData$/;"	s
JWMultiEmptyGameData::Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date;\/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWMultiEmptyGameData	access:public
JWMultiEmptyGameData::OpenPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int OpenPx;\/\/开盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
JWMultiEmptyGameData::ParamName	.\lib\libprotocol\include\jw_struct.h	/^    char ParamName[JW_MAX_PARAMNAME_LEN];\/\/指标名称$/;"	m	struct:JWMultiEmptyGameData	access:public
JWMultiEmptyGameData::PreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PreClosePx;\/\/收盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
JWMultiEmptyGameData::SuccessRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int SuccessRate;\/\/成功率，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
JWMultiEmptyGameData::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/类型： 1：金叉\/2：死叉$/;"	m	struct:JWMultiEmptyGameData	access:public
JWMultiEmptyGameData::Yield	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Yield;\/\/收益率，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
JWMultiEmptyGameDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWMultiEmptyGameDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWMultiEmptyGameDataRsp::CalculateDateNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short CalculateDateNum;\/\/计算天数$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
JWMultiEmptyGameDataRsp::MultiEmptyGameData	.\lib\libprotocol\include\jw_struct.h	/^    JWMultiEmptyGameData MultiEmptyGameData[JW_MAX_MULTI_EMPTY_GAME_CAMP];\/\/内容的个数$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
JWMultiEmptyGameDataRsp::Num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Num;\/\/内容的个数$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
JWMultiEmptyGameDataRsp::StartCalculateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int StartCalculateDate;\/\/开始计算日期（格式：Unix格式时间数值）$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
JWMultiEmptyGameDataRsp::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
JWPackActiveReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackActiveReq(char *buf, int len, const JWActiveAccountInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWActiveAccountInfo *pInfo)
JWPackAddStockReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackAddStockReq(char * buf, int buf_len, const JWAddStockInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWAddStockInfo * pInfo)
JWPackBatchBriefMarketDataReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackBatchBriefMarketDataReq(char *buf, int len, const JWBatchBriefMarketDataInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWBatchBriefMarketDataInfo *pInfo)
JWPackBatchStockNewsNumInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackBatchStockNewsNumInfoReq(char *buf, int len, const JWBatchStockNewsNumInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWBatchStockNewsNumInfo *pInfo)
JWPackBindMobileInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackBindMobileInfoReq(char * buf, int buf_len, const JWBindMobileInfoReq * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWBindMobileInfoReq * pInfo)
JWPackBindVerifyInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackBindVerifyInfoReq(char * buf, int buf_len, const JWBindVerifyInfoReq * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWBindVerifyInfoReq * pInfo)
JWPackCheckTicketReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackCheckTicketReq(char * buf, int buf_len, const JWCheckTicketInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWCheckTicketInfo * pInfo)
JWPackCostDistributionDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackCostDistributionDataReq(char *buf, int len, const unsigned int StockIndex);$/;"	p	signature:(char *buf, int len, const unsigned int StockIndex)
JWPackCostDistributionDetailReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackCostDistributionDetailReq(char *buf, int len, const unsigned int StockIndex);$/;"	p	signature:(char *buf, int len, const unsigned int StockIndex)
JWPackCreateAccountReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackCreateAccountReq(char * buf, int buf_len, const JWCreateAccountInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWCreateAccountInfo * pInfo)
JWPackDelStockReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackDelStockReq(char * buf, int buf_len, const JWDelStockInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWDelStockInfo * pInfo)
JWPackEarlyWarningReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackEarlyWarningReq(char *buf, int len, const JWEarlyWarningInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWEarlyWarningInfo *pInfo)
JWPackGetAccountRegTimeReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetAccountRegTimeReq(char * buf, int buf_len, const JWGetAccountRegTimeInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetAccountRegTimeInfo * pInfo)
JWPackGetAccountStatusReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetAccountStatusReq(char * buf, int buf_len, const JWGetAccountStatusInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetAccountStatusInfo * pInfo)
JWPackGetBasicInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetBasicInfoReq(char * buf, int buf_len, const JWGetBasicInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetBasicInfo * pInfo)
JWPackGetBindMobileInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetBindMobileInfoReq(char * buf, int buf_len, const JWGetBindMobileInfoReq * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetBindMobileInfoReq * pInfo)
JWPackGetDDEDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetDDEDataReq(char *buf, int len, const JWDdeDataInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWDdeDataInfo *pInfo)
JWPackGetDDEHisDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetDDEHisDataReq(char *buf, int len, const JWDdeHisDataInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWDdeHisDataInfo *pInfo)
JWPackGetDDSortDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetDDSortDataReq(char *buf, int len, const JWDdsortDataInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWDdsortDataInfo *pInfo)
JWPackGetDiagnoseDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetDiagnoseDataReq(char *buf, int len, const unsigned short stockindex);$/;"	p	signature:(char *buf, int len, const unsigned short stockindex)
JWPackGetFinancialMainCostDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetFinancialMainCostDataReq(char *buf, int len, const JWFinancialMainCostReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWFinancialMainCostReq *reqInfo)
JWPackGetFundAluationReserchDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetFundAluationReserchDataReq(char *buf, int len, const JWFundAluationReserchReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWFundAluationReserchReq *reqInfo)
JWPackGetFundAmentalsAnalysisDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetFundAmentalsAnalysisDataReq(char *buf, int len, const JWFundAmentalsAnalysisReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWFundAmentalsAnalysisReq *reqInfo)
JWPackGetFundAmentalsTargetsDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetFundAmentalsTargetsDataReq(char *buf, int len, const JWFundAmentalsTargetsReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWFundAmentalsTargetsReq *reqInfo)
JWPackGetFundIndustryRanksDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetFundIndustryRanksDataReq(char *buf, int len, const JWFundIndustryRanksReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWFundIndustryRanksReq *reqInfo)
JWPackGetFundOrganizationViewDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetFundOrganizationViewDataReq(char *buf, int len, const JWFundOrganizationViewReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWFundOrganizationViewReq *reqInfo)
JWPackGetJWKlineFormDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetJWKlineFormDataReq(char *buf, int len, const JWKlineFormDataReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWKlineFormDataReq *reqInfo)
JWPackGetMobileAreaByNumberReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetMobileAreaByNumberReq(char * buf, int buf_len, const JWGetMobileAreaByNumber * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetMobileAreaByNumber * pInfo)
JWPackGetMobileAreaInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetMobileAreaInfoReq(char * buf, int buf_len, const JWGetMobileAreaInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetMobileAreaInfo * pInfo)
JWPackGetMultiEmptyGameDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetMultiEmptyGameDataReq(char *buf, int len, const unsigned short stockindex);$/;"	p	signature:(char *buf, int len, const unsigned short stockindex)
JWPackGetRefereceDataReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackGetRefereceDataReq(char *buf, int len);$/;"	p	signature:(char *buf, int len)
JWPackGetRegInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackGetRegInfoReq(char *buf, int len, const JWAccountInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWAccountInfo *pInfo)
JWPackGetStkFundFlowDetailDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetStkFundFlowDetailDataReq(char *buf, int len, const JWStkFundFlowDataDetailReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWStkFundFlowDataDetailReq *reqInfo)
JWPackGetStockListReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetStockListReq(char * buf, int buf_len, const JWGetStockInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetStockInfo * pInfo)
JWPackGetStockRankReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetStockRankReq(char * buf, int buf_len, const JWGetStockRankInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetStockRankInfo * pInfo)
JWPackGetStockSortReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetStockSortReq(char * buf, int buf_len, const JWGetStockSortInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetStockSortInfo * pInfo)
JWPackGetTechniccalAndMarketDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetTechniccalAndMarketDataReq(char *buf, int len, const JWTechniccalAndMarketReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWTechniccalAndMarketReq *reqInfo)
JWPackGetTechniccalTrendAnaysisDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackGetTechniccalTrendAnaysisDataReq(char *buf, int len, const JWTechniccalTrendAnaysisReq *reqInfo);$/;"	p	signature:(char *buf, int len, const JWTechniccalTrendAnaysisReq *reqInfo)
JWPackGetTicketReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackGetTicketReq(char *buf, int len, const JWAuthInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWAuthInfo *pInfo)
JWPackGetUserAccountReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetUserAccountReq(char * buf, int buf_len, const JWGetUserAccountInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetUserAccountInfo * pInfo)
JWPackGetUserAliasReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackGetUserAliasReq(char * buf, int buf_len, const JWGetUserAliasInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWGetUserAliasInfo * pInfo)
JWPackIndustryFundFlowDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackIndustryFundFlowDataReq(char *buf, int len, const JWIndustryFundFlowInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWIndustryFundFlowInfo *pInfo)
JWPackKeepAliveReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackKeepAliveReq(char * buf, int buf_len, const JWCommonReqInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWCommonReqInfo * pInfo)
JWPackLoginReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackLoginReq(char * buf, int buf_len, const JWLoginInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWLoginInfo * pInfo)
JWPackLogoutReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackLogoutReq(char * buf, int buf_len, const JWLogoutInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWLogoutInfo * pInfo)
JWPackModifyUserPwdReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackModifyUserPwdReq(char * buf, int buf_len, const JWModifyPwdInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWModifyPwdInfo * pInfo)
JWPackPayTicketIncomeNotifyReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackPayTicketIncomeNotifyReq(char * buf, int buf_len, const JWPayTicketIncomeInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWPayTicketIncomeInfo * pInfo)
JWPackPullMarketDataReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackPullMarketDataReq(char *buf, int len, const JWPullMarketDataInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWPullMarketDataInfo *pInfo)
JWPackPullMinDataReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackPullMinDataReq(char *buf, int len, const JWPullMinuteDataInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWPullMinuteDataInfo *pInfo)
JWPackRadarIndicatorReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackRadarIndicatorReq(char *buf, int len, const JWStockRadarIndicatorInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWStockRadarIndicatorInfo *pInfo)
JWPackRegReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackRegReq(char *buf, int len, const JWRegAccountInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWRegAccountInfo *pInfo)
JWPackResetPwdReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackResetPwdReq(char * buf, int buf_len, const JWResetPwdInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWResetPwdInfo * pInfo)
JWPackRiseFallBreadthDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackRiseFallBreadthDataReq(char *buf, int len, const JWRiseFallBreadthDataInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWRiseFallBreadthDataInfo *pInfo)
JWPackSetBasicInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackSetBasicInfoReq(char * buf, int buf_len, const JWSetBasicInfoReq * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWSetBasicInfoReq * pInfo)
JWPackSetStockSortReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackSetStockSortReq(char * buf, int buf_len, const JWSetStockSortInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWSetStockSortInfo * pInfo)
JWPackSetUserAliasReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackSetUserAliasReq(char * buf, int buf_len, const JWSetUserAliasInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWSetUserAliasInfo * pInfo)
JWPackStatReportInfoReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackStatReportInfoReq(char * buf, int buf_len, const JWStatReportInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWStatReportInfo * pInfo)
JWPackStkFundFlowDataReq	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWPackStkFundFlowDataReq(char *buf, int len, const JWStkFundFlowInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWStkFundFlowInfo *pInfo)
JWPackStockNewsContentReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWPackStockNewsContentReq(char *buf, int len, const JWStkNewsContentInfo *pInfo);$/;"	p	signature:(char *buf, int len, const JWStkNewsContentInfo *pInfo)
JWPackUpdTicketReq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWPackUpdTicketReq(char * buf, int buf_len, const JWUpdTicketInfo * pInfo);$/;"	p	signature:(char * buf, int buf_len, const JWUpdTicketInfo * pInfo)
JWPayTicketIncomeInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWPayTicketIncomeInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWPayTicketIncomeInfo::ItemList	.\lib\libprotocol\include\jw_struct.h	/^    JWIncomeItem ItemList[JW_MAX_INCOME_NUM];$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JWPayTicketIncomeInfo::dwIncomeNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwIncomeNum;\/\/收益个数$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JWPayTicketIncomeInfo::dwOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwOrderAmount;\/\/订单金额$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JWPayTicketIncomeInfo::dwOrderResult	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwOrderResult;\/\/订单状态$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JWPayTicketIncomeInfo::dwSubmitTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwSubmitTime;\/\/订单提交时间$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JWPayTicketIncomeInfo::qwSeq	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t qwSeq;\/\/流水号$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JWPayTicketIncomeInfo::szOrderID	.\lib\libprotocol\include\jw_struct.h	/^    char szOrderID[JW_MAX_ORDERID_LEN +1];\/\/订单号$/;"	m	struct:JWPayTicketIncomeInfo	access:public
JWPayTicketIncomeRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWPayTicketIncomeRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWPullMarketDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWPullMarketDataInfo$/;"	s
JWPullMarketDataInfo::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex[JW_MAX_STOCK_NUM];  \/\/个股索引$/;"	m	struct:JWPullMarketDataInfo	access:public
JWPullMarketDataInfo::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                   \/\/个股数量$/;"	m	struct:JWPullMarketDataInfo	access:public
JWPullMarketDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWPullMarketDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWPullMarketDataRsp::StockDetail	.\lib\libprotocol\include\jw_struct.h	/^    JWStockDetail StockDetail[JW_MAX_STOCK_NUM];   \/\/个股详情数组$/;"	m	struct:JWPullMarketDataRsp	access:public
JWPullMarketDataRsp::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                   \/\/个股行情数$/;"	m	struct:JWPullMarketDataRsp	access:public
JWPullMinuteDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWPullMinuteDataInfo:public JWPullMarketDataInfo$/;"	s	inherits:JWPullMarketDataInfo
JWPullMinuteDataInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWPullMinuteDataInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWPullMinuteDataInfoRsp::StockMinData	.\lib\libprotocol\include\jw_struct.h	/^   JWStockMinData StockMinData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWPullMinuteDataInfoRsp	access:public
JWPullMinuteDataInfoRsp::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^   unsigned short nStockNumber;$/;"	m	struct:JWPullMinuteDataInfoRsp	access:public
JWRegAccountInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWRegAccountInfo $/;"	s
JWRegAccountInfo::IsActivate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char IsActivate;\/\/是否注册同时激活,0:不激活,1:立即激活$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::advid	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int advid;\/\/广告来源ID$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::attention	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int attention;\/\/操盘风格.$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::birth	.\lib\libprotocol\include\jw_struct.h	/^    char birth[JW_MAX_BIRTH_LEN+1];\/\/生日,格式为YYYY\/MM\/DD,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::city	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int city;\/\/居住地$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::gender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char gender;\/\/性别0:未知,1:男,2:女$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::internalID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int internalID;\/\/内部ID,如注册来源URL等$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::investLevel	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short investLevel;\/\/投资能力 0:有点余钱，想看看   1：经济能力一般  2：中产阶级 3：比较富裕  4:什么都没有$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::ip_addr	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ip_addr;\/\/用户注册时的IP$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::name	.\lib\libprotocol\include\jw_struct.h	/^    char name[JW_MAX_NAME_LEN+1];\/\/用户姓名，,utf-8编码,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::operatorStyle	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int operatorStyle;\/\/操盘风格 ,每一bit代表一项  0：短线 1：中线 2：长线 $/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::password	.\lib\libprotocol\include\jw_struct.h	/^    char password[JW_MAX_PWD_LEN+1];\/\/ 小写的md5密码,32字节$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::productType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int productType;\/\/嵌入页面类型，$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountInfo::verify_code	.\lib\libprotocol\include\jw_struct.h	/^    char verify_code[JW_MAX_DCODE_LEN+1];\/\/激活码,utf-8编码,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
JWRegAccountRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWRegAccountRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWRegAccountRsp::szEmail	.\lib\libprotocol\include\jw_struct.h	/^    char szEmail[JW_MAX_MAIL_LEN+1];\/\/邮件登录地址$/;"	m	struct:JWRegAccountRsp	access:public
JWRegionData	.\lib\libprotocol\include\jw_struct.h	/^struct  JWRegionData$/;"	s
JWRegionData::HangupAmount	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int HangupAmount; \/\/套牢金额（客户端  \/1000），单位：万元(CBFB)$/;"	m	struct:JWRegionData	access:public
JWRegionData::HangupNumber	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int HangupNumber;\/\/套牢手数（客户端  \/1000），,单位：手(CBFB)$/;"	m	struct:JWRegionData	access:public
JWRegionData::RegionBegin	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int RegionBegin;  \/\/区间起点（客户端  \/1000）,单位：元(CBFB)$/;"	m	struct:JWRegionData	access:public
JWRegionData::RegionEnd	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int RegionEnd;  \/\/区间终点（客户端  \/1000）,单位：元(CBFB)$/;"	m	struct:JWRegionData	access:public
JWRegionData::RegionType	.\lib\libprotocol\include\jw_struct.h	/^       unsigned char RegionType; \/\/区间类型：(CBFB)$/;"	m	struct:JWRegionData	access:public
JWRegionData_0A18	.\lib\libprotocol\include\jw_struct.h	/^struct  JWRegionData_0A18$/;"	s
JWRegionData_0A18::RegionBegin	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int RegionBegin; \/\/区间起点$/;"	m	struct:JWRegionData_0A18	access:public
JWRegionData_0A18::RegionEnd	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int RegionEnd;   \/\/区间终点$/;"	m	struct:JWRegionData_0A18	access:public
JWRegionData_0A18::RegionType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char RegionType; \/\/区间类型：$/;"	m	struct:JWRegionData_0A18	access:public
JWRegionDetailData	.\lib\libprotocol\include\jw_struct.h	/^struct JWRegionDetailData$/;"	s
JWRegionDetailData::ChipsNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ChipsNumber; \/\/筹码数$/;"	m	struct:JWRegionDetailData	access:public
JWRegionDetailData::DealPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DealPx;  \/\/成交价$/;"	m	struct:JWRegionDetailData	access:public
JWResetPwdInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWResetPwdInfo$/;"	s
JWResetPwdInfo::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWResetPwdInfo	access:public
JWResetPwdRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWResetPwdRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWResetPwdRsp::szNewPwd	.\lib\libprotocol\include\jw_struct.h	/^    char szNewPwd[JW_MAX_PWD_LEN + 1];\/\/用户新密码$/;"	m	struct:JWResetPwdRsp	access:public
JWRiseFallBreadthData	.\lib\libprotocol\include\jw_struct.h	/^struct JWRiseFallBreadthData$/;"	s
JWRiseFallBreadthData::BreadthValue	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int BreadthValue;\/\/幅度值（ 幅度值=((现价-昨收)\/昨收)*100000 ），服务器 x100000 客户端\/100000$/;"	m	struct:JWRiseFallBreadthData	access:public
JWRiseFallBreadthData::LastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LastPx;\/\/现价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWRiseFallBreadthData	access:public
JWRiseFallBreadthData::PreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PreClosePx;\/\/昨收价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWRiseFallBreadthData	access:public
JWRiseFallBreadthData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWRiseFallBreadthData	access:public
JWRiseFallBreadthDataInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWRiseFallBreadthDataInfo$/;"	s
JWRiseFallBreadthDataInfo::Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number; \/\/数据条数，返回从最新往前的数据。一般服务器上提供60条数据。如果填1，那么会返回最新的一条数据$/;"	m	struct:JWRiseFallBreadthDataInfo	access:public
JWRiseFallBreadthDataInfo::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/股票索引$/;"	m	struct:JWRiseFallBreadthDataInfo	access:public
JWRiseFallBreadthDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWRiseFallBreadthDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWRiseFallBreadthDataRsp::Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Number; \/\/数据条数，最大100条$/;"	m	struct:JWRiseFallBreadthDataRsp	access:public
JWRiseFallBreadthDataRsp::RiseFallBreadthData	.\lib\libprotocol\include\jw_struct.h	/^    JWRiseFallBreadthData RiseFallBreadthData[JW_MAX_RISE_FALL_NUM];\/\/行情涨跌幅数据结构数组$/;"	m	struct:JWRiseFallBreadthDataRsp	access:public
JWRiseFallBreadthDataRsp::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type; \/\/类型：1为涨幅，2为跌幅$/;"	m	struct:JWRiseFallBreadthDataRsp	access:public
JWSellLevel	.\lib\libprotocol\include\jw_struct.h	/^struct JWSellLevel$/;"	s
JWSellLevel::nSellPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nSellPx;          \/\/委卖价$/;"	m	struct:JWSellLevel	access:public
JWSellLevel::nSellVolume	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nSellVolume;      \/\/委卖量$/;"	m	struct:JWSellLevel	access:public
JWSetBasicInfoReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWSetBasicInfoReq:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWSetBasicInfoReq::nBirthday	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nBirthday;\/\/生日,如19800101格式的数字串$/;"	m	struct:JWSetBasicInfoReq	access:public
JWSetBasicInfoReq::nGender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nGender;\/\/性别$/;"	m	struct:JWSetBasicInfoReq	access:public
JWSetBasicInfoReq::szName	.\lib\libprotocol\include\jw_struct.h	/^    char szName[JW_MAX_NAME_LEN + 1];\/\/姓名$/;"	m	struct:JWSetBasicInfoReq	access:public
JWSetBasicInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWSetBasicInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWSetPackSeq	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API void  JWSetPackSeq(const char * p, unsigned int seq);$/;"	p	signature:(const char * p, unsigned int seq)
JWSetSourceType	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API void  JWSetSourceType(const char * p, unsigned char source_type);$/;"	p	signature:(const char * p, unsigned char source_type)
JWSetStockSortInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWSetStockSortInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWSetStockSortInfo::StockList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockList[JW_MAX_GROUP_STOCK_NUM];\/\/股票列表$/;"	m	struct:JWSetStockSortInfo	access:public
JWSetStockSortInfo::nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWSetStockSortInfo	access:public
JWSetStockSortInfo::nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/自选股数量$/;"	m	struct:JWSetStockSortInfo	access:public
JWSetStockSortRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWSetStockSortRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWSetUserAliasInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWSetUserAliasInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWSetUserAliasInfo::OpType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char OpType;\/\/操作类型，1:添加,2:删除$/;"	m	struct:JWSetUserAliasInfo	access:public
JWSetUserAliasInfo::szAlias	.\lib\libprotocol\include\jw_struct.h	/^    char szAlias[JW_MAX_ACCOUNT_LEN + 1];\/\/用户登录别名$/;"	m	struct:JWSetUserAliasInfo	access:public
JWSetUserAliasInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWSetUserAliasInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWStatReportInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWStatReportInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWStatReportInfo::nDataType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nDataType;\/\/上报数据类型,参见<用户数据上报格式说明.docx>$/;"	m	struct:JWStatReportInfo	access:public
JWStatReportInfo::nSrcIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSrcIP;\/\/用户来源IP地址$/;"	m	struct:JWStatReportInfo	access:public
JWStatReportInfo::nSrcType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nSrcType;\/\/上报数据的产品来源$/;"	m	struct:JWStatReportInfo	access:public
JWStatReportInfo::szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/用户帐号信息$/;"	m	struct:JWStatReportInfo	access:public
JWStatReportInfo::szContent	.\lib\libprotocol\include\jw_struct.h	/^    char szContent[JW_MAX_CONTENT_LEN + 1];\/\/上报内容,长度限制为4K$/;"	m	struct:JWStatReportInfo	access:public
JWStatReportRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWStatReportRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWStkFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkFundFlowData$/;"	s
JWStkFundFlowData::AmountInRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AmountInRate;\/\/净流入占成交额比$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::AmountOutRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AmountOutRate;\/\/净流出占成交额比$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::AreaAmountRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaAmountRate;\/\/占区间总成交比例$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::AreaChangeRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaChangeRate;\/\/区间换手率 $/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::AreaClose	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaClose; \/\/区间收盘价$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::AreaDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaDate;$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::AreaDeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AreaDeltaPercent;\/\/区间涨跌幅$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::ChangeRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ChangeRate;\/\/换手率$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount; \/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::DeltaPercent	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int DeltaPercent; \/\/涨跌幅$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::ImpetusBill	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ImpetusBill;\/\/大单动能 $/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::IndustryCode	.\lib\libprotocol\include\jw_struct.h	/^    char IndustryCode[JW_MAX_INDU_CODE_LEN];\/\/行业代码$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::MainNetFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t MainNetFlowIn; \/\/主力净流入$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::MainNetFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t MainNetFlowOut;\/\/主力净流出$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::MainNetInRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MainNetInRate;\/\/主力净流入力度$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::MainNetOutRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MainNetOutRate;\/\/主力净流出力度$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::NetBigBill	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetBigBill;\/\/大单净量$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::NetFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetFlowIn;\/\/净流入$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::NetFlowInPower	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NetFlowInPower;\/\/净流入力度 $/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::NetFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetFlowOut;\/\/净流出$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::NetFlowOutPower	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NetFlowOutPower;\/\/净流出力度 $/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::NowPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NowPrice; \/\/现价，服务端 x1000，客户端 \/1000 （大赢家传过来的的数据就已经x1000， 股票服务器透传，客户端需要\/1000）$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::SeriesAddDays	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int SeriesAddDays;\/\/连续增仓天数$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::SeriesNetIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetIn; \/\/连续增仓机构净流入服务器\/1000$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::SeriesNetInPower	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetInPower;\/\/连续减仓机构净流入力度$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::SeriesNetOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetOut;\/\/连续增仓机构净流出服务器\/1000$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::SeriesNetOutPower	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetOutPower;\/\/连续减仓机构净流出力度$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::TimeStamp	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TimeStamp; \/\/时间戳$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::TotalFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowIn; \/\/总流入$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::TotalFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowOut;\/\/总流出$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::nDayClose	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nDayClose;\/\/3日或者5日或者其它日期的收盘价$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowData::nDayDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nDayDate;$/;"	m	struct:JWStkFundFlowData	access:public
JWStkFundFlowDataDetailReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkFundFlowDataDetailReq:public JWDdeDataInfo$/;"	s	inherits:JWDdeDataInfo
JWStkFundFlowDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkFundFlowDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWStkFundFlowDataRsp::StkFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^    JWStkFundFlowData StkFundFlowData[JW_MAX_STOCK_NUM];\/\/资金流向数据结构数组$/;"	m	struct:JWStkFundFlowDataRsp	access:public
JWStkFundFlowDataRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWStkFundFlowDataRsp	access:public
JWStkFundFlowDetailData	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkFundFlowDetailData$/;"	s
JWStkFundFlowDetailData::BuyBigOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrderAmount;\/\/买入大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::BuyBigOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyBigOrderVolume;\/\/买入大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::BuyLargeOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrderAmount;\/\/买入特大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::BuyLargeOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyLargeOrderVolume;\/\/买入特大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::BuyMidOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrderAmount;\/\/买入中单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::BuyMidOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMidOrderVolume;\/\/买入中单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::BuyMinOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrderAmount;\/\/买入小单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::BuyMinOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t BuyMinOrderVolume;\/\/买入小单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::Date	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Date;\/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::DealCountAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t DealCountAmount;\/\/成交额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::DealCountVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t DealCountVolume;\/\/成交笔数量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelBigOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrderAmount;\/\/卖出大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelBigOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrderVolume;\/\/卖出大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelLargeOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrderAmount;\/\/卖出特大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelLargeOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrderVolume;\/\/卖出特大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelMidOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrderAmount;\/\/卖出中单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelMidOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrderVolume;\/\/卖出中单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelMinOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrderAmount;\/\/卖出小单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::SelMinOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrderVolume;\/\/卖出小单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWStkFundFlowDetailData	access:public
JWStkFundFlowDetailDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkFundFlowDetailDataRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWStkFundFlowDetailDataRsp::StkFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^    JWStkFundFlowDetailData StkFundFlowData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWStkFundFlowDetailDataRsp	access:public
JWStkFundFlowDetailDataRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWStkFundFlowDetailDataRsp	access:public
JWStkFundFlowInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkFundFlowInfo$/;"	s
JWStkFundFlowInfo::DayCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short DayCount; \/\/日期类型(0=今日、1=3日、2=5日、3=10日、4=20日)$/;"	m	struct:JWStkFundFlowInfo	access:public
JWStkFundFlowInfo::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex[JW_MAX_STOCK_NUM]; \/\/股票索引数组$/;"	m	struct:JWStkFundFlowInfo	access:public
JWStkFundFlowInfo::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWStkFundFlowInfo	access:public
JWStkNewsContentInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkNewsContentInfo$/;"	s
JWStkNewsContentInfo::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;                       \/\/股票索引$/;"	m	struct:JWStkNewsContentInfo	access:public
JWStkNewsContentInfo::szSecuFid	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuFid[JW_MAX_SECUFID_LEN];               \/\/新闻内容ID串（该值为拉取自选股时候从服务器中取到的SecuFid）$/;"	m	struct:JWStkNewsContentInfo	access:public
JWStkNewsContentInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWStkNewsContentInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWStkNewsContentInfoRsp::nSecuNewsTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSecuNewsTime;                            \/\/个股新闻时间(Mine\/GP, unix时间)$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
JWStkNewsContentInfoRsp::szNewsContent	.\lib\libprotocol\include\jw_struct.h	/^    char szNewsContent[JW_NEW_CONTENT_LEN];                \/\/新闻内容$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
JWStkNewsContentInfoRsp::szNewsMedia	.\lib\libprotocol\include\jw_struct.h	/^    char szNewsMedia[JW_NEWSMEDIA_LEN];                    \/\/新闻出处$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
JWStkNewsContentInfoRsp::szSecuNewsTitle	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuNewsTitle[JW_MAX_SECU_NEWS_TITLE_LEN];      \/\/个股新闻标题(Mine\/GP)$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
JWStkNewsContentInfoRsp::szStockName	.\lib\libprotocol\include\jw_struct.h	/^    char szStockName[JW_MAX_STOCK_NAME_LEN];               \/\/股票名称$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
JWStockAllNewsData	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockAllNewsData$/;"	s
JWStockAllNewsData::NewsData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockSingleNewsData NewsData[20]; \/\/单只股票最大拉取20条新闻$/;"	m	struct:JWStockAllNewsData	access:public
JWStockAllNewsData::nNewsNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned nNewsNum;$/;"	m	struct:JWStockAllNewsData	access:public
JWStockAllNewsData::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;$/;"	m	struct:JWStockAllNewsData	access:public
JWStockBriefMacketData	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockBriefMacketData  \/\/股票简易行情数据结构$/;"	s
JWStockBriefMacketData::nFloatShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nFloatShare;          \/\/流通股$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nLastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLastPx;          \/\/现价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nOpenPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nOpenPx;          \/\/开盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nPanCha	.\lib\libprotocol\include\jw_struct.h	/^    int nPanCha;                   \/\/盘差，可能<0$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;      \/\/昨收价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;    \/\/股票索引$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nTotalAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalAmount;         \/\/成交总金额，单位是元$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalVolume;         \/\/成交总量，单位是手，客户端 x100$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nTxTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nTxTime;          \/\/交易时间$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockBriefMacketData::nVolumeRatio	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nVolumeRatio;      \/\/量比，服务端 \/10 (因为大赢家传的数据 已经x1000)，客户端 \/100$/;"	m	struct:JWStockBriefMacketData	access:public
JWStockDetail	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockDetail \/\/个股详情$/;"	s
JWStockDetail::BuyInfo	.\lib\libprotocol\include\jw_struct.h	/^	JWBuyLevel BuyInfo[JW_MAX_STOCK_BUY_SELL_NUM];\/\/委买详情$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::SellInfo	.\lib\libprotocol\include\jw_struct.h	/^	JWSellLevel SellInfo[JW_MAX_STOCK_BUY_SELL_NUM];\/\/委卖详情$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::cBuyLevel	.\lib\libprotocol\include\jw_struct.h	/^	unsigned char cBuyLevel;                      \/\/委买个数$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::cSellLevel	.\lib\libprotocol\include\jw_struct.h	/^	unsigned char cSellLevel;                     \/\/委卖个数$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::lFloatShare	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lFloatShare;                         \/\/流通股$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::lTotalAmount	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lTotalAmount;                        \/\/成交总金额$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::lTotalShare	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lTotalShare;                         \/\/总股本$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::lTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lTotalVolume;                        \/\/成交总量$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nHighPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nHighPx;                         \/\/最高价$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nLastPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nLastPx;                         \/\/现价$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nLowPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nLowPx;                          \/\/最低价$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nOpenPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nOpenPx;                         \/\/开盘价$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nPanCha	.\lib\libprotocol\include\jw_struct.h	/^	int nPanCha;                                  \/\/盘差$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nPreClosePx;                     \/\/昨收价$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^	unsigned short nStockIndex;                   \/\/股票索引$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nTxTime	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nTxTime;                         \/\/交易时间$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nVolumeRatio	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nVolumeRatio;                    \/\/量比$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nWeiBi	.\lib\libprotocol\include\jw_struct.h	/^	int nWeiBi;                                   \/\/委比$/;"	m	struct:JWStockDetail	access:public
JWStockDetail::nWeiCha	.\lib\libprotocol\include\jw_struct.h	/^	int nWeiCha;                                  \/\/委差$/;"	m	struct:JWStockDetail	access:public
JWStockGetRefereceDataRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockGetRefereceDataRsp : public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWStockGetRefereceDataRsp::StockInfoData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockInfoData StockInfoData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWStockGetRefereceDataRsp	access:public
JWStockGetRefereceDataRsp::nRefVersion	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nRefVersion; \/\/codelist版本号$/;"	m	struct:JWStockGetRefereceDataRsp	access:public
JWStockGetRefereceDataRsp::nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStockNumber;$/;"	m	struct:JWStockGetRefereceDataRsp	access:public
JWStockInfoData	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockInfoData$/;"	s
JWStockInfoData::nFloatShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nFloatShare;                                 \/\/流通股$/;"	m	struct:JWStockInfoData	access:public
JWStockInfoData::nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;                             \/\/昨收价$/;"	m	struct:JWStockInfoData	access:public
JWStockInfoData::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;                           \/\/股票索引$/;"	m	struct:JWStockInfoData	access:public
JWStockInfoData::nStockType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStockType;                              \/\/股票类型$/;"	m	struct:JWStockInfoData	access:public
JWStockInfoData::nTotalShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalShare;                                 \/\/总股本$/;"	m	struct:JWStockInfoData	access:public
JWStockInfoData::szStockCode	.\lib\libprotocol\include\jw_struct.h	/^    char szStockCode[JW_MAX_STOCKCODE_LEN];               \/\/股票代码$/;"	m	struct:JWStockInfoData	access:public
JWStockInfoData::szStockName	.\lib\libprotocol\include\jw_struct.h	/^    char szStockName[JW_MAX_STOCK_NAME_LEN];              \/\/股票名称$/;"	m	struct:JWStockInfoData	access:public
JWStockInfoData::szStockShortName	.\lib\libprotocol\include\jw_struct.h	/^    char szStockShortName[JW_STOCK_SHORT_NAME_LEN];       \/\/股票简称$/;"	m	struct:JWStockInfoData	access:public
JWStockKey	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockKey$/;"	s
JWStockKey::nMarketType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nMarketType;\/\/市场类型$/;"	m	struct:JWStockKey	access:public
JWStockKey::szStockCode	.\lib\libprotocol\include\jw_struct.h	/^    char szStockCode[JW_MAX_STOCK_CODE_LEN + 1];\/\/股票代码$/;"	m	struct:JWStockKey	access:public
JWStockMinData	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockMinData$/;"	s
JWStockMinData::MinData	.\lib\libprotocol\include\jw_struct.h	/^    JWMinData MinData[JW_MAX_MINDATA_NUM];  \/\/分时数据$/;"	m	struct:JWStockMinData	access:public
JWStockMinData::nMinDataNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nMinDataNum;              \/\/分时数据个数$/;"	m	struct:JWStockMinData	access:public
JWStockMinData::nOpenPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nOpenPx;                    \/\/开盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockMinData	access:public
JWStockMinData::nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;                \/\/昨收价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockMinData	access:public
JWStockMinData::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;              \/\/股票索引$/;"	m	struct:JWStockMinData	access:public
JWStockMinData::nStockType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStockType;                  \/\/市场类型$/;"	m	struct:JWStockMinData	access:public
JWStockMinData::szStockCode	.\lib\libprotocol\include\jw_struct.h	/^    char szStockCode[JW_MAX_STOCKCODE_LEN]; \/\/股票代码（utf-8编码）$/;"	m	struct:JWStockMinData	access:public
JWStockNewsNumInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockNewsNumInfo$/;"	s
JWStockNewsNumInfo::nNewsNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nNewsNum;       \/\/ 拉取的新闻内容条数：1~20$/;"	m	struct:JWStockNewsNumInfo	access:public
JWStockNewsNumInfo::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;    \/\/股票索引$/;"	m	struct:JWStockNewsNumInfo	access:public
JWStockNewsNumInfo::operator =	.\lib\libprotocol\include\jw_struct.h	/^    JWStockNewsNumInfo& operator=(const JWStockNewsNumInfo &rs)$/;"	f	struct:JWStockNewsNumInfo	access:public	signature:(const JWStockNewsNumInfo &rs)
JWStockRadarIndicatorInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockRadarIndicatorInfo$/;"	s
JWStockRadarIndicatorInfo::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;                    \/\/个股索引$/;"	m	struct:JWStockRadarIndicatorInfo	access:public
JWStockRadarIndicatorRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockRadarIndicatorRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWStockRadarIndicatorRsp::cAgencyRating	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cAgencyRating;             \/\/机构评级，(范围：0 ~ 100) (ZHPC|9)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
JWStockRadarIndicatorRsp::cCompanyOperation	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cCompanyOperation;         \/\/公司运营，(范围：0 ~ 100) (ZHPC|15)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
JWStockRadarIndicatorRsp::cFinanceRisk	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cFinanceRisk;              \/\/财务风险(服务端 +50 如果>100，则直接=100；如果<0，则直接=0)范围：0 ~ 100) (ZHPC|11$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
JWStockRadarIndicatorRsp::cMoneyFlow	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cMoneyFlow;                \/\/资金流向，(范围：0 ~ 100) (ZHPC|7)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
JWStockRadarIndicatorRsp::cPriceRisk	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cPriceRisk;                \/\/价格风险，(范围：0 ~ 100) (ZHPC|13)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
JWStockRadarIndicatorRsp::nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;              \/\/个股索引$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
JWStockRankItem	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockRankItem$/;"	s
JWStockRankItem::StockKey	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockKey;\/\/股票KEY$/;"	m	struct:JWStockRankItem	access:public
JWStockRankItem::nAttentionCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nAttentionCount;\/\/关注次数$/;"	m	struct:JWStockRankItem	access:public
JWStockRankItem::nStatus	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nStatus;\/\/排名状态: -1为排名下降；0为排名不变；1为排名上升；2为新增$/;"	m	struct:JWStockRankItem	access:public
JWStockSingleNewsData	.\lib\libprotocol\include\jw_struct.h	/^struct JWStockSingleNewsData  \/\/个股单条新闻结构$/;"	s
JWStockSingleNewsData::nSecuNewsTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSecuNewsTime;$/;"	m	struct:JWStockSingleNewsData	access:public
JWStockSingleNewsData::szSecuFid	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuFid[JW_MAX_SECUFID_LEN];$/;"	m	struct:JWStockSingleNewsData	access:public
JWStockSingleNewsData::szSecuNewsTitle	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuNewsTitle[JW_MAX_SECU_NEWS_TITLE_LEN];$/;"	m	struct:JWStockSingleNewsData	access:public
JWTechniccalAndMarketData	.\lib\libprotocol\include\jw_struct.h	/^struct JWTechniccalAndMarketData$/;"	s
JWTechniccalAndMarketData::AccumulativeMarkup	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AccumulativeMarkup;        \/\/20日累计涨幅，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketData::AccumulativeMarkupHY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AccumulativeMarkupHY;      \/\/20日行业累计涨幅，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketData::AccumulativeMarkupSHZS	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int AccumulativeMarkupSHZS;    \/\/20日上证指数累计涨幅，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;              \/\/股票索引$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketData::TurnOverRate1	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TurnOverRate1;             \/\/1日换手率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketData::TurnOverRate3	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TurnOverRate3;             \/\/3日换手率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketData::TurnOverRate5	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TurnOverRate5;             \/\/5日换手率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;                \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWTechniccalAndMarketData	access:public
JWTechniccalAndMarketReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWTechniccalAndMarketReq:public JWTechniccalTrendAnaysisReq$/;"	s	inherits:JWTechniccalTrendAnaysisReq
JWTechniccalAndMarketRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWTechniccalAndMarketRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWTechniccalAndMarketRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;$/;"	m	struct:JWTechniccalAndMarketRsp	access:public
JWTechniccalAndMarketRsp::TechniccalAndMarketData	.\lib\libprotocol\include\jw_struct.h	/^    JWTechniccalAndMarketData TechniccalAndMarketData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWTechniccalAndMarketRsp	access:public
JWTechniccalTrendAnaysisData	.\lib\libprotocol\include\jw_struct.h	/^struct JWTechniccalTrendAnaysisData$/;"	s
JWTechniccalTrendAnaysisData::Glossary	.\lib\libprotocol\include\jw_struct.h	/^    char Glossary[JW_MAX_GLOSSARY_LEN]; \/\/分析术语(MACD技术指标)（utf-8编码）$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
JWTechniccalTrendAnaysisData::MidResistancePrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MidResistancePrice;    \/\/中线阻力位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
JWTechniccalTrendAnaysisData::MidSupportPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MidSupportPrice;       \/\/中线支撑位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
JWTechniccalTrendAnaysisData::ShortResistancePrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ShortResistancePrice;  \/\/短线阻力位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
JWTechniccalTrendAnaysisData::ShortSupportPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ShortSupportPrice;     \/\/短线支撑位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
JWTechniccalTrendAnaysisData::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;          \/\/股票索引$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
JWTechniccalTrendAnaysisData::UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;            \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
JWTechniccalTrendAnaysisReq	.\lib\libprotocol\include\jw_struct.h	/^struct JWTechniccalTrendAnaysisReq$/;"	s
JWTechniccalTrendAnaysisReq::StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex[JW_MAX_STOCK_NUM];\/\/股票索引数组$/;"	m	struct:JWTechniccalTrendAnaysisReq	access:public
JWTechniccalTrendAnaysisReq::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWTechniccalTrendAnaysisReq	access:public
JWTechniccalTrendAnaysisRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWTechniccalTrendAnaysisRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWTechniccalTrendAnaysisRsp::StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWTechniccalTrendAnaysisRsp	access:public
JWTechniccalTrendAnaysisRsp::TechniccalTrendAnaysisData	.\lib\libprotocol\include\jw_struct.h	/^    JWTechniccalTrendAnaysisData TechniccalTrendAnaysisData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWTechniccalTrendAnaysisRsp	access:public
JWUnInit	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API void  JWUnInit();$/;"	p	signature:()
JWUnPackActiveRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackActiveRsp(const char * p, int len, JWActiveAccountInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWActiveAccountInfoRsp * pRsp)
JWUnPackAddStockRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackAddStockRsp(const char * p, int len, JWAddStockRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWAddStockRsp * pRsp)
JWUnPackBatchBriefMarketDataRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackBatchBriefMarketDataRsp(const char * p, int len, JWBatchBriefMarketDataInfoRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWBatchBriefMarketDataInfoRsp *pRsp)
JWUnPackBatchStockNewsNumInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackBatchStockNewsNumInfoRsp(const char * p, int len, JWBatchStockNewsNumInfoRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWBatchStockNewsNumInfoRsp *pRsp)
JWUnPackBindMobileInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackBindMobileInfoRsp(const char * p, int len, JWBindMobileInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWBindMobileInfoRsp * pRsp)
JWUnPackBindVerifyInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackBindVerifyInfoRsp(const char * p, int len, JWBindVerifyInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWBindVerifyInfoRsp * pRsp)
JWUnPackCheckTicketRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackCheckTicketRsp(const char * p, int len, JWCheckTicketRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWCheckTicketRsp * pRsp)
JWUnPackCostDistributionDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackCostDistributionDataRsp(const char * p, int len, JWCostDistributionRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWCostDistributionRsp * pRsp)
JWUnPackCostDistributionDetailRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackCostDistributionDetailRsp(const char * p, int len, JWCostDistributionDetailRsp * pRsp); $/;"	p	signature:(const char * p, int len, JWCostDistributionDetailRsp * pRsp)
JWUnPackCreateAccountRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackCreateAccountRsp(const char * p, int len, JWCreateAccountRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWCreateAccountRsp * pRsp)
JWUnPackDelStockRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackDelStockRsp(const char * p, int len, JWDelStockRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWDelStockRsp * pRsp)
JWUnPackEarlyWarningRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackEarlyWarningRsp(const char * p, int len, JWEarlyWarningRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWEarlyWarningRsp *pRsp)
JWUnPackGetAccountRegTimeRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetAccountRegTimeRsp(const char * p, int len, JWGetAccountRegTimeRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetAccountRegTimeRsp * pRsp)
JWUnPackGetAccountStatusRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetAccountStatusRsp(const char * p, int len, JWGetAccountStatusRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetAccountStatusRsp * pRsp)
JWUnPackGetBasicInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetBasicInfoRsp(const char * p, int len, JWGetBasicInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetBasicInfoRsp * pRsp)
JWUnPackGetBindMobileInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetBindMobileInfoRsp(const char * p, int len, JWGetBindMobileInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetBindMobileInfoRsp * pRsp)
JWUnPackGetDDEDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetDDEDataRsp(const char * p, int len, JWDDEDataRsp * pRsp); $/;"	p	signature:(const char * p, int len, JWDDEDataRsp * pRsp)
JWUnPackGetDDEHisDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetDDEHisDataRsp(const char * p, int len, JWDDEHisDataRsp * pRsp); $/;"	p	signature:(const char * p, int len, JWDDEHisDataRsp * pRsp)
JWUnPackGetDDSortDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetDDSortDataRsp(const char * p, int len, JWDDSortDataRsp * pRsp); $/;"	p	signature:(const char * p, int len, JWDDSortDataRsp * pRsp)
JWUnPackGetDiagnoseDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetDiagnoseDataRsp(const char * p, int len, JWDiagnoseDataRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWDiagnoseDataRsp * pRsp)
JWUnPackGetFinancialMainCostDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetFinancialMainCostDataRsp(const char * p, int len, JWFinancialMainCostRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWFinancialMainCostRsp *pRsp)
JWUnPackGetFundAluationReserchDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetFundAluationReserchDataRsp(const char * p, int len, JWFundAluationReserchRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWFundAluationReserchRsp *pRsp)
JWUnPackGetFundAmentalsAnalysisDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetFundAmentalsAnalysisDataRsp(const char * p, int len, JWFundAmentalsAnalysisRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWFundAmentalsAnalysisRsp *pRsp)
JWUnPackGetFundAmentalsTargetsDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetFundAmentalsTargetsDataRsp(const char * p, int len, JWFundAmentalsTargetsRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWFundAmentalsTargetsRsp *pRsp)
JWUnPackGetFundIndustryRanksDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetFundIndustryRanksDataRsp(const char * p, int len, JWFundIndustryRanksRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWFundIndustryRanksRsp *pRsp)
JWUnPackGetFundOrganizationViewDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetFundOrganizationViewDataRsp(const char * p, int len, JWFundOrganizationViewRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWFundOrganizationViewRsp *pRsp)
JWUnPackGetJWKlineFormDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetJWKlineFormDataRsp(const char * p, int len, JWKlineFormDataRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWKlineFormDataRsp *pRsp)
JWUnPackGetMobileAreaInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetMobileAreaInfoRsp(const char * p, int len, JWGetMobileAreaInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetMobileAreaInfoRsp * pRsp)
JWUnPackGetMultiEmptyGameDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetMultiEmptyGameDataRsp(const char * p, int len, JWMultiEmptyGameDataRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWMultiEmptyGameDataRsp *pRsp)
JWUnPackGetRefereceDataRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackGetRefereceDataRsp(const char * p, int len, JWStockGetRefereceDataRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWStockGetRefereceDataRsp *pRsp)
JWUnPackGetRegInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetRegInfoRsp(const char * p, int len, JWAccountInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWAccountInfoRsp * pRsp)
JWUnPackGetStkFundFlowDetailDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetStkFundFlowDetailDataRsp(const char * p, int len, JWStkFundFlowDetailDataRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWStkFundFlowDetailDataRsp *pRsp)
JWUnPackGetStockListRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetStockListRsp(const char * p, int len, JWGetStockInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetStockInfoRsp * pRsp)
JWUnPackGetStockRankRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetStockRankRsp(const char * p, int len, JWGetStockRankRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetStockRankRsp * pRsp)
JWUnPackGetStockSortRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetStockSortRsp(const char * p, int len, JWGetStockSortRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetStockSortRsp * pRsp)
JWUnPackGetTechniccalAndMarketDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackGetTechniccalAndMarketDataRsp(const char * p, int len, JWTechniccalAndMarketRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWTechniccalAndMarketRsp *pRsp)
JWUnPackGetTicketRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetTicketRsp(const char * p, int len, JWAuthInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWAuthInfoRsp * pRsp)
JWUnPackGetUserAccountInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetUserAccountInfoRsp(const char * p, int len, JWGetUserAccountRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetUserAccountRsp * pRsp)
JWUnPackGetUserAliasRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackGetUserAliasRsp(const char * p, int len, JWGetUserAliasInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWGetUserAliasInfoRsp * pRsp)
JWUnPackIndustryFundFlowDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackIndustryFundFlowDataRsp(const char * p, int len, JWIndustryFundFlowDataRsp * pRsp); $/;"	p	signature:(const char * p, int len, JWIndustryFundFlowDataRsp * pRsp)
JWUnPackKeepAliveRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackKeepAliveRsp(const char * p, int len, JWCommonRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWCommonRsp * pRsp)
JWUnPackLoginRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackLoginRsp(const char * p, int len, JWLoginRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWLoginRsp * pRsp)
JWUnPackLogoutRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackLogoutRsp(const char * p, int len, JWLogoutRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWLogoutRsp * pRsp)
JWUnPackModifyUserPwdRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackModifyUserPwdRsp(const char * p, int len, JWModifyUserPwdRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWModifyUserPwdRsp * pRsp)
JWUnPackPayTicketIncomeNotifyRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackPayTicketIncomeNotifyRsp(const char * p, int len, JWPayTicketIncomeRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWPayTicketIncomeRsp * pRsp)
JWUnPackPullMarketDataRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackPullMarketDataRsp(const char * p, int len, JWPullMarketDataRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWPullMarketDataRsp * pRsp)
JWUnPackPullMinDataRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackPullMinDataRsp(const char * p, int len, JWPullMinuteDataInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWPullMinuteDataInfoRsp * pRsp)
JWUnPackRadarIndicatorRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackRadarIndicatorRsp(const char * p, int len, JWStockRadarIndicatorRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWStockRadarIndicatorRsp *pRsp)
JWUnPackRegRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackRegRsp(const char * p, int len, JWRegAccountRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWRegAccountRsp * pRsp)
JWUnPackResetPwdRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackResetPwdRsp(const char * p, int len, JWResetPwdRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWResetPwdRsp * pRsp)
JWUnPackRiseFallBreadthDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackRiseFallBreadthDataRsp(const char * p, int len, JWRiseFallBreadthDataRsp * pRsp); $/;"	p	signature:(const char * p, int len, JWRiseFallBreadthDataRsp * pRsp)
JWUnPackSetBasicInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackSetBasicInfoRsp(const char * p, int len, JWSetBasicInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWSetBasicInfoRsp * pRsp)
JWUnPackSetStockSortRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackSetStockSortRsp(const char * p, int len, JWSetStockSortRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWSetStockSortRsp * pRsp)
JWUnPackSetUserAliasRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackSetUserAliasRsp(const char * p, int len, JWSetUserAliasInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWSetUserAliasInfoRsp * pRsp)
JWUnPackStatReportInfoRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackStatReportInfoRsp(const char * p, int len, JWStatReportRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWStatReportRsp * pRsp)
JWUnPackStkFundFlowDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackStkFundFlowDataRsp(const char * p, int len, JWStkFundFlowDataRsp * pRsp); $/;"	p	signature:(const char * p, int len, JWStkFundFlowDataRsp * pRsp)
JWUnPackStockNewsContentRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int JWUnPackStockNewsContentRsp(const char * p, int len, JWStkNewsContentInfoRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWStkNewsContentInfoRsp *pRsp)
JWUnPackTechniccalTrendAnaysisDataRsp	.\lib\libprotocol\include\jw_protocol_stock.h	/^JW_PROTOCOL_API int JWUnPackTechniccalTrendAnaysisDataRsp(const char * p, int len, JWTechniccalTrendAnaysisRsp *pRsp);$/;"	p	signature:(const char * p, int len, JWTechniccalTrendAnaysisRsp *pRsp)
JWUnPackUpdTicketRsp	.\lib\libprotocol\include\jw_protocol.h	/^JW_PROTOCOL_API int  JWUnPackUpdTicketRsp(const char * p, int len, JWUpdTicketInfoRsp * pRsp);$/;"	p	signature:(const char * p, int len, JWUpdTicketInfoRsp * pRsp)
JWUpdTicketInfo	.\lib\libprotocol\include\jw_struct.h	/^struct JWUpdTicketInfo:public JWCommonReqInfo$/;"	s	inherits:JWCommonReqInfo
JWUpdTicketInfo::Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char Type;\/\/票据类型$/;"	m	struct:JWUpdTicketInfo	access:public
JWUpdTicketInfoRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWUpdTicketInfoRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWUpdTicketInfoRsp::nGetInterval	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGetInterval;\/\/下次拉取时间间隔$/;"	m	struct:JWUpdTicketInfoRsp	access:public
JWUpdTicketInfoRsp::szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/票据$/;"	m	struct:JWUpdTicketInfoRsp	access:public
JWXXXXRsp	.\lib\libprotocol\include\jw_struct.h	/^struct JWXXXXRsp:public JWCommonRsp$/;"	s	inherits:JWCommonRsp
JWXXXXRsp::a	.\lib\libprotocol\include\jw_struct.h	/^    char a[1];\/\/股票列表$/;"	m	struct:JWXXXXRsp	access:public
JWXXXXRsp::nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/拉到的数量$/;"	m	struct:JWXXXXRsp	access:public
JW_ACCOUNT_REG_TIME	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_ACCOUNT_REG_TIME =0x0806;\/\/取得帐号注册时间$/;"	v
JW_ACCOUNT_STATUS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_ACCOUNT_STATUS  = 0x0803;\/\/查询帐号状态$/;"	v
JW_AUTH_CHECK_TICKET	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_CHECK_TICKET = 0x0401;\/\/验证票据$/;"	v
JW_AUTH_GET_TICKET_UIN	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_GET_TICKET_UIN = 0x0406;\/\/通过UIN取得认证票据$/;"	v
JW_AUTH_LOGIN	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_LOGIN      = 0x0400;\/\/认证登录$/;"	v
JW_AUTH_LOGOUT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_LOGOUT     = 0x0402;\/\/注销登陆$/;"	v
JW_AUTH_MODI_PWD	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_MODI_PWD = 0x0403;\/\/修改用户密码$/;"	v
JW_AUTH_RESET_PWD	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_RESET_PWD     = 0x0409;\/\/重置用户密码$/;"	v
JW_AUTH_UPDATE_TICKET	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_UPDATE_TICKET = 0x0405;\/\/更新用户Ticket$/;"	v
JW_BIND_MOBILE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_BIND_MOBILE = 0x5030;\/\/绑定手机业务主命令字$/;"	v
JW_BIND_TYPE_EW_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char JW_BIND_TYPE_EW_GBS = 1;\/\/股博士接收预警消息的手机号码$/;"	v
JW_CREATE_ACCOUNT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_CREATE_ACCOUNT  = 0x0809;\/\/开通帐号$/;"	v
JW_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_INFO            =   0x5000;\/\/用户资料$/;"	v
JW_KEEP_ALIVE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_KEEP_ALIVE      = 0x0005;\/\/心跳$/;"	v
JW_MAX_ACCOUNT_LEN	.\lib\libprotocol\include\jw_struct.h	21;"	d
JW_MAX_ALIAS_NUM	.\lib\libprotocol\include\jw_struct.h	60;"	d
JW_MAX_AREA_CODE_LEN	.\lib\libprotocol\include\jw_struct.h	33;"	d
JW_MAX_BIND_MOBILE_NUM	.\lib\libprotocol\include\jw_struct.h	37;"	d
JW_MAX_BIRTH_LEN	.\lib\libprotocol\include\jw_struct.h	27;"	d
JW_MAX_CITY_LEN	.\lib\libprotocol\include\jw_struct.h	32;"	d
JW_MAX_CONTENT_LEN	.\lib\libprotocol\include\jw_struct.h	39;"	d
JW_MAX_DCODE_LEN	.\lib\libprotocol\include\jw_struct.h	24;"	d
JW_MAX_DDE_HIS_NUM	.\lib\libprotocol\include\jw_struct.h	65;"	d
JW_MAX_DIAGNOSE_CONTENT_LEN	.\lib\libprotocol\include\jw_struct.h	67;"	d
JW_MAX_ERR_MSG_LEN	.\lib\libprotocol\include\jw_struct.h	20;"	d
JW_MAX_GLOSSARY_LEN	.\lib\libprotocol\include\jw_struct.h	75;"	d
JW_MAX_GROUP_STOCK_NUM	.\lib\libprotocol\include\jw_struct.h	35;"	d
JW_MAX_INCOME_NUM	.\lib\libprotocol\include\jw_struct.h	42;"	d
JW_MAX_INDUSTRY_NAME_LEN	.\lib\libprotocol\include\jw_struct.h	74;"	d
JW_MAX_INDUSTRY_NUM	.\lib\libprotocol\include\jw_struct.h	64;"	d
JW_MAX_INDU_CODE_LEN	.\lib\libprotocol\include\jw_struct.h	63;"	d
JW_MAX_KLINE_NUM	.\lib\libprotocol\include\jw_struct.h	70;"	d
JW_MAX_KLINE_TYPE	.\lib\libprotocol\include\jw_struct.h	69;"	d
JW_MAX_MAIL_LEN	.\lib\libprotocol\include\jw_struct.h	45;"	d
JW_MAX_MAIN_COST_CONTENT_NUM	.\lib\libprotocol\include\jw_struct.h	76;"	d
JW_MAX_MINDATA_NUM	.\lib\libprotocol\include\jw_struct.h	58;"	d
JW_MAX_MOBILE_LEN	.\lib\libprotocol\include\jw_struct.h	28;"	d
JW_MAX_MULTI_EMPTY_GAME_CAMP	.\lib\libprotocol\include\jw_struct.h	71;"	d
JW_MAX_NAME_LEN	.\lib\libprotocol\include\jw_struct.h	26;"	d
JW_MAX_OPER_ANALY	.\lib\libprotocol\include\jw_struct.h	62;"	d
JW_MAX_ORDERID_LEN	.\lib\libprotocol\include\jw_struct.h	41;"	d
JW_MAX_PARAMNAME_LEN	.\lib\libprotocol\include\jw_struct.h	68;"	d
JW_MAX_PRODUCT_ID_LEN	.\lib\libprotocol\include\jw_struct.h	43;"	d
JW_MAX_PROVIANCE_LEN	.\lib\libprotocol\include\jw_struct.h	31;"	d
JW_MAX_PWD_LEN	.\lib\libprotocol\include\jw_struct.h	22;"	d
JW_MAX_RANK_LEN	.\lib\libprotocol\include\jw_struct.h	73;"	d
JW_MAX_RANK_NUM	.\lib\libprotocol\include\jw_struct.h	36;"	d
JW_MAX_REGION_NUM	.\lib\libprotocol\include\jw_struct.h	61;"	d
JW_MAX_RISE_FALL_NUM	.\lib\libprotocol\include\jw_struct.h	66;"	d
JW_MAX_SECUFID_LEN	.\lib\libprotocol\include\jw_struct.h	51;"	d
JW_MAX_SECU_NEWS_TITLE_LEN	.\lib\libprotocol\include\jw_struct.h	55;"	d
JW_MAX_STOCKCODE_LEN	.\lib\libprotocol\include\jw_struct.h	56;"	d
JW_MAX_STOCK_BUY_SELL_NUM	.\lib\libprotocol\include\jw_struct.h	47;"	d
JW_MAX_STOCK_CODE_LEN	.\lib\libprotocol\include\jw_struct.h	25;"	d
JW_MAX_STOCK_NAME_LEN	.\lib\libprotocol\include\jw_struct.h	52;"	d
JW_MAX_STOCK_NUM	.\lib\libprotocol\include\jw_struct.h	50;"	d
JW_MAX_TARGETS_CONTENT_NUM	.\lib\libprotocol\include\jw_struct.h	77;"	d
JW_MAX_TICKET_LEN	.\lib\libprotocol\include\jw_struct.h	23;"	d
JW_MAX_URL_LEN	.\lib\libprotocol\include\jw_struct.h	30;"	d
JW_MAX_VERIFY_CODE_LEN	.\lib\libprotocol\include\jw_struct.h	29;"	d
JW_NEWSMEDIA_LEN	.\lib\libprotocol\include\jw_struct.h	53;"	d
JW_NEW_CONTENT_LEN	.\lib\libprotocol\include\jw_struct.h	54;"	d
JW_PAY_MNG	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_PAY_MNG             = 0x5060;$/;"	v
JW_PROTOCOL_API	.\lib\libprotocol\include\jw_os.h	16;"	d
JW_PROTOCOL_API	.\lib\libprotocol\include\jw_os.h	18;"	d
JW_PROTOCOL_API	.\lib\libprotocol\include\jw_os.h	22;"	d
JW_REG_ACTIVATE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_REG_ACTIVATE = 0x0802; \/\/激活账户$/;"	v
JW_REG_GET_REGINFO	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_REG_GET_REGINFO = 0x0804;\/\/取用户注册信息$/;"	v
JW_REG_PRE_REG	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_REG_PRE_REG = 0x0801;   \/\/注册账户$/;"	v
JW_STAT_REPORT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_STAT_REPORT = 0x0810;\/\/用户数据上报$/;"	v
JW_STK_HOME_GET_REFERENCE_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_HOME_GET_REFERENCE_DATA = 0x0A60; \/\/取reference data$/;"	v
JW_STK_WEB_BATCH_BRIEF_MARKET_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_BATCH_BRIEF_MARKET_DATA = 0x0A22; \/\/批量简要的行情数据$/;"	v
JW_STK_WEB_BATCH_NEWS_CONTENT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_BATCH_NEWS_CONTENT  = 0x0A29; \/\/批量拉取单只股票最新新闻标题$/;"	v
JW_STK_WEB_COST_DISTRIBUTION_DETAIL	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_COST_DISTRIBUTION_DETAIL = 0x0A18; \/\/个股成本分布明细（? Business 服务器）0x0A18$/;"	v
JW_STK_WEB_COST_DISTRIBUTION_INDICATOR	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_COST_DISTRIBUTION_INDICATOR = 0x0A17;\/\/个股成本分布指标（? Business 服务器）0x0A17$/;"	v
JW_STK_WEB_DDE_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_DDE_DATA = 0x0A61; \/\/ 拉DDE数据（?Business 服务器） 0x0A61$/;"	v
JW_STK_WEB_DDE_HIS_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_DDE_HIS_DATA = 0x0A64; \/\/拉DDE历史数据（?Business 服务器） 0x0A64$/;"	v
JW_STK_WEB_DDSORT_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_DDSORT_DATA= 0x0A62; \/\/拉DDSort数据（?Business 服务器） 0x0A62$/;"	v
JW_STK_WEB_EARLY_WARNING	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_EARLY_WARNING  =  0X0A1D;  \/\/预警行情数据$/;"	v
JW_STK_WEB_FINANCIAL_MAIN_ANALYSIS_COST	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FINANCIAL_MAIN_ANALYSIS_COST = 0x0A70;\/\/资金面-主力分析-主力成本数据$/;"	v
JW_STK_WEB_FUNDAMENTALS_ALUATION_RESEARCH	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_ALUATION_RESEARCH = 0x0A75;\/\/基本面-估值研究数据$/;"	v
JW_STK_WEB_FUNDAMENTALS_FA_INDUSTRY_RANKINGS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_FA_INDUSTRY_RANKINGS = 0x0A74;\/\/基本面-财务分析-行业排名数据$/;"	v
JW_STK_WEB_FUNDAMENTALS_FA_PROFIT_TARGETS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_FA_PROFIT_TARGETS = 0x0A73;\/\/基本面-财务分析-利润指标数据$/;"	v
JW_STK_WEB_FUNDAMENTALS_FINANCIAL_ANALYSIS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_FINANCIAL_ANALYSIS = 0x0A72;\/\/基本面-财务分析数据$/;"	v
JW_STK_WEB_FUNDAMENTALS_ORGANIZATION_VIEW	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_ORGANIZATION_VIEW = 0x0A76;\/\/基本面-机构观点数据$/;"	v
JW_STK_WEB_INDUSTRY_FUND_FLOW	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_INDUSTRY_FUND_FLOW = 0x0A53; \/\/拉行业资金流向数据$/;"	v
JW_STK_WEB_KLINE_FORM_ENGINE	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_KLINE_FORM_ENGINE = 0x0A67;\/\/K线形态引擎数据0x0A67$/;"	v
JW_STK_WEB_MULTI_EMPTY_GAME_CAMP	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_MULTI_EMPTY_GAME_CAMP = 0x0A68;\/\/多空博弈阵营数据(Business 服务器) 0x0A68$/;"	v
JW_STK_WEB_NEWS_CONTENT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_NEWS_CONTENT  =  0x0A28;  \/\/单只股票新闻内容数据$/;"	v
JW_STK_WEB_PULL_MARKET_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_PULL_MARKET_DATA = 0x0A09;  \/\/拉取最新行情数据$/;"	v
JW_STK_WEB_PULL_MINUTE_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_PULL_MINUTE_DATA = 0x0A0A;  \/\/拉分时数据线$/;"	v
JW_STK_WEB_RADAR_INDICATOR	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_RADAR_INDICATOR  = 0x0A10; \/\/个股雷达图指标$/;"	v
JW_STK_WEB_RISE_FALL_BREADTH	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_RISE_FALL_BREADTH= 0x0A65;\/\/拉实时行情涨跌幅数据（?Business 服务器） 0x0A65$/;"	v
JW_STK_WEB_STOCK_FUND_DETAIL	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_STOCK_FUND_DETAIL = 0x0A66;\/\/个股资金流向明细数据  0x0A66$/;"	v
JW_STK_WEB_STOCK_FUND_FLOW	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_STOCK_FUND_FLOW = 0x0A50; \/\/拉个股资金流向数据$/;"	v
JW_STK_WEB_TECHNICAL_MARKET_PERFORMANCE	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_TECHNICAL_MARKET_PERFORMANCE = 0x0A71; \/\/技术面-市场表现数据$/;"	v
JW_STK_WEB_TECHNICAL_TREND_ANALYSIS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_TECHNICAL_TREND_ANALYSIS = 0x0A69;\/\/技术面-趋势分析数据$/;"	v
JW_STK_WEB_ZHZD_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_ZHZD_INFO = 0x0A40; \/\/拉取综合诊断信息(Business 服务器） 0x0A40$/;"	v
JW_STOCK	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_STOCK           = 0x000F;\/\/自选股主命令字$/;"	v
JW_STOCK_SHORT_NAME_LEN	.\lib\libprotocol\include\jw_struct.h	57;"	d
JW_SUB_BIND_UNBIND	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_BIND_UNBIND                 = 0X0004;\/\/绑定\/解除手机绑定业务$/;"	v
JW_SUB_CHECK_VERIFY_CODE	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_CHECK_VERIFY_CODE           = 0x0005;\/\/校验绑定(解除绑定)手机验证码$/;"	v
JW_SUB_DEFAULT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_SUB_DEFAULT     = 0x0000;\/\/默认子命令字$/;"	v
JW_SUB_GET_ALIAS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_ALIAS = 0x0019;\/\/取得用户的别名信息$/;"	v
JW_SUB_GET_BIND_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_BIND_INFO               = 0x0006;\/\/拉取用户绑定的手机信息$/;"	v
JW_SUB_GET_COMM_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_COMM_INFO = 0x0010;\/\/取用户公共资料信息及头像URL$/;"	v
JW_SUB_GET_MOBILE_AREA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_MOBILE_AREA=0x0012;\/\/通过用户ID查询手机帐号的归宿地$/;"	v
JW_SUB_GET_MOBILE_AREA_BY_NUMBER	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_MOBILE_AREA_BY_NUMBER = 0x0013;\/\/通过手机号码查询归宿地$/;"	v
JW_SUB_GET_STOCK_RANK	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_STOCK_RANK              = 0x0013;\/\/拉取股票排名顺序$/;"	v
JW_SUB_GET_STOCK_SORT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_STOCK_SORT              = 0x0012;\/\/拉取自选股排序规则$/;"	v
JW_SUB_GET_USER_ACCOUNT_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_USER_ACCOUNT_INFO = 0x0014;\/\/通过UIN取得用户帐号信息$/;"	v
JW_SUB_PAY_TICKETINCOME_NOTIFY	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_PAY_TICKETINCOME_NOTIFY = 0x001B;$/;"	v
JW_SUB_SET_ALIAS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_SET_ALIAS = 0x0018;\/\/设置用户的别名信息$/;"	v
JW_SUB_SET_COMM_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_SET_COMM_INFO = 0x0011;\/\/设置用户公共资料信息$/;"	v
JW_SUB_SET_STOCK_SORT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_SET_STOCK_SORT              = 0x0011;\/\/设置自选股排序规则$/;"	v
JW_SUB_STOCK_ADD	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_STOCK_ADD                   = 0x0001;\/\/增加自选股$/;"	v
JW_SUB_STOCK_DEL	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_STOCK_DEL                   = 0x0002;\/\/删除自选股$/;"	v
JW_SUB_STOCK_LIST_BY_GROUPID	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_STOCK_LIST_BY_GROUPID       = 0x0010;\/\/拉取自选股列表$/;"	v
JZCSYL	.\comm\JsonFeildDef.h	/^const char* const JZCSYL                = "K09"; \/\/个股净资产收益率    $/;"	v
JZCSYL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JZCSYL;                \/\/个股净资产收益率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JZCSYL_HY	.\comm\JsonFeildDef.h	/^const char* const JZCSYL_HY             = "K10"; \/\/行业净资产收益率    $/;"	v
JZCSYL_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int JZCSYL_HY;             \/\/行业净资产收益率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
JZCSYL_PM	.\comm\JsonFeildDef.h	/^const char* const JZCSYL_PM             = "K11"; \/\/个股净资产收益率排名$/;"	v
JZCSYL_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short JZCSYL_PM;           \/\/个股净资产收益率排名$/;"	m	struct:JWFundIndustryRanksData	access:public
KLineType	.\lib\libprotocol\include\jw_struct.h	/^    char KLineType[JW_MAX_KLINE_TYPE];\/\/K线形态类型$/;"	m	struct:JWKlineFormData	access:public
KlineFormData	.\lib\libprotocol\include\jw_struct.h	/^    JWKlineFormData KlineFormData[JW_MAX_KLINE_NUM];\/\/$/;"	m	struct:JWKlineFormDataRsp	access:public
LagerBuy	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LagerBuy;\/\/特大买* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
LagerSell	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LagerSell;\/\/特大卖* 10000 取整, 还原后又正负号$/;"	m	struct:JWDdsortData	access:public
LastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LastPx;\/\/现价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWRiseFallBreadthData	access:public
LeaderStock	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LeaderStock;\/\/行业资领涨股$/;"	m	struct:JWIndustryFundFlowData	access:public
LeaderZDF	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int LeaderZDF;\/\/领涨股涨跌幅$/;"	m	struct:JWIndustryFundFlowData	access:public
MC_INDEX_KEY	.\comm\ServerDef.h	/^enum MC_INDEX_KEY $/;"	g
MC_KEY_FIN_MAIN_COST	.\comm\ServerDef.h	/^    MC_KEY_FIN_MAIN_COST$/;"	e	enum:MC_INDEX_KEY
MC_KEY_FUNDS_DTL	.\comm\ServerDef.h	/^    MC_KEY_FUNDS_DTL,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_FUNDS_PATH	.\comm\ServerDef.h	/^    MC_KEY_FUNDS_PATH = 0,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_FUND_ALUA	.\comm\ServerDef.h	/^    MC_KEY_FUND_ALUA,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_FUND_FINANCE	.\comm\ServerDef.h	/^    MC_KEY_FUND_FINANCE,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_FUND_INDU_RANK	.\comm\ServerDef.h	/^    MC_KEY_FUND_INDU_RANK,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_FUND_ORG	.\comm\ServerDef.h	/^    MC_KEY_FUND_ORG,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_FUND_PROFIT	.\comm\ServerDef.h	/^    MC_KEY_FUND_PROFIT,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_TREND_ANYS	.\comm\ServerDef.h	/^    MC_KEY_TREND_ANYS,$/;"	e	enum:MC_INDEX_KEY
MC_KEY_TREND_MARKET	.\comm\ServerDef.h	/^    MC_KEY_TREND_MARKET,$/;"	e	enum:MC_INDEX_KEY
MEMC_HOST	.\comm\ServerDef.h	/^const char MEMC_HOST[] = {"172.30.8.239:12001"};$/;"	v
MEMC_KEY_LIST	.\comm\ServerDef.h	/^const char* const MEMC_KEY_LIST[MC_KEY_FIN_MAIN_COST + 1] = $/;"	v
MGSY	.\comm\JsonFeildDef.h	/^const char* const MGSY			= "H6"; \/\/每股收益        $/;"	v
MGSY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MGSY;               \/\/每股收益，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
MainHold	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t MainHold;\/\/主力持仓$/;"	m	struct:JWDDEData	access:public
MainNetFlowIn	.\comm\JsonFeildDef.h	/^const char* const MainNetFlowIn        = "A12"; \/\/主力净流入(元)                                                      $/;"	v
MainNetFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t MainNetFlowIn; \/\/主力净流入$/;"	m	struct:JWStkFundFlowData	access:public
MainNetFlowOut	.\comm\JsonFeildDef.h	/^const char* const MainNetFlowOut       = "A13"; \/\/主力净流出(元)                                                      $/;"	v
MainNetFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t MainNetFlowOut;\/\/主力净流出$/;"	m	struct:JWStkFundFlowData	access:public
MainNetInRate	.\comm\JsonFeildDef.h	/^const char* const MainNetInRate        = "A14"; \/\/主力净流入力度                                                      $/;"	v
MainNetInRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MainNetInRate;\/\/主力净流入力度$/;"	m	struct:JWStkFundFlowData	access:public
MainNetOutRate	.\comm\JsonFeildDef.h	/^const char* const MainNetOutRate       = "A15"; \/\/主力净流出力度                                                      $/;"	v
MainNetOutRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MainNetOutRate;\/\/主力净流出力度$/;"	m	struct:JWStkFundFlowData	access:public
MainPrice	.\comm\JsonFeildDef.h	/^const char* const MainPrice		= "E5"; \/\/10日主力平均交易成本    $/;"	v
MainPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MainPrice;\/\/10日主力平均交易成本，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFinancialMainCostContentData	access:public
MapHead	.\comm\ShmMap.h	/^}MapHead;$/;"	t	typeref:struct:tagMapHead
MapItem	.\comm\ShmMap.h	/^}MapItem;$/;"	t	typeref:struct:tagMapItem
MarketDataInfo	.\lib\libprotocol\include\jw_struct.h	/^    JWMarketDataInfo MarketDataInfo[JW_MAX_STOCK_NUM];\/\/个股行情数据结构$/;"	m	struct:JWEarlyWarningRsp	access:public
MarketPrice	.\comm\JsonFeildDef.h	/^const char* const MarketPrice	= "E4"; \/\/10日市场平均交易成本          $/;"	v
MarketPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MarketPrice;\/\/10日市场平均交易成本，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFinancialMainCostContentData	access:public
MidResistancePrice	.\comm\JsonFeildDef.h	/^const char* const MidResistancePrice        = "D5"; \/\/中线阻力位                         $/;"	v
MidResistancePrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MidResistancePrice;    \/\/中线阻力位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
MidSupportPrice	.\comm\JsonFeildDef.h	/^const char* const MidSupportPrice           = "D4"; \/\/中线支撑位                         $/;"	v
MidSupportPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int MidSupportPrice;       \/\/中线支撑位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
MinData	.\lib\libprotocol\include\jw_struct.h	/^    JWMinData MinData[JW_MAX_MINDATA_NUM];  \/\/分时数据$/;"	m	struct:JWStockMinData	access:public
MultiEmptyGameData	.\lib\libprotocol\include\jw_struct.h	/^    JWMultiEmptyGameData MultiEmptyGameData[JW_MAX_MULTI_EMPTY_GAME_CAMP];\/\/内容的个数$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
NetBigBill	.\comm\JsonFeildDef.h	/^const char* const NetBigBill           = "A16"; \/\/大单净量(元)                                                        $/;"	v
NetBigBill	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetBigBill;\/\/大单净量$/;"	m	struct:JWStkFundFlowData	access:public
NetFlowIn	.\comm\JsonFeildDef.h	/^const char* const NetFlowIn            = "A17"; \/\/净流入(元)                                                          $/;"	v
NetFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetFlowIn;\/\/净流入$/;"	m	struct:JWStkFundFlowData	access:public
NetFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetFlowIn;\/\/行业资金净流入$/;"	m	struct:JWIndustryFundFlowData	access:public
NetFlowInPower	.\comm\JsonFeildDef.h	/^const char* const NetFlowInPower       = "A18"; \/\/净流入力度                                                          $/;"	v
NetFlowInPower	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NetFlowInPower;\/\/净流入力度 $/;"	m	struct:JWStkFundFlowData	access:public
NetFlowInPower	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NetFlowInPower;\/\/行业资金净流入力度$/;"	m	struct:JWIndustryFundFlowData	access:public
NetFlowOut	.\comm\JsonFeildDef.h	/^const char* const NetFlowOut           = "A19"; \/\/总流出(元)                                                          $/;"	v
NetFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t NetFlowOut;\/\/净流出$/;"	m	struct:JWStkFundFlowData	access:public
NetFlowOutPower	.\comm\JsonFeildDef.h	/^const char* const NetFlowOutPower      = "A20"; \/\/净流入力度                                                          $/;"	v
NetFlowOutPower	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NetFlowOutPower;\/\/净流出力度 $/;"	m	struct:JWStkFundFlowData	access:public
NeutralNum	.\comm\JsonFeildDef.h	/^const char* const NeutralNum        = "M08"; \/\/中性数量  $/;"	v
NeutralNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short NeutralNum;                     \/\/中性数量$/;"	m	struct:JWFundOrganizationViewData	access:public
NewsData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockSingleNewsData NewsData[20]; \/\/单只股票最大拉取20条新闻$/;"	m	struct:JWStockAllNewsData	access:public
NowPrice	.\comm\JsonFeildDef.h	/^const char* const NowPrice             = "A21"; \/\/现价                                                                $/;"	v
NowPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int NowPrice; \/\/现价，服务端 x1000，客户端 \/1000 （大赢家传过来的的数据就已经x1000， 股票服务器透传，客户端需要\/1000）$/;"	m	struct:JWStkFundFlowData	access:public
Num	.\comm\JsonFeildDef.h	/^const char* const Num                  = "A98"; \/\/内容数量$/;"	v
Num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Num;                                                 \/\/内容的个数$/;"	m	struct:JWFundAmentalsTargetsData	access:public
Num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Num; \/\/内容的个数$/;"	m	struct:JWFinancialMainCostData	access:public
Num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Num;\/\/内容的个数$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Number; \/\/数据条数$/;"	m	struct:JWDDEHisDataRsp	access:public
Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Number; \/\/数据条数，最大100条$/;"	m	struct:JWRiseFallBreadthDataRsp	access:public
Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number; \/\/数据条数，返回从最新往前的数据。一般服务器上提供60条数据。如果填1，那么会返回最新的一条数据$/;"	m	struct:JWDdeHisDataInfo	access:public
Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number; \/\/数据条数，返回从最新往前的数据。一般服务器上提供60条数据。如果填1，那么会返回最新的一条数据$/;"	m	struct:JWRiseFallBreadthDataInfo	access:public
Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number;\/\/请求个数，一般是200个，最大是800个$/;"	m	struct:JWKlineFormDataReq	access:public
Number	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Number;\/\/请求个数，一般是200个，最大是800个；$/;"	m	struct:JWKlineFormDataRsp	access:public
OpType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char OpType;\/\/操作类型，1:添加,2:删除$/;"	m	struct:JWSetUserAliasInfo	access:public
OpenPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int OpenPx;\/\/开盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
OperatorAnalysis	.\lib\libprotocol\include\jw_struct.h	/^    char OperatorAnalysis[JW_MAX_OPER_ANALY];\/\/操作分析，（UTF8）$/;"	m	struct:JWCostDistributionRsp	access:public
OrganNum	.\comm\JsonFeildDef.h	/^const char* const OrganNum      	= "M02"; \/\/机构数量  $/;"	v
OrganNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short OrganNum;                       \/\/机构数量$/;"	m	struct:JWFundOrganizationViewData	access:public
PACK_HEADER_LEN	.\comm\ServerDef.h	/^const unsigned short PACK_HEADER_LEN = 29;$/;"	v
PB	.\comm\JsonFeildDef.h	/^const char* const PB                = "L06";	\/\/市净率    $/;"	v
PB	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB;                               \/\/市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
PB	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB;                \/\/市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PB_HY	.\comm\JsonFeildDef.h	/^const char* const PB_HY             = "L07";	\/\/行业市净率$/;"	v
PB_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB_HY;                            \/\/行业市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
PB_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB_HY;             \/\/行业市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PB_MARKET	.\comm\JsonFeildDef.h	/^const char* const PB_MARKET         = "L08";	\/\/市场市净率$/;"	v
PB_MARKET	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PB_MARKET;         \/\/市场市净率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PB_RANKING	.\comm\JsonFeildDef.h	/^const char* const PB_RANKING        = "L09";	\/\/市净率排名$/;"	v
PB_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PB_RANKING[JW_MAX_RANK_LEN];              \/\/市净率排名$/;"	m	struct:JWFundAluationReserchData	access:public
PB_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PB_RANKING[JW_MAX_RANK_LEN];              \/\/市净率排名$/;"	m	struct:JWFundOrganizationViewData	access:public
PEG	.\comm\JsonFeildDef.h	/^const char* const PEG               = "L10";	\/\/PEG       $/;"	v
PEG	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG;                              \/\/PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
PEG	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG;               \/\/PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PEG_HY	.\comm\JsonFeildDef.h	/^const char* const PEG_HY            = "L11";	\/\/行业PEG   $/;"	v
PEG_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG_HY;                           \/\/行业PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
PEG_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG_HY;            \/\/行业PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PEG_MARKET	.\comm\JsonFeildDef.h	/^const char* const PEG_MARKET        = "L12";	\/\/市场PEG   $/;"	v
PEG_MARKET	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PEG_MARKET;        \/\/市场PEG，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PEG_RANKING	.\comm\JsonFeildDef.h	/^const char* const PEG_RANKING       = "L13";	\/\/PEG排名   $/;"	v
PEG_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PEG_RANKING[JW_MAX_RANK_LEN];             \/\/PEG排名$/;"	m	struct:JWFundAluationReserchData	access:public
PEG_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PEG_RANKING[JW_MAX_RANK_LEN];             \/\/PEG排名$/;"	m	struct:JWFundOrganizationViewData	access:public
PE_TTM	.\comm\JsonFeildDef.h	/^const char* const PE_TTM			= "L02";	\/\/市盈率    $/;"	v
PE_TTM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PE_TTM;            \/\/市盈率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PE_TTM_HY	.\comm\JsonFeildDef.h	/^const char* const PE_TTM_HY         = "L03";	\/\/行业市盈率$/;"	v
PE_TTM_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PE_TTM_HY;         \/\/行业市盈率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PE_TTM_MARKET	.\comm\JsonFeildDef.h	/^const char* const PE_TTM_MARKET     = "L04";	\/\/市场市盈率$/;"	v
PE_TTM_MARKET	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PE_TTM_MARKET;     \/\/市场市盈率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAluationReserchData	access:public
PE_TTM_RANKING	.\comm\JsonFeildDef.h	/^const char* const PE_TTM_RANKING    = "L05";	\/\/市盈率排名$/;"	v
PE_TTM_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PE_TTM_RANKING[JW_MAX_RANK_LEN];          \/\/市盈率排名$/;"	m	struct:JWFundAluationReserchData	access:public
PE_TTM_RANKING	.\lib\libprotocol\include\jw_struct.h	/^    char PE_TTM_RANKING[JW_MAX_RANK_LEN];          \/\/市盈率排名$/;"	m	struct:JWFundOrganizationViewData	access:public
PORT	.\comm\ServerDef.h	/^const unsigned short PORT = 5030;$/;"	v
ParamName	.\lib\libprotocol\include\jw_struct.h	/^    char ParamName[JW_MAX_PARAMNAME_LEN];\/\/指标名称$/;"	m	struct:JWMultiEmptyGameData	access:public
PreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PreClosePx;\/\/收盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
PreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int PreClosePx;\/\/昨收价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWRiseFallBreadthData	access:public
Price	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Price;\/\/现价  * 1000 取整$/;"	m	struct:JWDdsortData	access:public
REG_ERR_ACTIVATE_NOT_FOUND	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_ACTIVATE_NOT_FOUND   = 0x00150006;  \/\/没有找到激活信息$/;"	v
REG_ERR_ACTIVATE_VERIFY_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_ACTIVATE_VERIFY_ERR  = 0x00150007;  \/\/激活码不正确$/;"	v
REG_ERR_ALREADY_REG	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_ALREADY_REG          = 0x00150002;  \/\/已注册了$/;"	v
REG_ERR_CHGACT_ACT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_ACT_ERR       = 0x00150009;  \/\/修改账号时新账号已经被占用$/;"	v
REG_ERR_CHGACT_ARG_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_ARG_ERR       = 0x0015000B;  \/\/修改账号时送过来的参数错误.uin不对$/;"	v
REG_ERR_CHGACT_CTIME_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_CTIME_ERR     = 0x0015000C;  \/\/修改账号时账号修改时间过短$/;"	v
REG_ERR_CHGACT_PWD_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_PWD_ERR       = 0x00150008;  \/\/修改账号时密码错误$/;"	v
REG_ERR_CHGACT_TIME_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_TIME_ERR      = 0x0015000A;  \/\/修改账号时密码设置时间未到$/;"	v
REG_ERR_DB	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_DB                   = 0x00150005;  \/\/DB错误$/;"	v
REG_ERR_INVALID_ACCOUNT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_INVALID_ACCOUNT      = 0x0015000E;\/\/无效的帐号$/;"	v
REG_ERR_NEED_ACTIVATE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_NEED_ACTIVATE        = 0x00150003;  \/\/需要激活$/;"	v
REG_ERR_NO_AVA_ID	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_NO_AVA_ID            = 0x00150004;  \/\/没有可用ID了$/;"	v
REG_ERR_REPEAT_REG	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_REPEAT_REG           = 0x0015000D;\/\/帐号已注册$/;"	v
REG_ERR_VERIFY	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_VERIFY               = 0x00150001;  \/\/激活验证失败$/;"	v
RET_AUTH_ACCT_DISABLE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_DISABLE = 0x00080002;\/\/帐号被禁用$/;"	v
RET_AUTH_ACCT_FREEZ	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_FREEZ = 0x00080004;\/\/帐号被冻结(临时限制登陆)$/;"	v
RET_AUTH_ACCT_NOTACT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_NOTACT = 0x00080003;\/\/帐号未激活$/;"	v
RET_AUTH_ACCT_NOTEXIST	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_NOTEXIST = 0x00080001;\/\/帐号不存在$/;"	v
RET_AUTH_DP_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_DP_ERROR = 0x0008000b;\/\/数据平台错误$/;"	v
RET_AUTH_PROTOCOL_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_PROTOCOL_ERROR = 0x00080009;\/\/认证协议不正确    $/;"	v
RET_AUTH_PWD_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_PWD_ERROR = 0x00080005;\/\/密码错误$/;"	v
RET_AUTH_SYSTEM_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_SYSTEM_ERROR = 0x00080008;\/\/认证服务器错误$/;"	v
RET_AUTH_TICKET_EXPIRE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_TICKET_EXPIRE = 0x00080007;\/\/票据已过期$/;"	v
RET_AUTH_TICKET_INVALID	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_TICKET_INVALID = 0x00080006;\/\/票据不正确$/;"	v
RET_BIND_ACCOUNT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_ACCOUNT_ERR          = 0x02030005;\/\/账号不存在$/;"	v
RET_BIND_DB_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_DB_ERR               = 0x02030003;\/\/DB错误$/;"	v
RET_BIND_INVALID_CODE_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_INVALID_CODE_ERR     = 0x02030006;\/\/无效的验证码$/;"	v
RET_BIND_MOBILE_BINDED_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_MOBILE_BINDED_ERR    = 0x02030009; \/\/该手机号码已经被其它用户绑定$/;"	v
RET_BIND_MOBILE_UNBIND_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_MOBILE_UNBIND_ERR    = 0x02030008;\/\/要解除绑定的手机没有绑定任何应用$/;"	v
RET_BIND_NUMBER_LIMIT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_NUMBER_LIMIT_ERR     = 0x02030007;\/\/超过绑定号码个数$/;"	v
RET_BIND_PROTOCOL_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_PROTOCOL_ERR         = 0x02030002;\/\/协议错误$/;"	v
RET_BIND_SYSTEM_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_SYSTEM_ERR           = 0x02030001;\/\/系统错误$/;"	v
RET_BIND_UNSUPPORT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_UNSUPPORT_ERR        = 0x02030004;\/\/不支持的数据格式$/;"	v
RET_INFO_FIELD_LEN_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_FIELD_LEN_ERR = 0x00020003;\/\/字段长度错误$/;"	v
RET_INFO_FIELD_TYPE_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_FIELD_TYPE_ERR = 0x00020002;\/\/字段类型错误$/;"	v
RET_INFO_MOBILE_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_MOBILE_ERR = 0x00020004;\/\/错误的手机号码格式$/;"	v
RET_INFO_MOBILE_NOT_FOUND	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_MOBILE_NOT_FOUND = 0x00020005;\/\/没有找到对应的归属地$/;"	v
RET_INFO_SYS_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_SYS_ERR = 0x00020001; \/\/系统错误$/;"	v
RET_STK_COUNT_MAX_LIMIT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_COUNT_MAX_LIMIT_ERR = 0x00090004; \/\/达到系统允许的数量上限$/;"	v
RET_STK_DB_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_DB_ERR = 0x00090002;\/\/DB错误$/;"	v
RET_STK_DEFALUT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_DEFALUT_ERR = 0x00090009;\/\/默认分组不能更改或者删除$/;"	v
RET_STK_NOTFOUND	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_NOTFOUND = 0x00090006;\/\/没找到$/;"	v
RET_STK_NO_STKRANK_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_NO_STKRANK_ERR = 0x0009000A;\/\/没有对应的股票排名$/;"	v
RET_STK_NO_STKSORT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_NO_STKSORT = 0x0009000B;\/\/没有自选股排序规则$/;"	v
RET_STK_OR_GRPUP_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_OR_GRPUP_ERROR = 0x00090007;\/\/股票信息或者自选股分组不存在$/;"	v
RET_STK_PROTOCOL_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_PROTOCOL_ERR = 0x00090003;\/\/协议错误$/;"	v
RET_STK_REPEATED	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_REPEATED = 0x00090008;\/\/股票已经存在$/;"	v
RET_STK_STRING_LEN_LIMIT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_STRING_LEN_LIMIT = 0x00090005; \/\/超出定义的string字段的长度$/;"	v
RET_STK_SYS_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_SYS_ERR = 0x00090001; \/\/系统错误$/;"	v
RankList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockRankItem RankList[JW_MAX_RANK_NUM];$/;"	m	struct:JWGetStockRankRsp	access:public
Rating	.\comm\JsonFeildDef.h	/^const char* const Rating            = "M04"; \/\/机构评级  $/;"	v
Rating	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Rating;                           \/\/机构评级，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundOrganizationViewData	access:public
Recv	.\comm\TcpClient.cc	/^CTcpClient::Recv(char* buffer, int size)$/;"	f	class:CTcpClient	signature:(char* buffer, int size)
Recv	.\comm\TcpClient.h	/^    int Recv(char* buffer, int size);$/;"	p	class:CTcpClient	access:public	signature:(char* buffer, int size)
ReductionNum	.\comm\JsonFeildDef.h	/^const char* const ReductionNum      = "M09"; \/\/减持数量  $/;"	v
ReductionNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short ReductionNum;                   \/\/减持数量$/;"	m	struct:JWFundOrganizationViewData	access:public
Region	.\lib\libprotocol\include\jw_struct.h	/^    JWRegionData Region[JW_MAX_REGION_NUM]; \/\/分部指标数组$/;"	m	struct:JWCostDistributionRsp	access:public
Region	.\lib\libprotocol\include\jw_struct.h	/^    JWRegionData_0A18 Region[JW_MAX_REGION_NUM]; \/\/区间数据数组$/;"	m	struct:JWCostDistributionDetailRsp	access:public
RegionBegin	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int RegionBegin;  \/\/区间起点（客户端  \/1000）,单位：元(CBFB)$/;"	m	struct:JWRegionData	access:public
RegionBegin	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int RegionBegin; \/\/区间起点$/;"	m	struct:JWRegionData_0A18	access:public
RegionEnd	.\lib\libprotocol\include\jw_struct.h	/^       unsigned int RegionEnd;  \/\/区间终点（客户端  \/1000）,单位：元(CBFB)$/;"	m	struct:JWRegionData	access:public
RegionEnd	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int RegionEnd;   \/\/区间终点$/;"	m	struct:JWRegionData_0A18	access:public
RegionNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char RegionNumber;\/\/区间个数$/;"	m	struct:JWCostDistributionDetailRsp	access:public
RegionNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char RegionNumber;\/\/区间个数$/;"	m	struct:JWCostDistributionRsp	access:public
RegionType	.\lib\libprotocol\include\jw_struct.h	/^       unsigned char RegionType; \/\/区间类型：(CBFB)$/;"	m	struct:JWRegionData	access:public
RegionType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char RegionType; \/\/区间类型：$/;"	m	struct:JWRegionData_0A18	access:public
Restore	.\comm\ShmMap.cc	/^CShmMap::Restore()$/;"	f	class:CShmMap	signature:()
Restore	.\comm\ShmMap.h	/^	int Restore();$/;"	p	class:CShmMap	access:public	signature:()
RiseFallBreadthData	.\lib\libprotocol\include\jw_struct.h	/^    JWRiseFallBreadthData RiseFallBreadthData[JW_MAX_RISE_FALL_NUM];\/\/行情涨跌幅数据结构数组$/;"	m	struct:JWRiseFallBreadthDataRsp	access:public
SHM_FLAG	.\comm\ShmMap.cc	/^const unsigned int SHM_FLAG = IPC_CREAT | 0666;$/;"	v
SHM_ITEM_NUM	.\comm\ShmMap.cc	/^const unsigned int SHM_ITEM_NUM = 5000;$/;"	v
SHM_KEY	.\comm\ServerDef.h	/^const unsigned int SHM_KEY = 0x10000000;$/;"	v
SHM_SIZE	.\comm\ShmMap.cc	/^const unsigned int SHM_SIZE = SHM_ITEM_NUM * sizeof(MapItem);$/;"	v
SOURCE_TYPE_DYJ_CLIENT_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_GBS = 70;\/\/股博士$/;"	v
SOURCE_TYPE_DYJ_CLIENT_GGW	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_GGW = 68;\/\/股票管家$/;"	v
SOURCE_TYPE_DYJ_CLIENT_MANUAL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_MANUAL = 127;\/\/手工开通的帐号$/;"	v
SOURCE_TYPE_DYJ_CLIENT_MOBILE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_MOBILE = 72;\/\/手机终端$/;"	v
SOURCE_TYPE_DYJ_CLIENT_PCW	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_PCW = 66;\/\/评测王$/;"	v
SOURCE_TYPE_DYJ_CLIENT_TAO	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_TAO = 74;\/\/淘股天堂等金融终端$/;"	v
SOURCE_TYPE_DYJ_CLIENT_XGW	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_XGW = 64;\/\/选股王$/;"	v
SOURCE_TYPE_DYJ_MAX_CLIENT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_MAX_CLIENT = 127;$/;"	v
SOURCE_TYPE_DYJ_MIN_CLIENT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_MIN_CLIENT = 64;$/;"	v
SOURCE_TYPE_HUAGUJIE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_HUAGUJIE = 2;\/\/华股老街$/;"	v
SOURCE_TYPE_IM_CLIENT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_IM_CLIENT = 1;\/\/IM$/;"	v
SOURCE_TYPE_MAX_IM	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MAX_IM = 31;$/;"	v
SOURCE_TYPE_MAX_WEB	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MAX_WEB = 63;$/;"	v
SOURCE_TYPE_MIN_IM	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MIN_IM = 1;$/;"	v
SOURCE_TYPE_MIN_WEB	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MIN_WEB = 32;$/;"	v
SOURCE_TYPE_STOCK_GAME_MANUAL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_STOCK_GAME_MANUAL = 126;\/\/炒股大赛手工开通的帐号$/;"	v
SOURCE_TYPE_WEB_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_GBS = 36;\/\/WEB股博士$/;"	v
SOURCE_TYPE_WEB_GBS_IMPORT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_GBS_IMPORT = 3;\/\/WEB 股博士导入的帐号$/;"	v
SOURCE_TYPE_WEB_HOME	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_HOME = 33;\/\/788111门户$/;"	v
SOURCE_TYPE_WEB_RT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_RT = 35;\/\/炒股大赛$/;"	v
SOURCE_TYPE_WEB_SNS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_SNS = 32;\/\/SNS社区$/;"	v
SOURCE_TYPE_WEB_TAO	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_TAO = 34;\/\/淘股天堂$/;"	v
SelBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrder; \/\/卖出大单 数\/金额$/;"	m	struct:JWDDEData	access:public
SelBigOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrder; \/\/卖出大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
SelBigOrderAmount	.\comm\JsonFeildDef.h	/^const char* const SelBigOrderAmount		= "B05"; \/\/	卖出大单额$/;"	v
SelBigOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrderAmount;\/\/卖出大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SelBigOrderVolume	.\comm\JsonFeildDef.h	/^const char* const SelBigOrderVolume		= "B04"; \/\/	卖出大单量$/;"	v
SelBigOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelBigOrderVolume;\/\/卖出大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SelLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrder; \/\/卖出特大单 数\/金额$/;"	m	struct:JWDDEData	access:public
SelLargeOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrder; \/\/卖出特大单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
SelLargeOrderAmount	.\comm\JsonFeildDef.h	/^const char* const SelLargeOrderAmount	= "B17"; \/\/	卖出特大单额$/;"	v
SelLargeOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrderAmount;\/\/卖出特大单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SelLargeOrderVolume	.\comm\JsonFeildDef.h	/^const char* const SelLargeOrderVolume	= "B16"; \/\/	卖出特大单量$/;"	v
SelLargeOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelLargeOrderVolume;\/\/卖出特大单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SelMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrder; \/\/卖出中单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
SelMidOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrder;\/\/卖出中单 数\/金额$/;"	m	struct:JWDDEData	access:public
SelMidOrderAmount	.\comm\JsonFeildDef.h	/^const char* const SelMidOrderAmount		= "B13"; \/\/	卖出中单额$/;"	v
SelMidOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrderAmount;\/\/卖出中单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SelMidOrderVolume	.\comm\JsonFeildDef.h	/^const char* const SelMidOrderVolume		= "B12"; \/\/	卖出中单量$/;"	v
SelMidOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMidOrderVolume;\/\/卖出中单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SelMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrder; \/\/卖出小单 数\/金额$/;"	m	struct:JWDDEData	access:public
SelMinOrder	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrder; \/\/卖出小单 数\/金额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
SelMinOrderAmount	.\comm\JsonFeildDef.h	/^const char* const SelMinOrderAmount		= "B09"; \/\/	卖出小单额$/;"	v
SelMinOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrderAmount;\/\/卖出小单额，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SelMinOrderVolume	.\comm\JsonFeildDef.h	/^const char* const SelMinOrderVolume		= "B08"; \/\/	卖出小单量$/;"	v
SelMinOrderVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SelMinOrderVolume;\/\/卖出小单量，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStkFundFlowDetailData	access:public
SellCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SellCount; \/\/卖出成交笔数$/;"	m	struct:JWDDEData	access:public
SellCount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SellCount; \/\/卖出成交笔数，服务端 x1000，客户端 \/1000$/;"	m	struct:JWDDEHisData	access:public
SellInfo	.\lib\libprotocol\include\jw_struct.h	/^	JWSellLevel SellInfo[JW_MAX_STOCK_BUY_SELL_NUM];\/\/委卖详情$/;"	m	struct:JWStockDetail	access:public
SellNum	.\comm\JsonFeildDef.h	/^const char* const SellNum           = "M10"; \/\/卖出数量  $/;"	v
SellNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short SellNum;                        \/\/卖出数量$/;"	m	struct:JWFundOrganizationViewData	access:public
Send	.\comm\TcpClient.cc	/^CTcpClient::Send(const char* buffer, int size)$/;"	f	class:CTcpClient	signature:(const char* buffer, int size)
Send	.\comm\TcpClient.h	/^    int Send(const char* buffer, int size);$/;"	p	class:CTcpClient	access:public	signature:(const char* buffer, int size)
SeriesAddDays	.\comm\JsonFeildDef.h	/^const char* const SeriesAddDays        = "A22"; \/\/连续增仓天数(SeriesNetIn>0表示连续增仓， SeriesNetOut>0表示连续减仓)$/;"	v
SeriesAddDays	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int SeriesAddDays;\/\/连续增仓天数$/;"	m	struct:JWStkFundFlowData	access:public
SeriesNetIn	.\comm\JsonFeildDef.h	/^const char* const SeriesNetIn          = "A23"; \/\/连续增仓机构净流入                                                  $/;"	v
SeriesNetIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetIn; \/\/连续增仓机构净流入服务器\/1000$/;"	m	struct:JWStkFundFlowData	access:public
SeriesNetInPower	.\comm\JsonFeildDef.h	/^const char* const SeriesNetInPower     = "A24"; \/\/连续减仓机构净流入力度                                              $/;"	v
SeriesNetInPower	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetInPower;\/\/连续减仓机构净流入力度$/;"	m	struct:JWStkFundFlowData	access:public
SeriesNetOut	.\comm\JsonFeildDef.h	/^const char* const SeriesNetOut         = "A25"; \/\/连续增仓机构净流出                                                  $/;"	v
SeriesNetOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetOut;\/\/连续增仓机构净流出服务器\/1000$/;"	m	struct:JWStkFundFlowData	access:public
SeriesNetOutPower	.\comm\JsonFeildDef.h	/^const char* const SeriesNetOutPower    = "A26"; \/\/连续减仓机构净流出力度                                              $/;"	v
SeriesNetOutPower	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t SeriesNetOutPower;\/\/连续减仓机构净流出力度$/;"	m	struct:JWStkFundFlowData	access:public
Set	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::Set(const string & key,const string & value)$/;"	f	class:Handler::CMemcachedHandler	signature:(const string & key,const string & value)
Set	.\comm\MemcachedHandler.h	/^	int Set(const string& key, const string& value);$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:(const string& key, const string& value)
SetRecvBuffSize	.\comm\TcpClient.cc	/^CTcpClient::SetRecvBuffSize(unsigned int size)$/;"	f	class:CTcpClient	signature:(unsigned int size)
SetRecvBuffSize	.\comm\TcpClient.h	/^	int SetRecvBuffSize(unsigned int size);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int size)
SetRecvTimeout	.\comm\TcpClient.cc	/^CTcpClient::SetRecvTimeout(unsigned int sec)$/;"	f	class:CTcpClient	signature:(unsigned int sec)
SetRecvTimeout	.\comm\TcpClient.h	/^	int SetRecvTimeout(unsigned int sec);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int sec)
SetSendBuffSize	.\comm\TcpClient.cc	/^CTcpClient::SetSendBuffSize(unsigned int size)$/;"	f	class:CTcpClient	signature:(unsigned int size)
SetSendBuffSize	.\comm\TcpClient.h	/^	int SetSendBuffSize(unsigned int size);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int size)
SetSendTimeout	.\comm\TcpClient.cc	/^CTcpClient::SetSendTimeout(unsigned int sec)$/;"	f	class:CTcpClient	signature:(unsigned int sec)
SetSendTimeout	.\comm\TcpClient.h	/^	int SetSendTimeout(unsigned int sec);$/;"	p	class:CTcpClient	access:public	signature:(unsigned int sec)
ShortResistancePrice	.\comm\JsonFeildDef.h	/^const char* const ShortResistancePrice      = "D3"; \/\/短线阻力位                         $/;"	v
ShortResistancePrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ShortResistancePrice;  \/\/短线阻力位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
ShortSupportPrice	.\comm\JsonFeildDef.h	/^const char* const ShortSupportPrice			= "D2"; \/\/短线支撑位                         $/;"	v
ShortSupportPrice	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ShortSupportPrice;     \/\/短线支撑位，服务端 x1000，客户端 \/1000$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
Socket	.\comm\TcpClient.cc	/^CTcpClient::Socket()$/;"	f	class:CTcpClient	signature:()
Socket	.\comm\TcpClient.h	/^	 int Socket();$/;"	p	class:CTcpClient	access:private	signature:()
StartCalculateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int StartCalculateDate;\/\/开始计算日期（格式：Unix格式时间数值）$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
StatDays	.\comm\JsonFeildDef.h	/^const char* const StatDays          = "M03"; \/\/统计天数  $/;"	v
StatDays	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StatDays;                       \/\/统计天数$/;"	m	struct:JWFundOrganizationViewData	access:public
StkFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^    JWStkFundFlowData StkFundFlowData[JW_MAX_STOCK_NUM];\/\/资金流向数据结构数组$/;"	m	struct:JWStkFundFlowDataRsp	access:public
StkFundFlowData	.\lib\libprotocol\include\jw_struct.h	/^    JWStkFundFlowDetailData StkFundFlowData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWStkFundFlowDetailDataRsp	access:public
StockAllNewsData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockAllNewsData StockAllNewsData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWBatchStockNewsNumInfoRsp	access:public
StockDetail	.\lib\libprotocol\include\jw_struct.h	/^    JWStockDetail StockDetail[JW_MAX_STOCK_NUM];   \/\/个股详情数组$/;"	m	struct:JWPullMarketDataRsp	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;                                          \/\/股票索引$/;"	m	struct:JWFundAmentalsTargetsData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;                     \/\/股票索引$/;"	m	struct:JWFundOrganizationViewData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;              \/\/股票索引$/;"	m	struct:JWTechniccalAndMarketData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;          \/\/股票索引$/;"	m	struct:JWFundIndustryRanksData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;          \/\/股票索引$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;       \/\/股票索引$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;      \/\/股票索引$/;"	m	struct:JWFundAluationReserchData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWCostDistributionDetailRsp	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWCostDistributionRsp	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDDEData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDDEHisDataRsp	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDdsortData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWDiagnoseDataRsp	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWFinancialMainCostData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex; \/\/股票索引$/;"	m	struct:JWStkFundFlowData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWDdeHisDataInfo	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWKlineFormData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWMultiEmptyGameDataRsp	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWRiseFallBreadthData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex;\/\/股票索引$/;"	m	struct:JWStkFundFlowDetailData	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex[JW_MAX_STOCK_NUM]; \/\/股票索引数组$/;"	m	struct:JWStkFundFlowInfo	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex[JW_MAX_STOCK_NUM];\/\/股票索引数组$/;"	m	struct:JWDdeDataInfo	access:public
StockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockIndex[JW_MAX_STOCK_NUM];\/\/股票索引数组$/;"	m	struct:JWTechniccalTrendAnaysisReq	access:public
StockInfoData	.\lib\libprotocol\include\jw_struct.h	/^    JWStockInfoData StockInfoData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWStockGetRefereceDataRsp	access:public
StockKey	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockKey;\/\/股票KEY$/;"	m	struct:JWStockRankItem	access:public
StockKey	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockKey;\/\/股票代码+市场类型$/;"	m	struct:JWAddStockInfo	access:public
StockKey	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockKey;\/\/股票代码+市场类型$/;"	m	struct:JWDelStockInfo	access:public
StockList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockList[JW_MAX_GROUP_STOCK_NUM];\/\/股票列表$/;"	m	struct:JWGetStockInfoRsp	access:public
StockList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockList[JW_MAX_GROUP_STOCK_NUM];\/\/股票列表$/;"	m	struct:JWGetStockSortRsp	access:public
StockList	.\lib\libprotocol\include\jw_struct.h	/^    JWStockKey StockList[JW_MAX_GROUP_STOCK_NUM];\/\/股票列表$/;"	m	struct:JWSetStockSortInfo	access:public
StockMinData	.\lib\libprotocol\include\jw_struct.h	/^   JWStockMinData StockMinData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWPullMinuteDataInfoRsp	access:public
StockNews	.\lib\libprotocol\include\jw_struct.h	/^    JWStockNewsNumInfo StockNews[JW_MAX_STOCK_NUM];$/;"	m	struct:JWBatchStockNewsNumInfo	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;                         \/\/股票个数$/;"	m	struct:JWFundAluationReserchRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;      \/\/股票个数$/;"	m	struct:JWFundOrganizationViewRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWFinancialMainCostRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWStkFundFlowDataRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWStkFundFlowInfo	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber; \/\/股票个数$/;"	m	struct:JWTechniccalTrendAnaysisReq	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;$/;"	m	struct:JWFundAmentalsTargetsRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;$/;"	m	struct:JWTechniccalAndMarketRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWDDSortDataRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWDdeDataInfo	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWFundAmentalsAnalysisRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWFundIndustryRanksRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWStkFundFlowDetailDataRsp	access:public
StockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StockNumber;\/\/股票个数$/;"	m	struct:JWTechniccalTrendAnaysisRsp	access:public
StopBit	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short StopBit; \/\/停止位：0表示停止，>0表示还有数据$/;"	m	struct:JWDDEHisData	access:public
StrToHex	.\src\main.cc	/^StrToHex(const string& str)$/;"	f	signature:(const string& str)
SuccessRate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int SuccessRate;\/\/成功率，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
Sync	.\comm\HandlerBase.cc	/^CHandlerBase::Sync()$/;"	f	class:Handler::CHandlerBase	signature:()
Sync	.\comm\HandlerBase.h	/^    int Sync();$/;"	p	class:Handler::CHandlerBase	access:public	signature:()
SyncToAll	.\comm\HandlerBase.h	/^    virtual int SyncToAll() =0;$/;"	p	class:Handler::CHandlerBase	access:private	signature:()
SyncToAll	.\funds\inc\FundHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundHandler	access:private	signature:()
SyncToAll	.\funds\src\FundHandler.cc	/^CFundHandler::SyncToAll()$/;"	f	class:Handler::CFundHandler	signature:()
SyncToAll	.\inc\FinanceAnysHandler.h	/^	int SyncToAll();$/;"	p	class:Handler::CFinanceAnysHandler	access:private	signature:()
SyncToAll	.\inc\FundAluHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundAluHandler	access:private	signature:()
SyncToAll	.\inc\FundDtlHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundDtlHandler	access:private	signature:()
SyncToAll	.\inc\FundFinanceHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundFinanceHandler	access:private	signature:()
SyncToAll	.\inc\FundHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundHandler	access:private	signature:()
SyncToAll	.\inc\FundInduHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CFundInduHandler	access:private	signature:()
SyncToAll	.\inc\TrendAnysHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CTrendAnysHandler	access:private	signature:()
SyncToAll	.\inc\TrendMarketHandler.h	/^    int SyncToAll();$/;"	p	class:Handler::CTrendMarketHandler	access:private	signature:()
SyncToAll	.\src\FinanceAnysHandler.cc	/^CFinanceAnysHandler::SyncToAll()$/;"	f	class:Handler::CFinanceAnysHandler	signature:()
SyncToAll	.\src\FundAluHandler.cc	/^CFundAluHandler::SyncToAll()$/;"	f	class:Handler::CFundAluHandler	signature:()
SyncToAll	.\src\FundDtlHandler.cc	/^CFundDtlHandler::SyncToAll()$/;"	f	class:Handler::CFundDtlHandler	signature:()
SyncToAll	.\src\FundFinanceHandler.cc	/^CFundFinanceHandler::SyncToAll()$/;"	f	class:Handler::CFundFinanceHandler	signature:()
SyncToAll	.\src\FundHandler.cc	/^CFundHandler::SyncToAll()$/;"	f	class:Handler::CFundHandler	signature:()
SyncToAll	.\src\FundInduHandler.cc	/^CFundInduHandler::SyncToAll()$/;"	f	class:Handler::CFundInduHandler	signature:()
SyncToAll	.\src\TrendAnysHandler.cc	/^CTrendAnysHandler::SyncToAll()$/;"	f	class:Handler::CTrendAnysHandler	signature:()
SyncToAll	.\src\TrendMarketHandler.cc	/^CTrendMarketHandler::SyncToAll()$/;"	f	class:Handler::CTrendMarketHandler	signature:()
TICKET_TYPE_CLIENT_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char TICKET_TYPE_CLIENT_GBS = 128;\/\/股博士认证票据$/;"	v
TICKET_TYPE_JUMP_HUAGU_URL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char TICKET_TYPE_JUMP_HUAGU_URL = 2;\/\/跳转华股URL票据$/;"	v
TICKET_TYPE_TERMINAL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char TICKET_TYPE_TERMINAL = 127;\/\/终端认证票据$/;"	v
TechniccalAndMarketData	.\lib\libprotocol\include\jw_struct.h	/^    JWTechniccalAndMarketData TechniccalAndMarketData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWTechniccalAndMarketRsp	access:public
TechniccalTrendAnaysisData	.\lib\libprotocol\include\jw_struct.h	/^    JWTechniccalTrendAnaysisData TechniccalTrendAnaysisData[JW_MAX_STOCK_NUM];$/;"	m	struct:JWTechniccalTrendAnaysisRsp	access:public
TenDays	.\funds\inc\FundHandler.h	/^		TenDays,$/;"	e	enum:Handler::CFundHandler::FundType
TenDays	.\inc\FundHandler.h	/^		TenDays,$/;"	e	enum:Handler::CFundHandler::FundType
ThreeDays	.\funds\inc\FundHandler.h	/^		ThreeDays,$/;"	e	enum:Handler::CFundHandler::FundType
ThreeDays	.\inc\FundHandler.h	/^		ThreeDays,$/;"	e	enum:Handler::CFundHandler::FundType
Time	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Time;\/\/日期时间$/;"	m	struct:JWDdsortData	access:public
TimeStamp	.\comm\JsonFeildDef.h	/^const char* const TimeStamp            = "A27"; \/\/时间戳                                                              $/;"	v
TimeStamp	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TimeStamp; \/\/时间戳$/;"	m	struct:JWIndustryFundFlowData	access:public
TimeStamp	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TimeStamp; \/\/时间戳$/;"	m	struct:JWStkFundFlowData	access:public
ToJson	.\comm\HandlerBase.h	/^    virtual string& ToJson(const void* data, string& json) =0 ;$/;"	p	class:Handler::CHandlerBase	access:private	signature:(const void* data, string& json)
ToJson	.\funds\inc\FundHandler.h	/^    string& ToJson(const void* data, string& json);   $/;"	p	class:Handler::CFundHandler	access:private	signature:(const void* data, string& json)
ToJson	.\funds\src\FundHandler.cc	/^CFundHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundHandler	signature:(const void* data, string& json)
ToJson	.\inc\FinanceAnysHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFinanceAnysHandler	access:private	signature:(const void* data, string& json)
ToJson	.\inc\FundAluHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundAluHandler	access:private	signature:(const void* data, string& json)
ToJson	.\inc\FundDtlHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundDtlHandler	access:private	signature:(const void* data, string& json)
ToJson	.\inc\FundFinanceHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundFinanceHandler	access:private	signature:(const void* data, string& json)
ToJson	.\inc\FundHandler.h	/^    string& ToJson(const void* data, string& json);   $/;"	p	class:Handler::CFundHandler	access:private	signature:(const void* data, string& json)
ToJson	.\inc\FundInduHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CFundInduHandler	access:private	signature:(const void* data, string& json)
ToJson	.\inc\TrendAnysHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CTrendAnysHandler	access:private	signature:(const void* data, string& json)
ToJson	.\inc\TrendMarketHandler.h	/^    string& ToJson(const void* data, string& json);$/;"	p	class:Handler::CTrendMarketHandler	access:private	signature:(const void* data, string& json)
ToJson	.\src\FinanceAnysHandler.cc	/^CFinanceAnysHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFinanceAnysHandler	signature:(const void* data, string& json)
ToJson	.\src\FundAluHandler.cc	/^CFundAluHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundAluHandler	signature:(const void* data, string& json)
ToJson	.\src\FundDtlHandler.cc	/^CFundDtlHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundDtlHandler	signature:(const void* data, string& json)
ToJson	.\src\FundFinanceHandler.cc	/^CFundFinanceHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundFinanceHandler	signature:(const void* data, string& json)
ToJson	.\src\FundHandler.cc	/^CFundHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundHandler	signature:(const void* data, string& json)
ToJson	.\src\FundInduHandler.cc	/^CFundInduHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CFundInduHandler	signature:(const void* data, string& json)
ToJson	.\src\TrendAnysHandler.cc	/^CTrendAnysHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CTrendAnysHandler	signature:(const void* data, string& json)
ToJson	.\src\TrendMarketHandler.cc	/^CTrendMarketHandler::ToJson(const void* data, string& json)$/;"	f	class:Handler::CTrendMarketHandler	signature:(const void* data, string& json)
ToSigned	.\comm\ToSigned.h	/^ToSigned(uint64_t n, unsigned int val)$/;"	f	signature:(uint64_t n, unsigned int val)
ToSigned	.\comm\ToSigned.h	/^ToSigned(unsigned int n, unsigned int val)$/;"	f	signature:(unsigned int n, unsigned int val)
Today	.\funds\inc\FundHandler.h	/^		Today=0,$/;"	e	enum:Handler::CFundHandler::FundType
Today	.\inc\FundHandler.h	/^		Today=0,$/;"	e	enum:Handler::CFundHandler::FundType
TotalFlowIn	.\comm\JsonFeildDef.h	/^const char* const TotalFlowIn          = "A28"; \/\/总流入(元)                                                          $/;"	v
TotalFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowIn; \/\/总流入$/;"	m	struct:JWStkFundFlowData	access:public
TotalFlowIn	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowIn;\/\/行业资金总流入$/;"	m	struct:JWIndustryFundFlowData	access:public
TotalFlowOut	.\comm\JsonFeildDef.h	/^const char* const TotalFlowOut         = "A29"; \/\/总流出(元)$/;"	v
TotalFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowOut;\/\/行业资金总流出$/;"	m	struct:JWIndustryFundFlowData	access:public
TotalFlowOut	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t TotalFlowOut;\/\/总流出$/;"	m	struct:JWStkFundFlowData	access:public
TurnOverRate1	.\comm\JsonFeildDef.h	/^const char* const TurnOverRate1				= "F5"; \/\/1日换手率                     $/;"	v
TurnOverRate1	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TurnOverRate1;             \/\/1日换手率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
TurnOverRate3	.\comm\JsonFeildDef.h	/^const char* const TurnOverRate3				= "F6"; \/\/3日换手率                     $/;"	v
TurnOverRate3	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TurnOverRate3;             \/\/3日换手率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
TurnOverRate5	.\comm\JsonFeildDef.h	/^const char* const TurnOverRate5				= "F7"; \/\/5日换手率                     $/;"	v
TurnOverRate5	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int TurnOverRate5;             \/\/5日换手率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWTechniccalAndMarketData	access:public
TwentyDays	.\funds\inc\FundHandler.h	/^		TwentyDays$/;"	e	enum:Handler::CFundHandler::FundType
TwentyDays	.\inc\FundHandler.h	/^		TwentyDays$/;"	e	enum:Handler::CFundHandler::FundType
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char Type;\/\/票据类型$/;"	m	struct:JWUpdTicketInfo	access:public
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type; \/\/类型：1为涨幅，2为跌幅$/;"	m	struct:JWRiseFallBreadthDataRsp	access:public
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/股票索引$/;"	m	struct:JWRiseFallBreadthDataInfo	access:public
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/类型： 1：金叉\/2：死叉$/;"	m	struct:JWMultiEmptyGameData	access:public
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/类型：0、最新看多形态；1、近期看多有效形态；2、最新看空形态；3、近期看空有效形态$/;"	m	struct:JWKlineFormDataReq	access:public
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/类型：0、最新看多形态；1、近期看多有效形态；2、最新看空形态；3、近期看空有效形态$/;"	m	struct:JWKlineFormDataRsp	access:public
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/排序类型，1：最多自选排名，2：自选飚升排名$/;"	m	struct:JWGetStockRankInfo	access:public
Type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short Type;\/\/排序类型，1：最多自选排名，2：自选飚升排名$/;"	m	struct:JWGetStockRankRsp	access:public
UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWCommonReqInfo	access:public
UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWCreateAccountRsp	access:public
UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWGetAccountRegTimeRsp	access:public
UIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UIN;\/\/用户ID$/;"	m	struct:JWLoginRsp	access:public
USER_FLAG	.\comm\MemcachedHandler.cc	/^const unsigned short USER_FLAG = 0;\/\/ C# 客户端需要设置该值才能访问$/;"	v
Up10	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Up10;\/\/10日内飘红$/;"	m	struct:JWDdsortData	access:public
UpCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpCount; \/\/上涨家数$/;"	m	struct:JWIndustryFundFlowData	access:public
UpDays	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpDays;\/\/连续飘红$/;"	m	struct:JWDdsortData	access:public
UpdateDate	.\comm\JsonFeildDef.h	/^const char* const UpdateDate           = "A99"; \/\/日期（格式：Unix格式时间数值）$/;"	v
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;                       \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundOrganizationViewData	access:public
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;                \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWTechniccalAndMarketData	access:public
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;            \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundIndustryRanksData	access:public
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;            \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWTechniccalTrendAnaysisData	access:public
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;         \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;        \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundAluationReserchData	access:public
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate;        \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFundAmentalsTargetsContentData	access:public
UpdateDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int UpdateDate; \/\/日期（格式：Unix格式时间数值）$/;"	m	struct:JWFinancialMainCostContentData	access:public
XSMLL	.\comm\JsonFeildDef.h	/^const char* const XSMLL                 = "K12"; \/\/个股销售毛利率      $/;"	v
XSMLL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int XSMLL;                 \/\/个股销售毛利率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
XSMLL_HY	.\comm\JsonFeildDef.h	/^const char* const XSMLL_HY             = "K13"; \/\/行业销售毛利率      $/;"	v
XSMLL_HY	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int XSMLL_HY;              \/\/行业销售毛利率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundIndustryRanksData	access:public
XSMLL_PM	.\comm\JsonFeildDef.h	/^const char* const XSMLL_PM              = "K14"; \/\/个股销售毛利率排名  $/;"	v
XSMLL_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short XSMLL_PM;            \/\/个股销售毛利率排名$/;"	m	struct:JWFundIndustryRanksData	access:public
YYSR	.\comm\JsonFeildDef.h	/^const char* const YYSR			= "H2"; \/\/营业收入        $/;"	v
YYSR	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t YYSR;                   \/\/营业收入，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
YYSR_TB_ZZ	.\comm\JsonFeildDef.h	/^const char* const YYSR_TB_ZZ	= "H3";	\/\/营业收入同比增长$/;"	v
YYSR_TB_ZZ	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int YYSR_TB_ZZ;         \/\/营业收入同比增长，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundAmentalsAnalysisData	access:public
YYSR_TB_ZZL	.\comm\JsonFeildDef.h	/^const char* const YYSR_TB_ZZL	= "I3"; \/\/营业收入同比增长率            $/;"	v
YYSR_TB_ZZL	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int YYSR_TB_ZZL;       \/\/营业收入同比增长率，服务端 x100000，客户端 \/100000$/;"	m	struct:JWFundAmentalsTargetsContentData	access:public
Yield	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int Yield;\/\/收益率，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMultiEmptyGameData	access:public
ZZC	.\comm\JsonFeildDef.h	/^const char* const ZZC					= "K03"; \/\/个股总资产          $/;"	v
ZZC	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t ZZC;                       \/\/个股总资产，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundIndustryRanksData	access:public
ZZC_HY	.\comm\JsonFeildDef.h	/^const char* const ZZC_HY                = "K04"; \/\/行业总资产均值      $/;"	v
ZZC_HY	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t ZZC_HY;                    \/\/行业总资产均值，服务端 x1000，客户端 \/1000$/;"	m	struct:JWFundIndustryRanksData	access:public
ZZC_PM	.\comm\JsonFeildDef.h	/^const char* const ZZC_PM                = "K05"; \/\/个股总资产排名      $/;"	v
ZZC_PM	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short ZZC_PM;              \/\/个股总资产排名$/;"	m	struct:JWFundIndustryRanksData	access:public
_JW_OS_H_	.\lib\libprotocol\include\jw_os.h	11;"	d
_JW_PROTOCOL_H_	.\lib\libprotocol\include\jw_protocol.h	3;"	d
_JW_PROTOCOL_STOCK_H_	.\lib\libprotocol\include\jw_protocol_stock.h	3;"	d
_JW_STRUCT_H_	.\lib\libprotocol\include\jw_struct.h	10;"	d
__ALL_HANDLER_H_	.\comm\AllHandler.h	2;"	d
__FINANCE_ANYS_HANDLER_H_	.\inc\FinanceAnysHandler.h	2;"	d
__FUND_ALU_HANDLER_H_	.\inc\FundAluHandler.h	2;"	d
__FUND_DTL_HANDLER_H_	.\inc\FundDtlHandler.h	2;"	d
__FUND_FINANCE_H_	.\inc\FundFinanceHandler.h	2;"	d
__FUND_HANDLER_H_	.\funds\inc\FundHandler.h	2;"	d
__FUND_HANDLER_H_	.\inc\FundHandler.h	2;"	d
__FUND_INDU_HANDLER_H_	.\inc\FundInduHandler.h	2;"	d
__GLOBAL_H_	.\comm\global.h	7;"	d
__HANDLER_FACTORY_H_	.\comm\HandlerFactory.h	2;"	d
__HANDLER_FACTORY_H_	.\inc\HandlerFactory.h	2;"	d
__HANDLER_H_	.\comm\HandlerBase.h	2;"	d
__HEXDUMPIMP_H_	.\comm\HexDumpImp.h	2;"	d
__JSON_FEILD_DEF_H_	.\comm\JsonFeildDef.h	2;"	d
__JW_DEFINE_H__	.\lib\libprotocol\include\jw_define.h	11;"	d
__MEMCACHEDHANDLER_H_	.\comm\MemcachedHandler.h	7;"	d
__SERVER_DEF_H_	.\comm\ServerDef.h	2;"	d
__SHMMAP_H_	.\comm\ShmMap.h	2;"	d
__TCPCLIENT_H_	.\comm\TcpClient.h	2;"	d
__TO_SIGNED_H_	.\comm\ToSigned.h	2;"	d
__TREND_ANYS_HANDLER_H_	.\inc\TrendAnysHandler.h	2;"	d
__TREND_HANDLER_H_	.\inc\TrendMarketHandler.h	2;"	d
a	.\lib\libprotocol\include\jw_struct.h	/^    char a[1];\/\/股票列表$/;"	m	struct:JWXXXXRsp	access:public
account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfo	access:public
account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfoRsp	access:public
account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWActiveAccountInfo	access:public
account	.\lib\libprotocol\include\jw_struct.h	/^    char account[JW_MAX_ACCOUNT_LEN+1];\/\/账号,utf-8编码,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
advid	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int advid;\/\/广告来源ID$/;"	m	struct:JWRegAccountInfo	access:public
alias_num	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short alias_num;$/;"	m	struct:JWGetUserAliasInfoRsp	access:public
attention	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int attention;\/\/操盘风格.$/;"	m	struct:JWRegAccountInfo	access:public
birth	.\lib\libprotocol\include\jw_struct.h	/^    char birth[JW_MAX_BIRTH_LEN+1];\/\/生日,格式为YYYY\/MM\/DD,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
birth	.\lib\libprotocol\include\jw_struct.h	/^    char birth[JW_MAX_BIRTH_LEN+1];\/\/生日格式：YYYYMMDD  例如：19810306$/;"	m	struct:JWAccountInfoRsp	access:public
cAgencyRating	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cAgencyRating;             \/\/机构评级，(范围：0 ~ 100) (ZHPC|9)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
cBuyLevel	.\lib\libprotocol\include\jw_struct.h	/^	unsigned char cBuyLevel;                      \/\/委买个数$/;"	m	struct:JWStockDetail	access:public
cCompanyOperation	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cCompanyOperation;         \/\/公司运营，(范围：0 ~ 100) (ZHPC|15)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
cFinanceRisk	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cFinanceRisk;              \/\/财务风险(服务端 +50 如果>100，则直接=100；如果<0，则直接=0)范围：0 ~ 100) (ZHPC|11$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
cMarketType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cMarketType;      \/\/市场类型,$/;"	m	struct:JWEarlyWarningInfo	access:public
cMoneyFlow	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cMoneyFlow;                \/\/资金流向，(范围：0 ~ 100) (ZHPC|7)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
cPriceRisk	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char cPriceRisk;                \/\/价格风险，(范围：0 ~ 100) (ZHPC|13)$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
cSellLevel	.\lib\libprotocol\include\jw_struct.h	/^	unsigned char cSellLevel;                     \/\/委卖个数$/;"	m	struct:JWStockDetail	access:public
city	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int city;\/\/居住地$/;"	m	struct:JWAccountInfoRsp	access:public
city	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int city;\/\/居住地$/;"	m	struct:JWRegAccountInfo	access:public
client_	.\comm\HandlerBase.h	/^    boost::scoped_ptr<CTcpClient> client_;$/;"	m	class:Handler::CHandlerBase	access:protected
code	.\comm\ShmMap.h	/^	char code[7];$/;"	m	struct:tagMapItem	access:public
code_key_list_	.\comm\ShmMap.h	/^	CODE_KEY_MAP code_key_list_;$/;"	m	class:CShmMap	access:private
dwAmount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwAmount;\/\/收益点数$/;"	m	struct:JWIncomeItem	access:public
dwIncomeNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwIncomeNum;\/\/收益个数$/;"	m	struct:JWPayTicketIncomeInfo	access:public
dwOrderAmount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwOrderAmount;\/\/订单金额$/;"	m	struct:JWPayTicketIncomeInfo	access:public
dwOrderResult	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwOrderResult;\/\/订单状态$/;"	m	struct:JWPayTicketIncomeInfo	access:public
dwPayAmount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwPayAmount;\/\/商品支付金额$/;"	m	struct:JWIncomeItem	access:public
dwSaleUIN	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwSaleUIN;\/\/收益用户UIN$/;"	m	struct:JWIncomeItem	access:public
dwSubmitTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int dwSubmitTime;\/\/订单提交时间$/;"	m	struct:JWPayTicketIncomeInfo	access:public
gender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char gender;\/\/性别0:未知,1:男,2:女$/;"	m	struct:JWAccountInfoRsp	access:public
gender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char gender;\/\/性别0:未知,1:男,2:女$/;"	m	struct:JWRegAccountInfo	access:public
host_	.\comm\MemcachedHandler.h	/^	string host_;$/;"	m	class:Handler::CMemcachedHandler	access:private
host_	.\comm\TcpClient.h	/^    string	host_;$/;"	m	class:CTcpClient	access:private
index	.\comm\ShmMap.h	/^	unsigned short index;$/;"	m	struct:tagMapItem	access:public
index_key_list_	.\comm\ShmMap.h	/^	INDEX_KEY_MAP index_key_list_;$/;"	m	class:CShmMap	access:private
init	.\comm\ShmMap.cc	/^CShmMap::init()$/;"	f	class:CShmMap	signature:()
init	.\comm\ShmMap.h	/^	int init();$/;"	p	class:CShmMap	access:public	signature:()
internalID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int internalID;\/\/内部ID,如注册来源URL等$/;"	m	struct:JWRegAccountInfo	access:public
investLevel	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short investLevel;\/\/投资能力 0:有点余钱，想看看   1：经济能力一般  2：中产阶级 3：比较富裕  4:什么都没有$/;"	m	struct:JWRegAccountInfo	access:public
invest_level	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int invest_level;\/\/投资能力$/;"	m	struct:JWAccountInfoRsp	access:public
ip_addr	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ip_addr;\/\/用户注册时的IP$/;"	m	struct:JWRegAccountInfo	access:public
ip_addr	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int ip_addr;\/\/注册IP$/;"	m	struct:JWAccountInfoRsp	access:public
item_num	.\comm\ShmMap.h	/^	unsigned int item_num;		$/;"	m	struct:tagMapHead	access:public
jw_bind_type	.\lib\libprotocol\include\jw_define.h	/^namespace jw_bind_type$/;"	n
jw_bind_type::JW_BIND_TYPE_EW_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char JW_BIND_TYPE_EW_GBS = 1;\/\/股博士接收预警消息的手机号码$/;"	v
jw_command	.\lib\libprotocol\include\jw_define.h	/^namespace jw_command$/;"	n
jw_command::JW_ACCOUNT_REG_TIME	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_ACCOUNT_REG_TIME =0x0806;\/\/取得帐号注册时间$/;"	v
jw_command::JW_ACCOUNT_STATUS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_ACCOUNT_STATUS  = 0x0803;\/\/查询帐号状态$/;"	v
jw_command::JW_AUTH_CHECK_TICKET	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_CHECK_TICKET = 0x0401;\/\/验证票据$/;"	v
jw_command::JW_AUTH_GET_TICKET_UIN	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_GET_TICKET_UIN = 0x0406;\/\/通过UIN取得认证票据$/;"	v
jw_command::JW_AUTH_LOGIN	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_LOGIN      = 0x0400;\/\/认证登录$/;"	v
jw_command::JW_AUTH_LOGOUT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_LOGOUT     = 0x0402;\/\/注销登陆$/;"	v
jw_command::JW_AUTH_MODI_PWD	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_MODI_PWD = 0x0403;\/\/修改用户密码$/;"	v
jw_command::JW_AUTH_RESET_PWD	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_RESET_PWD     = 0x0409;\/\/重置用户密码$/;"	v
jw_command::JW_AUTH_UPDATE_TICKET	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_AUTH_UPDATE_TICKET = 0x0405;\/\/更新用户Ticket$/;"	v
jw_command::JW_BIND_MOBILE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_BIND_MOBILE = 0x5030;\/\/绑定手机业务主命令字$/;"	v
jw_command::JW_CREATE_ACCOUNT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_CREATE_ACCOUNT  = 0x0809;\/\/开通帐号$/;"	v
jw_command::JW_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_INFO            =   0x5000;\/\/用户资料$/;"	v
jw_command::JW_KEEP_ALIVE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_KEEP_ALIVE      = 0x0005;\/\/心跳$/;"	v
jw_command::JW_PAY_MNG	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_PAY_MNG             = 0x5060;$/;"	v
jw_command::JW_REG_ACTIVATE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_REG_ACTIVATE = 0x0802; \/\/激活账户$/;"	v
jw_command::JW_REG_GET_REGINFO	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_REG_GET_REGINFO = 0x0804;\/\/取用户注册信息$/;"	v
jw_command::JW_REG_PRE_REG	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_REG_PRE_REG = 0x0801;   \/\/注册账户$/;"	v
jw_command::JW_STAT_REPORT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_STAT_REPORT = 0x0810;\/\/用户数据上报$/;"	v
jw_command::JW_STK_HOME_GET_REFERENCE_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_HOME_GET_REFERENCE_DATA = 0x0A60; \/\/取reference data$/;"	v
jw_command::JW_STK_WEB_BATCH_BRIEF_MARKET_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_BATCH_BRIEF_MARKET_DATA = 0x0A22; \/\/批量简要的行情数据$/;"	v
jw_command::JW_STK_WEB_BATCH_NEWS_CONTENT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_BATCH_NEWS_CONTENT  = 0x0A29; \/\/批量拉取单只股票最新新闻标题$/;"	v
jw_command::JW_STK_WEB_COST_DISTRIBUTION_DETAIL	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_COST_DISTRIBUTION_DETAIL = 0x0A18; \/\/个股成本分布明细（? Business 服务器）0x0A18$/;"	v
jw_command::JW_STK_WEB_COST_DISTRIBUTION_INDICATOR	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_COST_DISTRIBUTION_INDICATOR = 0x0A17;\/\/个股成本分布指标（? Business 服务器）0x0A17$/;"	v
jw_command::JW_STK_WEB_DDE_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_DDE_DATA = 0x0A61; \/\/ 拉DDE数据（?Business 服务器） 0x0A61$/;"	v
jw_command::JW_STK_WEB_DDE_HIS_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_DDE_HIS_DATA = 0x0A64; \/\/拉DDE历史数据（?Business 服务器） 0x0A64$/;"	v
jw_command::JW_STK_WEB_DDSORT_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_DDSORT_DATA= 0x0A62; \/\/拉DDSort数据（?Business 服务器） 0x0A62$/;"	v
jw_command::JW_STK_WEB_EARLY_WARNING	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_EARLY_WARNING  =  0X0A1D;  \/\/预警行情数据$/;"	v
jw_command::JW_STK_WEB_FINANCIAL_MAIN_ANALYSIS_COST	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FINANCIAL_MAIN_ANALYSIS_COST = 0x0A70;\/\/资金面-主力分析-主力成本数据$/;"	v
jw_command::JW_STK_WEB_FUNDAMENTALS_ALUATION_RESEARCH	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_ALUATION_RESEARCH = 0x0A75;\/\/基本面-估值研究数据$/;"	v
jw_command::JW_STK_WEB_FUNDAMENTALS_FA_INDUSTRY_RANKINGS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_FA_INDUSTRY_RANKINGS = 0x0A74;\/\/基本面-财务分析-行业排名数据$/;"	v
jw_command::JW_STK_WEB_FUNDAMENTALS_FA_PROFIT_TARGETS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_FA_PROFIT_TARGETS = 0x0A73;\/\/基本面-财务分析-利润指标数据$/;"	v
jw_command::JW_STK_WEB_FUNDAMENTALS_FINANCIAL_ANALYSIS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_FINANCIAL_ANALYSIS = 0x0A72;\/\/基本面-财务分析数据$/;"	v
jw_command::JW_STK_WEB_FUNDAMENTALS_ORGANIZATION_VIEW	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_FUNDAMENTALS_ORGANIZATION_VIEW = 0x0A76;\/\/基本面-机构观点数据$/;"	v
jw_command::JW_STK_WEB_INDUSTRY_FUND_FLOW	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_INDUSTRY_FUND_FLOW = 0x0A53; \/\/拉行业资金流向数据$/;"	v
jw_command::JW_STK_WEB_KLINE_FORM_ENGINE	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_KLINE_FORM_ENGINE = 0x0A67;\/\/K线形态引擎数据0x0A67$/;"	v
jw_command::JW_STK_WEB_MULTI_EMPTY_GAME_CAMP	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_MULTI_EMPTY_GAME_CAMP = 0x0A68;\/\/多空博弈阵营数据(Business 服务器) 0x0A68$/;"	v
jw_command::JW_STK_WEB_NEWS_CONTENT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_NEWS_CONTENT  =  0x0A28;  \/\/单只股票新闻内容数据$/;"	v
jw_command::JW_STK_WEB_PULL_MARKET_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_PULL_MARKET_DATA = 0x0A09;  \/\/拉取最新行情数据$/;"	v
jw_command::JW_STK_WEB_PULL_MINUTE_DATA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_PULL_MINUTE_DATA = 0x0A0A;  \/\/拉分时数据线$/;"	v
jw_command::JW_STK_WEB_RADAR_INDICATOR	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_RADAR_INDICATOR  = 0x0A10; \/\/个股雷达图指标$/;"	v
jw_command::JW_STK_WEB_RISE_FALL_BREADTH	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_RISE_FALL_BREADTH= 0x0A65;\/\/拉实时行情涨跌幅数据（?Business 服务器） 0x0A65$/;"	v
jw_command::JW_STK_WEB_STOCK_FUND_DETAIL	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_STOCK_FUND_DETAIL = 0x0A66;\/\/个股资金流向明细数据  0x0A66$/;"	v
jw_command::JW_STK_WEB_STOCK_FUND_FLOW	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_STOCK_FUND_FLOW = 0x0A50; \/\/拉个股资金流向数据$/;"	v
jw_command::JW_STK_WEB_TECHNICAL_MARKET_PERFORMANCE	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_TECHNICAL_MARKET_PERFORMANCE = 0x0A71; \/\/技术面-市场表现数据$/;"	v
jw_command::JW_STK_WEB_TECHNICAL_TREND_ANALYSIS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_TECHNICAL_TREND_ANALYSIS = 0x0A69;\/\/技术面-趋势分析数据$/;"	v
jw_command::JW_STK_WEB_ZHZD_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_STK_WEB_ZHZD_INFO = 0x0A40; \/\/拉取综合诊断信息(Business 服务器） 0x0A40$/;"	v
jw_command::JW_STOCK	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_STOCK           = 0x000F;\/\/自选股主命令字$/;"	v
jw_command::JW_SUB_BIND_UNBIND	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_BIND_UNBIND                 = 0X0004;\/\/绑定\/解除手机绑定业务$/;"	v
jw_command::JW_SUB_CHECK_VERIFY_CODE	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_CHECK_VERIFY_CODE           = 0x0005;\/\/校验绑定(解除绑定)手机验证码$/;"	v
jw_command::JW_SUB_DEFAULT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned short JW_SUB_DEFAULT     = 0x0000;\/\/默认子命令字$/;"	v
jw_command::JW_SUB_GET_ALIAS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_ALIAS = 0x0019;\/\/取得用户的别名信息$/;"	v
jw_command::JW_SUB_GET_BIND_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_BIND_INFO               = 0x0006;\/\/拉取用户绑定的手机信息$/;"	v
jw_command::JW_SUB_GET_COMM_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_COMM_INFO = 0x0010;\/\/取用户公共资料信息及头像URL$/;"	v
jw_command::JW_SUB_GET_MOBILE_AREA	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_MOBILE_AREA=0x0012;\/\/通过用户ID查询手机帐号的归宿地$/;"	v
jw_command::JW_SUB_GET_MOBILE_AREA_BY_NUMBER	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_MOBILE_AREA_BY_NUMBER = 0x0013;\/\/通过手机号码查询归宿地$/;"	v
jw_command::JW_SUB_GET_STOCK_RANK	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_STOCK_RANK              = 0x0013;\/\/拉取股票排名顺序$/;"	v
jw_command::JW_SUB_GET_STOCK_SORT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_STOCK_SORT              = 0x0012;\/\/拉取自选股排序规则$/;"	v
jw_command::JW_SUB_GET_USER_ACCOUNT_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_GET_USER_ACCOUNT_INFO = 0x0014;\/\/通过UIN取得用户帐号信息$/;"	v
jw_command::JW_SUB_PAY_TICKETINCOME_NOTIFY	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_PAY_TICKETINCOME_NOTIFY = 0x001B;$/;"	v
jw_command::JW_SUB_SET_ALIAS	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_SET_ALIAS = 0x0018;\/\/设置用户的别名信息$/;"	v
jw_command::JW_SUB_SET_COMM_INFO	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_SET_COMM_INFO = 0x0011;\/\/设置用户公共资料信息$/;"	v
jw_command::JW_SUB_SET_STOCK_SORT	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_SET_STOCK_SORT              = 0x0011;\/\/设置自选股排序规则$/;"	v
jw_command::JW_SUB_STOCK_ADD	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_STOCK_ADD                   = 0x0001;\/\/增加自选股$/;"	v
jw_command::JW_SUB_STOCK_DEL	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_STOCK_DEL                   = 0x0002;\/\/删除自选股$/;"	v
jw_command::JW_SUB_STOCK_LIST_BY_GROUPID	.\lib\libprotocol\include\jw_define.h	/^        const unsigned short JW_SUB_STOCK_LIST_BY_GROUPID       = 0x0010;\/\/拉取自选股列表$/;"	v
jw_errorcode	.\lib\libprotocol\include\jw_define.h	/^namespace jw_errorcode$/;"	n
jw_errorcode::REG_ERR_ACTIVATE_NOT_FOUND	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_ACTIVATE_NOT_FOUND   = 0x00150006;  \/\/没有找到激活信息$/;"	v
jw_errorcode::REG_ERR_ACTIVATE_VERIFY_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_ACTIVATE_VERIFY_ERR  = 0x00150007;  \/\/激活码不正确$/;"	v
jw_errorcode::REG_ERR_ALREADY_REG	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_ALREADY_REG          = 0x00150002;  \/\/已注册了$/;"	v
jw_errorcode::REG_ERR_CHGACT_ACT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_ACT_ERR       = 0x00150009;  \/\/修改账号时新账号已经被占用$/;"	v
jw_errorcode::REG_ERR_CHGACT_ARG_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_ARG_ERR       = 0x0015000B;  \/\/修改账号时送过来的参数错误.uin不对$/;"	v
jw_errorcode::REG_ERR_CHGACT_CTIME_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_CTIME_ERR     = 0x0015000C;  \/\/修改账号时账号修改时间过短$/;"	v
jw_errorcode::REG_ERR_CHGACT_PWD_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_PWD_ERR       = 0x00150008;  \/\/修改账号时密码错误$/;"	v
jw_errorcode::REG_ERR_CHGACT_TIME_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_CHGACT_TIME_ERR      = 0x0015000A;  \/\/修改账号时密码设置时间未到$/;"	v
jw_errorcode::REG_ERR_DB	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_DB                   = 0x00150005;  \/\/DB错误$/;"	v
jw_errorcode::REG_ERR_INVALID_ACCOUNT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_INVALID_ACCOUNT      = 0x0015000E;\/\/无效的帐号$/;"	v
jw_errorcode::REG_ERR_NEED_ACTIVATE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_NEED_ACTIVATE        = 0x00150003;  \/\/需要激活$/;"	v
jw_errorcode::REG_ERR_NO_AVA_ID	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_NO_AVA_ID            = 0x00150004;  \/\/没有可用ID了$/;"	v
jw_errorcode::REG_ERR_REPEAT_REG	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_REPEAT_REG           = 0x0015000D;\/\/帐号已注册$/;"	v
jw_errorcode::REG_ERR_VERIFY	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int REG_ERR_VERIFY               = 0x00150001;  \/\/激活验证失败$/;"	v
jw_errorcode::RET_AUTH_ACCT_DISABLE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_DISABLE = 0x00080002;\/\/帐号被禁用$/;"	v
jw_errorcode::RET_AUTH_ACCT_FREEZ	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_FREEZ = 0x00080004;\/\/帐号被冻结(临时限制登陆)$/;"	v
jw_errorcode::RET_AUTH_ACCT_NOTACT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_NOTACT = 0x00080003;\/\/帐号未激活$/;"	v
jw_errorcode::RET_AUTH_ACCT_NOTEXIST	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_ACCT_NOTEXIST = 0x00080001;\/\/帐号不存在$/;"	v
jw_errorcode::RET_AUTH_DP_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_DP_ERROR = 0x0008000b;\/\/数据平台错误$/;"	v
jw_errorcode::RET_AUTH_PROTOCOL_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_PROTOCOL_ERROR = 0x00080009;\/\/认证协议不正确    $/;"	v
jw_errorcode::RET_AUTH_PWD_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_PWD_ERROR = 0x00080005;\/\/密码错误$/;"	v
jw_errorcode::RET_AUTH_SYSTEM_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_SYSTEM_ERROR = 0x00080008;\/\/认证服务器错误$/;"	v
jw_errorcode::RET_AUTH_TICKET_EXPIRE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_TICKET_EXPIRE = 0x00080007;\/\/票据已过期$/;"	v
jw_errorcode::RET_AUTH_TICKET_INVALID	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_AUTH_TICKET_INVALID = 0x00080006;\/\/票据不正确$/;"	v
jw_errorcode::RET_BIND_ACCOUNT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_ACCOUNT_ERR          = 0x02030005;\/\/账号不存在$/;"	v
jw_errorcode::RET_BIND_DB_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_DB_ERR               = 0x02030003;\/\/DB错误$/;"	v
jw_errorcode::RET_BIND_INVALID_CODE_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_INVALID_CODE_ERR     = 0x02030006;\/\/无效的验证码$/;"	v
jw_errorcode::RET_BIND_MOBILE_BINDED_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_MOBILE_BINDED_ERR    = 0x02030009; \/\/该手机号码已经被其它用户绑定$/;"	v
jw_errorcode::RET_BIND_MOBILE_UNBIND_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_MOBILE_UNBIND_ERR    = 0x02030008;\/\/要解除绑定的手机没有绑定任何应用$/;"	v
jw_errorcode::RET_BIND_NUMBER_LIMIT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_NUMBER_LIMIT_ERR     = 0x02030007;\/\/超过绑定号码个数$/;"	v
jw_errorcode::RET_BIND_PROTOCOL_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_PROTOCOL_ERR         = 0x02030002;\/\/协议错误$/;"	v
jw_errorcode::RET_BIND_SYSTEM_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_SYSTEM_ERR           = 0x02030001;\/\/系统错误$/;"	v
jw_errorcode::RET_BIND_UNSUPPORT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_BIND_UNSUPPORT_ERR        = 0x02030004;\/\/不支持的数据格式$/;"	v
jw_errorcode::RET_INFO_FIELD_LEN_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_FIELD_LEN_ERR = 0x00020003;\/\/字段长度错误$/;"	v
jw_errorcode::RET_INFO_FIELD_TYPE_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_FIELD_TYPE_ERR = 0x00020002;\/\/字段类型错误$/;"	v
jw_errorcode::RET_INFO_MOBILE_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_MOBILE_ERR = 0x00020004;\/\/错误的手机号码格式$/;"	v
jw_errorcode::RET_INFO_MOBILE_NOT_FOUND	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_MOBILE_NOT_FOUND = 0x00020005;\/\/没有找到对应的归属地$/;"	v
jw_errorcode::RET_INFO_SYS_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_INFO_SYS_ERR = 0x00020001; \/\/系统错误$/;"	v
jw_errorcode::RET_STK_COUNT_MAX_LIMIT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_COUNT_MAX_LIMIT_ERR = 0x00090004; \/\/达到系统允许的数量上限$/;"	v
jw_errorcode::RET_STK_DB_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_DB_ERR = 0x00090002;\/\/DB错误$/;"	v
jw_errorcode::RET_STK_DEFALUT_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_DEFALUT_ERR = 0x00090009;\/\/默认分组不能更改或者删除$/;"	v
jw_errorcode::RET_STK_NOTFOUND	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_NOTFOUND = 0x00090006;\/\/没找到$/;"	v
jw_errorcode::RET_STK_NO_STKRANK_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_NO_STKRANK_ERR = 0x0009000A;\/\/没有对应的股票排名$/;"	v
jw_errorcode::RET_STK_NO_STKSORT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_NO_STKSORT = 0x0009000B;\/\/没有自选股排序规则$/;"	v
jw_errorcode::RET_STK_OR_GRPUP_ERROR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_OR_GRPUP_ERROR = 0x00090007;\/\/股票信息或者自选股分组不存在$/;"	v
jw_errorcode::RET_STK_PROTOCOL_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_PROTOCOL_ERR = 0x00090003;\/\/协议错误$/;"	v
jw_errorcode::RET_STK_REPEATED	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_REPEATED = 0x00090008;\/\/股票已经存在$/;"	v
jw_errorcode::RET_STK_STRING_LEN_LIMIT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_STRING_LEN_LIMIT = 0x00090005; \/\/超出定义的string字段的长度$/;"	v
jw_errorcode::RET_STK_SYS_ERR	.\lib\libprotocol\include\jw_define.h	/^    const unsigned int RET_STK_SYS_ERR = 0x00090001; \/\/系统错误$/;"	v
jw_sourcetype	.\lib\libprotocol\include\jw_define.h	/^namespace jw_sourcetype$/;"	n
jw_sourcetype::SOURCE_TYPE_DYJ_CLIENT_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_GBS = 70;\/\/股博士$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_CLIENT_GGW	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_GGW = 68;\/\/股票管家$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_CLIENT_MANUAL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_MANUAL = 127;\/\/手工开通的帐号$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_CLIENT_MOBILE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_MOBILE = 72;\/\/手机终端$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_CLIENT_PCW	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_PCW = 66;\/\/评测王$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_CLIENT_TAO	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_TAO = 74;\/\/淘股天堂等金融终端$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_CLIENT_XGW	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_CLIENT_XGW = 64;\/\/选股王$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_MAX_CLIENT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_MAX_CLIENT = 127;$/;"	v
jw_sourcetype::SOURCE_TYPE_DYJ_MIN_CLIENT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_DYJ_MIN_CLIENT = 64;$/;"	v
jw_sourcetype::SOURCE_TYPE_HUAGUJIE	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_HUAGUJIE = 2;\/\/华股老街$/;"	v
jw_sourcetype::SOURCE_TYPE_IM_CLIENT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_IM_CLIENT = 1;\/\/IM$/;"	v
jw_sourcetype::SOURCE_TYPE_MAX_IM	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MAX_IM = 31;$/;"	v
jw_sourcetype::SOURCE_TYPE_MAX_WEB	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MAX_WEB = 63;$/;"	v
jw_sourcetype::SOURCE_TYPE_MIN_IM	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MIN_IM = 1;$/;"	v
jw_sourcetype::SOURCE_TYPE_MIN_WEB	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_MIN_WEB = 32;$/;"	v
jw_sourcetype::SOURCE_TYPE_STOCK_GAME_MANUAL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_STOCK_GAME_MANUAL = 126;\/\/炒股大赛手工开通的帐号$/;"	v
jw_sourcetype::SOURCE_TYPE_WEB_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_GBS = 36;\/\/WEB股博士$/;"	v
jw_sourcetype::SOURCE_TYPE_WEB_GBS_IMPORT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_GBS_IMPORT = 3;\/\/WEB 股博士导入的帐号$/;"	v
jw_sourcetype::SOURCE_TYPE_WEB_HOME	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_HOME = 33;\/\/788111门户$/;"	v
jw_sourcetype::SOURCE_TYPE_WEB_RT	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_RT = 35;\/\/炒股大赛$/;"	v
jw_sourcetype::SOURCE_TYPE_WEB_SNS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_SNS = 32;\/\/SNS社区$/;"	v
jw_sourcetype::SOURCE_TYPE_WEB_TAO	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char SOURCE_TYPE_WEB_TAO = 34;\/\/淘股天堂$/;"	v
jw_ticket_type	.\lib\libprotocol\include\jw_define.h	/^namespace jw_ticket_type$/;"	n
jw_ticket_type::TICKET_TYPE_CLIENT_GBS	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char TICKET_TYPE_CLIENT_GBS = 128;\/\/股博士认证票据$/;"	v
jw_ticket_type::TICKET_TYPE_JUMP_HUAGU_URL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char TICKET_TYPE_JUMP_HUAGU_URL = 2;\/\/跳转华股URL票据$/;"	v
jw_ticket_type::TICKET_TYPE_TERMINAL	.\lib\libprotocol\include\jw_define.h	/^    const unsigned char TICKET_TYPE_TERMINAL = 127;\/\/终端认证票据$/;"	v
key_	.\comm\ShmMap.h	/^	unsigned int key_;$/;"	m	class:CShmMap	access:private
lFloatShare	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lFloatShare;                         \/\/流通股$/;"	m	struct:JWStockDetail	access:public
lFloatShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t lFloatShare;               \/\/流通股$/;"	m	struct:JWMarketDataInfo	access:public
lTotalAmount	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lTotalAmount;                        \/\/成交总金额$/;"	m	struct:JWStockDetail	access:public
lTotalShare	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lTotalShare;                         \/\/总股本$/;"	m	struct:JWStockDetail	access:public
lTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^	uint64_t lTotalVolume;                        \/\/成交总量$/;"	m	struct:JWStockDetail	access:public
lTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t lTotalVolume;              \/\/成交总量$/;"	m	struct:JWMarketDataInfo	access:public
main	.\funds\src\main.cc	/^main()$/;"	f	signature:()
main	.\src\main.cc	/^main(int argc, char** argv)$/;"	f	signature:(int argc, char** argv)
map_	.\comm\HandlerBase.h	/^    boost::scoped_ptr<CShmMap> map_;$/;"	m	class:Handler::CHandlerBase	access:protected
mc_	.\comm\HandlerBase.h	/^    boost::scoped_ptr<CMemcachedHandler> mc_;$/;"	m	class:Handler::CHandlerBase	access:protected
memc_	.\comm\MemcachedHandler.h	/^	memcached_st* memc_;$/;"	m	class:Handler::CMemcachedHandler	access:private
nAttentionCount	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nAttentionCount;\/\/关注次数$/;"	m	struct:JWStockRankItem	access:public
nBirthday	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nBirthday;\/\/生日,如19800101格式的数字串$/;"	m	struct:JWGetBasicInfoRsp	access:public
nBirthday	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nBirthday;\/\/生日,如19800101格式的数字串$/;"	m	struct:JWSetBasicInfoReq	access:public
nBuyPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nBuyPx;           \/\/委买价$/;"	m	struct:JWBuyLevel	access:public
nBuyVolume	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nBuyVolume;       \/\/委买量$/;"	m	struct:JWBuyLevel	access:public
nClientIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nClientIP;\/\/客户端IP$/;"	m	struct:JWCheckTicketInfo	access:public
nClientIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nClientIP;\/\/客户端本机IP，无填0$/;"	m	struct:JWLoginInfo	access:public
nClientIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nClientIP;\/\/客户端本机IP，无填0$/;"	m	struct:JWModifyPwdInfo	access:public
nDataType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nDataType;\/\/上报数据类型,参见<用户数据上报格式说明.docx>$/;"	m	struct:JWStatReportInfo	access:public
nDayClose	.\comm\JsonFeildDef.h	/^const char* const nDayClose            = "A31"; \/\/3日或者5日或者其它日期的收盘价                                      $/;"	v
nDayClose	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nDayClose;\/\/3日或者5日或者其它日期的收盘价$/;"	m	struct:JWStkFundFlowData	access:public
nDayDate	.\comm\JsonFeildDef.h	/^const char* const nDayDate             = "A32"; \/\/                                                                     $/;"	v
nDayDate	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nDayDate;$/;"	m	struct:JWStkFundFlowData	access:public
nErrno	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nErrno;\/\/错误码$/;"	m	struct:JWCommonRsp	access:public
nExpire	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nExpire;\/\/验证码失效时间，单位秒$/;"	m	struct:JWBindMobileInfoRsp	access:public
nFaceType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nFaceType;\/\/头像类型,1:大头像，2：小头像$/;"	m	struct:JWGetBasicInfo	access:public
nFloatShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nFloatShare;                                 \/\/流通股$/;"	m	struct:JWStockInfoData	access:public
nFloatShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nFloatShare;          \/\/流通股$/;"	m	struct:JWStockBriefMacketData	access:public
nGender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nGender;\/\/性别$/;"	m	struct:JWGetBasicInfoRsp	access:public
nGender	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nGender;\/\/性别$/;"	m	struct:JWSetBasicInfoReq	access:public
nGetInterval	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGetInterval;\/\/下次拉取时间间隔$/;"	m	struct:JWUpdTicketInfoRsp	access:public
nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/分组ID$/;"	m	struct:JWAddStockInfo	access:public
nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/股票分组ID$/;"	m	struct:JWDelStockInfo	access:public
nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockInfo	access:public
nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockInfoRsp	access:public
nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockSortInfo	access:public
nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWGetStockSortRsp	access:public
nGroupID	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nGroupID;\/\/自选股分组ID$/;"	m	struct:JWSetStockSortInfo	access:public
nHighPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nHighPx;                         \/\/最高价$/;"	m	struct:JWStockDetail	access:public
nHighPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nHighPx;                   \/\/最高价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
nLastPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nLastPx;                         \/\/现价$/;"	m	struct:JWStockDetail	access:public
nLastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLastPx;                   \/\/现价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
nLastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLastPx;               \/\/现价$/;"	m	struct:JWMarketDataInfo	access:public
nLastPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLastPx;          \/\/现价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockBriefMacketData	access:public
nLowPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nLowPx;                          \/\/最低价$/;"	m	struct:JWStockDetail	access:public
nLowPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nLowPx;                    \/\/最低价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
nMarketType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nMarketType;\/\/市场类型$/;"	m	struct:JWStockKey	access:public
nMinDataNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nMinDataNum;              \/\/分时数据个数$/;"	m	struct:JWStockMinData	access:public
nNewsNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned nNewsNum;$/;"	m	struct:JWStockAllNewsData	access:public
nNewsNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nNewsNum;       \/\/ 拉取的新闻内容条数：1~20$/;"	m	struct:JWStockNewsNumInfo	access:public
nNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nNumber;\/\/数量$/;"	m	struct:JWGetBindMobileInfoRsp	access:public
nOpenPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nOpenPx;                         \/\/开盘价$/;"	m	struct:JWStockDetail	access:public
nOpenPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nOpenPx;                    \/\/开盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockMinData	access:public
nOpenPx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nOpenPx;          \/\/开盘价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockBriefMacketData	access:public
nPanCha	.\lib\libprotocol\include\jw_struct.h	/^	int nPanCha;                                  \/\/盘差$/;"	m	struct:JWStockDetail	access:public
nPanCha	.\lib\libprotocol\include\jw_struct.h	/^    int nPanCha;                   \/\/盘差，可能<0$/;"	m	struct:JWStockBriefMacketData	access:public
nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nPreClosePx;                     \/\/昨收价$/;"	m	struct:JWStockDetail	access:public
nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;                             \/\/昨收价$/;"	m	struct:JWStockInfoData	access:public
nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;                \/\/昨收价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockMinData	access:public
nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;           \/\/昨收价$/;"	m	struct:JWMarketDataInfo	access:public
nPreClosePx	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nPreClosePx;      \/\/昨收价，服务端 x1000，客户端 \/1000$/;"	m	struct:JWStockBriefMacketData	access:public
nRefVersion	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nRefVersion; \/\/codelist版本号$/;"	m	struct:JWStockGetRefereceDataRsp	access:public
nRegTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nRegTime;\/\/注册时间(UNIX TimeStamp)$/;"	m	struct:JWGetAccountRegTimeRsp	access:public
nSecuNewsTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSecuNewsTime;                            \/\/个股新闻时间(Mine\/GP, unix时间)$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
nSecuNewsTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSecuNewsTime;$/;"	m	struct:JWStockSingleNewsData	access:public
nSellPx	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nSellPx;          \/\/委卖价$/;"	m	struct:JWSellLevel	access:public
nSellVolume	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nSellVolume;      \/\/委卖量$/;"	m	struct:JWSellLevel	access:public
nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP$/;"	m	struct:JWLogoutInfo	access:public
nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（接入服务器取到的远端IP）$/;"	m	struct:JWCreateAccountInfo	access:public
nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（接入服务器取到的远端IP）$/;"	m	struct:JWLoginInfo	access:public
nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（接入服务器取到的远端IP）$/;"	m	struct:JWModifyPwdInfo	access:public
nSourceIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSourceIP;\/\/来源IP（外网IP）$/;"	m	struct:JWCheckTicketInfo	access:public
nSrcIP	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nSrcIP;\/\/用户来源IP地址$/;"	m	struct:JWStatReportInfo	access:public
nSrcType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nSrcType;\/\/上报数据的产品来源$/;"	m	struct:JWStatReportInfo	access:public
nStatus	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nStatus;\/\/排名状态: -1为排名下降；0为排名不变；1为排名上升；2为新增$/;"	m	struct:JWStockRankItem	access:public
nStatus	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char nStatus;\/\/帐号状态，0:已注册已激活，1：已注册未激活，2：未注册$/;"	m	struct:JWGetAccountStatusRsp	access:public
nStatus	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStatus;\/\/帐号状态$/;"	m	struct:JWLoginRsp	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^	unsigned short nStockIndex;                   \/\/股票索引$/;"	m	struct:JWStockDetail	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;                           \/\/股票索引$/;"	m	struct:JWStockInfoData	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;                       \/\/股票索引$/;"	m	struct:JWStkNewsContentInfo	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;                    \/\/个股索引$/;"	m	struct:JWStockRadarIndicatorInfo	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;              \/\/个股索引$/;"	m	struct:JWStockRadarIndicatorRsp	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;              \/\/股票索引$/;"	m	struct:JWStockMinData	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;         \/\/股票索引$/;"	m	struct:JWMarketDataInfo	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;    \/\/股票索引$/;"	m	struct:JWStockBriefMacketData	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;    \/\/股票索引$/;"	m	struct:JWStockNewsNumInfo	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex;$/;"	m	struct:JWStockAllNewsData	access:public
nStockIndex	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockIndex[JW_MAX_STOCK_NUM];  \/\/个股索引$/;"	m	struct:JWPullMarketDataInfo	access:public
nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/拉到的数量$/;"	m	struct:JWGetStockInfoRsp	access:public
nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/拉到的数量$/;"	m	struct:JWXXXXRsp	access:public
nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/自选股数量$/;"	m	struct:JWGetStockRankRsp	access:public
nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/自选股数量$/;"	m	struct:JWGetStockSortRsp	access:public
nStockNum	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNum;\/\/自选股数量$/;"	m	struct:JWSetStockSortInfo	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStockNumber;$/;"	m	struct:JWStockGetRefereceDataRsp	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                                \/\/股票个数$/;"	m	struct:JWBatchBriefMarketDataInfoRsp	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                      \/\/股票个数$/;"	m	struct:JWEarlyWarningRsp	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                   \/\/个股数量$/;"	m	struct:JWPullMarketDataInfo	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;                   \/\/个股行情数$/;"	m	struct:JWPullMarketDataRsp	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;$/;"	m	struct:JWBatchStockNewsNumInfo	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^    unsigned short nStockNumber;$/;"	m	struct:JWBatchStockNewsNumInfoRsp	access:public
nStockNumber	.\lib\libprotocol\include\jw_struct.h	/^   unsigned short nStockNumber;$/;"	m	struct:JWPullMinuteDataInfoRsp	access:public
nStockType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStockType;                              \/\/股票类型$/;"	m	struct:JWStockInfoData	access:public
nStockType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nStockType;                  \/\/市场类型$/;"	m	struct:JWStockMinData	access:public
nTotalAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalAmount;                  \/\/成交总金额，单位是元, 服务端 x1000，客户端 \/1000$/;"	m	struct:JWMinData	access:public
nTotalAmount	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalAmount;         \/\/成交总金额，单位是元$/;"	m	struct:JWStockBriefMacketData	access:public
nTotalShare	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalShare;                                 \/\/总股本$/;"	m	struct:JWStockInfoData	access:public
nTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalVolume;                  \/\/成交总量, 服务端\/100000，单位是手，客户端 x100$/;"	m	struct:JWMinData	access:public
nTotalVolume	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t nTotalVolume;         \/\/成交总量，单位是手，客户端 x100$/;"	m	struct:JWStockBriefMacketData	access:public
nTxTime	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nTxTime;                         \/\/交易时间$/;"	m	struct:JWStockDetail	access:public
nTxTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nTxTime;                   \/\/交易时间$/;"	m	struct:JWMinData	access:public
nTxTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nTxTime;               \/\/交易时间$/;"	m	struct:JWMarketDataInfo	access:public
nTxTime	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nTxTime;          \/\/交易时间$/;"	m	struct:JWStockBriefMacketData	access:public
nVerCounter	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nVerCounter;                         \/\/版本计数器。$/;"	m	struct:JWEarlyWarningRsp	access:public
nVerCounter	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nVerCounter;       \/\/版本计数器，股票服务器传递的值，需要回传给股票服务器，用于鉴别是否有新的数据$/;"	m	struct:JWEarlyWarningInfo	access:public
nVolumeRatio	.\lib\libprotocol\include\jw_struct.h	/^	unsigned int nVolumeRatio;                    \/\/量比$/;"	m	struct:JWStockDetail	access:public
nVolumeRatio	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int nVolumeRatio;      \/\/量比，服务端 \/10 (因为大赢家传的数据 已经x1000)，客户端 \/100$/;"	m	struct:JWStockBriefMacketData	access:public
nWeiBi	.\lib\libprotocol\include\jw_struct.h	/^	int nWeiBi;                                   \/\/委比$/;"	m	struct:JWStockDetail	access:public
nWeiCha	.\lib\libprotocol\include\jw_struct.h	/^	int nWeiCha;                                  \/\/委差$/;"	m	struct:JWStockDetail	access:public
name	.\lib\libprotocol\include\jw_struct.h	/^    char name[JW_MAX_NAME_LEN+1];\/\/用户姓名，,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfoRsp	access:public
name	.\lib\libprotocol\include\jw_struct.h	/^    char name[JW_MAX_NAME_LEN+1];\/\/用户姓名，,utf-8编码,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
offset_	.\comm\ShmMap.h	/^	unsigned int offset_;$/;"	m	class:CShmMap	access:private
opType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char opType;\/\/操作类型 0.绑定, 1.解除绑定    $/;"	m	struct:JWBindMobileInfoReq	access:public
opType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char opType;\/\/操作类型 0.绑定, 1.解除绑定$/;"	m	struct:JWBindVerifyInfoReq	access:public
operator =	.\lib\libprotocol\include\jw_struct.h	/^    JWStockNewsNumInfo& operator=(const JWStockNewsNumInfo &rs)$/;"	f	struct:JWStockNewsNumInfo	access:public	signature:(const JWStockNewsNumInfo &rs)
operatorStyle	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int operatorStyle;\/\/操盘风格 ,每一bit代表一项  0：短线 1：中线 2：长线 $/;"	m	struct:JWAccountInfoRsp	access:public
operatorStyle	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int operatorStyle;\/\/操盘风格 ,每一bit代表一项  0：短线 1：中线 2：长线 $/;"	m	struct:JWRegAccountInfo	access:public
password	.\lib\libprotocol\include\jw_struct.h	/^    char password[JW_MAX_PWD_LEN+1];\/\/ 小写的md5密码,32字节$/;"	m	struct:JWRegAccountInfo	access:public
port_	.\comm\TcpClient.h	/^    unsigned short port_;$/;"	m	class:CTcpClient	access:private
productType	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int productType;\/\/嵌入页面类型，$/;"	m	struct:JWRegAccountInfo	access:public
qwSeq	.\lib\libprotocol\include\jw_struct.h	/^    uint64_t qwSeq;\/\/流水号$/;"	m	struct:JWPayTicketIncomeInfo	access:public
reg_time	.\lib\libprotocol\include\jw_struct.h	/^    unsigned int reg_time;\/\/注册时间，YYYYMMDD格式。$/;"	m	struct:JWAccountInfoRsp	access:public
shm_head_	.\comm\ShmMap.h	/^	MapItem* shm_head_;$/;"	m	class:CShmMap	access:private
shm_id_	.\comm\ShmMap.h	/^	int shm_id_;$/;"	m	class:CShmMap	access:private
size	.\comm\ShmMap.h	/^	unsigned short size() const { return offset_; }$/;"	f	class:CShmMap	access:public	signature:() const
socketfd_	.\comm\TcpClient.h	/^    int	socketfd_;$/;"	m	class:CTcpClient	access:private
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];$/;"	m	struct:JWGetAccountStatusInfo	access:public
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/用户帐号$/;"	m	struct:JWGetAccountRegTimeInfo	access:public
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/用户帐号信息$/;"	m	struct:JWGetUserAccountRsp	access:public
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/用户帐号信息$/;"	m	struct:JWStatReportInfo	access:public
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWCreateAccountInfo	access:public
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWLoginInfo	access:public
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWModifyPwdInfo	access:public
szAccount	.\lib\libprotocol\include\jw_struct.h	/^    char szAccount[JW_MAX_ACCOUNT_LEN + 1];\/\/帐号$/;"	m	struct:JWResetPwdInfo	access:public
szAlias	.\lib\libprotocol\include\jw_struct.h	/^    char szAlias[JW_MAX_ACCOUNT_LEN + 1];\/\/用户登录别名$/;"	m	struct:JWSetUserAliasInfo	access:public
szAlias	.\lib\libprotocol\include\jw_struct.h	/^    char szAlias[JW_MAX_ALIAS_NUM][JW_MAX_ACCOUNT_LEN + 1];\/\/用户登录别名$/;"	m	struct:JWGetUserAliasInfoRsp	access:public
szAreaCode	.\lib\libprotocol\include\jw_struct.h	/^    char szAreaCode[JW_MAX_AREA_CODE_LEN + 1];\/\/手机归属区号$/;"	m	struct:JWGetMobileAreaInfoRsp	access:public
szCity	.\lib\libprotocol\include\jw_struct.h	/^    char szCity[JW_MAX_CITY_LEN + 1];\/\/手机归属城市$/;"	m	struct:JWGetMobileAreaInfoRsp	access:public
szContent	.\lib\libprotocol\include\jw_struct.h	/^    char szContent[JW_MAX_CONTENT_LEN + 1];\/\/上报内容,长度限制为4K$/;"	m	struct:JWStatReportInfo	access:public
szDCode	.\lib\libprotocol\include\jw_struct.h	/^    char szDCode[JW_MAX_DCODE_LEN + 1];\/\/动态码$/;"	m	struct:JWLoginInfo	access:public
szDCode	.\lib\libprotocol\include\jw_struct.h	/^    char szDCode[JW_MAX_DCODE_LEN + 1];\/\/动态码$/;"	m	struct:JWModifyPwdInfo	access:public
szEmail	.\lib\libprotocol\include\jw_struct.h	/^    char szEmail[JW_MAX_MAIL_LEN+1];\/\/邮件登录地址$/;"	m	struct:JWRegAccountRsp	access:public
szErrMsg	.\lib\libprotocol\include\jw_struct.h	/^    char szErrMsg[JW_MAX_ERR_MSG_LEN + 1];\/\/错误信息$/;"	m	struct:JWCommonRsp	access:public
szFaceURL	.\lib\libprotocol\include\jw_struct.h	/^    char szFaceURL[JW_MAX_URL_LEN + 1];\/\/头像URL$/;"	m	struct:JWGetBasicInfoRsp	access:public
szMobile	.\lib\libprotocol\include\jw_struct.h	/^    char szMobile[JW_MAX_MOBILE_LEN + 1];\/\/手机号码$/;"	m	struct:JWBindItemInfo	access:public
szMobile	.\lib\libprotocol\include\jw_struct.h	/^    char szMobile[JW_MAX_MOBILE_LEN + 1];\/\/手机号码$/;"	m	struct:JWBindMobileInfoReq	access:public
szMobile	.\lib\libprotocol\include\jw_struct.h	/^    char szMobile[JW_MAX_MOBILE_LEN + 1];\/\/手机号码$/;"	m	struct:JWBindVerifyInfoReq	access:public
szMobileNumber	.\lib\libprotocol\include\jw_struct.h	/^    char szMobileNumber[JW_MAX_MOBILE_LEN + 1];$/;"	m	struct:JWGetMobileAreaByNumber	access:public
szName	.\lib\libprotocol\include\jw_struct.h	/^    char szName[JW_MAX_NAME_LEN + 1];\/\/姓名$/;"	m	struct:JWGetBasicInfoRsp	access:public
szName	.\lib\libprotocol\include\jw_struct.h	/^    char szName[JW_MAX_NAME_LEN + 1];\/\/姓名$/;"	m	struct:JWSetBasicInfoReq	access:public
szName	.\lib\libprotocol\include\jw_struct.h	/^    char szName[JW_MAX_NAME_LEN + 1];\/\/用户昵称$/;"	m	struct:JWCreateAccountInfo	access:public
szNewPwd	.\lib\libprotocol\include\jw_struct.h	/^    char szNewPwd[JW_MAX_PWD_LEN + 1];\/\/用户密码(md5 32)$/;"	m	struct:JWModifyPwdInfo	access:public
szNewPwd	.\lib\libprotocol\include\jw_struct.h	/^    char szNewPwd[JW_MAX_PWD_LEN + 1];\/\/用户新密码$/;"	m	struct:JWResetPwdRsp	access:public
szNewsContent	.\lib\libprotocol\include\jw_struct.h	/^    char szNewsContent[JW_NEW_CONTENT_LEN];                \/\/新闻内容$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
szNewsMedia	.\lib\libprotocol\include\jw_struct.h	/^    char szNewsMedia[JW_NEWSMEDIA_LEN];                    \/\/新闻出处$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
szOrderID	.\lib\libprotocol\include\jw_struct.h	/^    char szOrderID[JW_MAX_ORDERID_LEN +1];\/\/订单号$/;"	m	struct:JWPayTicketIncomeInfo	access:public
szPasswd	.\lib\libprotocol\include\jw_struct.h	/^    char szPasswd[JW_MAX_PWD_LEN + 1];\/\/密码  $/;"	m	struct:JWCreateAccountInfo	access:public
szProductID	.\lib\libprotocol\include\jw_struct.h	/^    char szProductID[JW_MAX_PRODUCT_ID_LEN + 1];\/\/商品编号$/;"	m	struct:JWIncomeItem	access:public
szProviance	.\lib\libprotocol\include\jw_struct.h	/^    char szProviance[JW_MAX_PROVIANCE_LEN + 1];\/\/手机归属省份$/;"	m	struct:JWGetMobileAreaInfoRsp	access:public
szSecuFid	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuFid[JW_MAX_SECUFID_LEN];               \/\/新闻内容ID串（该值为拉取自选股时候从服务器中取到的SecuFid）$/;"	m	struct:JWStkNewsContentInfo	access:public
szSecuFid	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuFid[JW_MAX_SECUFID_LEN];$/;"	m	struct:JWStockSingleNewsData	access:public
szSecuNewsTitle	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuNewsTitle[JW_MAX_SECU_NEWS_TITLE_LEN];      \/\/个股新闻标题(Mine\/GP)$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
szSecuNewsTitle	.\lib\libprotocol\include\jw_struct.h	/^    char szSecuNewsTitle[JW_MAX_SECU_NEWS_TITLE_LEN];$/;"	m	struct:JWStockSingleNewsData	access:public
szStockCode	.\lib\libprotocol\include\jw_struct.h	/^    char szStockCode[JW_MAX_STOCKCODE_LEN];               \/\/股票代码$/;"	m	struct:JWStockInfoData	access:public
szStockCode	.\lib\libprotocol\include\jw_struct.h	/^    char szStockCode[JW_MAX_STOCKCODE_LEN]; \/\/股票代码（utf-8编码）$/;"	m	struct:JWStockMinData	access:public
szStockCode	.\lib\libprotocol\include\jw_struct.h	/^    char szStockCode[JW_MAX_STOCK_CODE_LEN + 1];\/\/股票代码$/;"	m	struct:JWStockKey	access:public
szStockName	.\lib\libprotocol\include\jw_struct.h	/^    char szStockName[JW_MAX_STOCK_NAME_LEN];               \/\/股票名称$/;"	m	struct:JWStkNewsContentInfoRsp	access:public
szStockName	.\lib\libprotocol\include\jw_struct.h	/^    char szStockName[JW_MAX_STOCK_NAME_LEN];              \/\/股票名称$/;"	m	struct:JWStockInfoData	access:public
szStockShortName	.\lib\libprotocol\include\jw_struct.h	/^    char szStockShortName[JW_STOCK_SHORT_NAME_LEN];       \/\/股票简称$/;"	m	struct:JWStockInfoData	access:public
szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/票据$/;"	m	struct:JWUpdTicketInfoRsp	access:public
szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWCheckTicketInfo	access:public
szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWLoginInfo	access:public
szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWLoginRsp	access:public
szTicket	.\lib\libprotocol\include\jw_struct.h	/^    char szTicket[JW_MAX_TICKET_LEN + 1];\/\/认证票据$/;"	m	struct:JWModifyPwdInfo	access:public
szVerifyCode	.\lib\libprotocol\include\jw_struct.h	/^    char szVerifyCode[JW_MAX_VERIFY_CODE_LEN + 1];\/\/验证码$/;"	m	struct:JWBindVerifyInfoReq	access:public
tagMapHead	.\comm\ShmMap.h	/^typedef struct tagMapHead$/;"	s
tagMapHead::item_num	.\comm\ShmMap.h	/^	unsigned int item_num;		$/;"	m	struct:tagMapHead	access:public
tagMapItem	.\comm\ShmMap.h	/^	tagMapItem()$/;"	f	struct:tagMapItem	access:public	signature:()
tagMapItem	.\comm\ShmMap.h	/^typedef struct tagMapItem$/;"	s
tagMapItem::code	.\comm\ShmMap.h	/^	char code[7];$/;"	m	struct:tagMapItem	access:public
tagMapItem::index	.\comm\ShmMap.h	/^	unsigned short index;$/;"	m	struct:tagMapItem	access:public
tagMapItem::tagMapItem	.\comm\ShmMap.h	/^	tagMapItem()$/;"	f	struct:tagMapItem	access:public	signature:()
tagMapItem::~tagMapItem	.\comm\ShmMap.h	/^	~tagMapItem() {}$/;"	f	struct:tagMapItem	access:public	signature:()
ticket	.\lib\libprotocol\include\jw_struct.h	/^    char ticket[JW_MAX_TICKET_LEN+1];$/;"	m	struct:JWAuthInfoRsp	access:public
type	.\lib\libprotocol\include\jw_struct.h	/^    unsigned char type; \/\/票据类型$/;"	m	struct:JWAuthInfo	access:public
uint64_t	.\lib\libprotocol\include\jw_struct.h	/^typedef unsigned __int64 uint64_t;$/;"	t
verify_code	.\lib\libprotocol\include\jw_struct.h	/^    char verify_code[JW_MAX_DCODE_LEN+1];\/\/激活码,utf-8编码,\\0结束$/;"	m	struct:JWActiveAccountInfo	access:public
verify_code	.\lib\libprotocol\include\jw_struct.h	/^    char verify_code[JW_MAX_DCODE_LEN+1];\/\/激活码,utf-8编码,\\0结束$/;"	m	struct:JWRegAccountInfo	access:public
verify_code	.\lib\libprotocol\include\jw_struct.h	/^    char verify_code[JW_MAX_VERIFY_CODE_LEN+1];\/\/激活码,utf-8编码,\\0结束$/;"	m	struct:JWAccountInfoRsp	access:public
~CFinanceAnysHandler	.\inc\FinanceAnysHandler.h	/^	~CFinanceAnysHandler() {}$/;"	f	class:Handler::CFinanceAnysHandler	access:public	signature:()
~CFundAluHandler	.\inc\FundAluHandler.h	/^    ~CFundAluHandler() {}$/;"	f	class:Handler::CFundAluHandler	access:public	signature:()
~CFundDtlHandler	.\inc\FundDtlHandler.h	/^    ~CFundDtlHandler() {}$/;"	f	class:Handler::CFundDtlHandler	access:public	signature:()
~CFundFinanceHandler	.\inc\FundFinanceHandler.h	/^    ~CFundFinanceHandler() {}$/;"	f	class:Handler::CFundFinanceHandler	access:public	signature:()
~CFundHandler	.\funds\inc\FundHandler.h	/^    virtual ~CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
~CFundHandler	.\inc\FundHandler.h	/^    virtual ~CFundHandler() {}$/;"	f	class:Handler::CFundHandler	access:public	signature:()
~CFundInduHandler	.\inc\FundInduHandler.h	/^    ~CFundInduHandler() {}$/;"	f	class:Handler::CFundInduHandler	access:public	signature:()
~CHandlerBase	.\comm\HandlerBase.cc	/^CHandlerBase::~CHandlerBase() {}$/;"	f	class:Handler::CHandlerBase	signature:()
~CHandlerBase	.\comm\HandlerBase.h	/^    virtual ~CHandlerBase();$/;"	p	class:Handler::CHandlerBase	access:public	signature:()
~CHandlerFactory	.\inc\HandlerFactory.h	/^    virtual ~CHandlerFactory();$/;"	p	class:Handler::CHandlerFactory	access:public	signature:()
~CHandlerFactory	.\src\HandlerFactory.cc	/^CHandlerFactory::~CHandlerFactory() $/;"	f	class:Handler::CHandlerFactory	signature:()
~CMemcachedHandler	.\comm\MemcachedHandler.cc	/^CMemcachedHandler::~CMemcachedHandler()$/;"	f	class:Handler::CMemcachedHandler	signature:()
~CMemcachedHandler	.\comm\MemcachedHandler.h	/^	~CMemcachedHandler();$/;"	p	class:Handler::CMemcachedHandler	access:public	signature:()
~CShmMap	.\comm\ShmMap.h	/^	~CShmMap() {}$/;"	f	class:CShmMap	access:public	signature:()
~CTcpClient	.\comm\TcpClient.cc	/^CTcpClient::~CTcpClient()$/;"	f	class:CTcpClient	signature:()
~CTcpClient	.\comm\TcpClient.h	/^    ~CTcpClient();$/;"	p	class:CTcpClient	access:public	signature:()
~CTrendAnysHandler	.\inc\TrendAnysHandler.h	/^    ~CTrendAnysHandler() {}$/;"	f	class:Handler::CTrendAnysHandler	access:public	signature:()
~CTrendMarketHandler	.\inc\TrendMarketHandler.h	/^    ~CTrendMarketHandler() {}$/;"	f	class:Handler::CTrendMarketHandler	access:public	signature:()
~tagMapItem	.\comm\ShmMap.h	/^	~tagMapItem() {}$/;"	f	struct:tagMapItem	access:public	signature:()
